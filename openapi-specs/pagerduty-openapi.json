{
  "openapi": "3.0.0",
  "info": {
    "title": "PagerDuty API",
    "description": "This document describes the PagerDuty REST APIs.\n\nFor guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)\n\nOur REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).\n\nNote that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields.\n\n\nContact Support:\n Name: PagerDuty Support\n Email: support@pagerduty.com",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://{{baseurl}}"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Abilities",
      "description": "This describes your account's abilities by feature name. For example `\"teams\"`.\nAn ability may be available to your account based on things like your pricing plan or account state.\n"
    },
    {
      "name": "Add-ons",
      "description": "Developers can write their own functionality to insert into PagerDuty's UI.\n"
    },
    {
      "name": "Analytics",
      "description": "Provides enriched incident data.\n"
    },
    {
      "name": "Audit",
      "description": "Provides audit record data.\n"
    },
    {
      "name": "Business Services",
      "description": "Business services model capabilities that span multiple technical services and that may be owned by several different teams.\n"
    },
    {
      "name": "Change Events",
      "description": "Change Events enable you to send informational events about recent changes such as code deploys and system config changes from any system that can make an outbound HTTP connection. These events do not create incidents and do not send notifications; they are shown in context with incidents on the same PagerDuty service.\n"
    },
    {
      "name": "Escalation Policies",
      "description": "Escalation policies define which user should be alerted at which time.\n"
    },
    {
      "name": "Extension Schemas",
      "description": "A PagerDuty extension vendor represents a specific type of outbound extension such as Generic Webhook, Slack, ServiceNow.\n"
    },
    {
      "name": "Extensions",
      "description": "Extensions are representations of Extension Schema objects that are attached to Services.\n"
    },
    {
      "name": "Incidents",
      "description": "An incident represents a problem or an issue that needs to be addressed and resolved. Incidents trigger on a service, which prompts notifications to go out to on-call responders per the service's escalation policy.\n"
    },
    {
      "name": "Log Entries",
      "description": "A log of all the events that happen to an Incident, and these are exposed as Log Entries.\n"
    },
    {
      "name": "Maintenance Windows",
      "description": "A Maintenance Window is used to temporarily disable one or more Services for a set period of time.\n"
    },
    {
      "name": "Notifications",
      "description": "A Notification is created when an Incident is triggered or escalated.\n"
    },
    {
      "name": "On-Calls",
      "description": "An on-call represents a contiguous unit of time for which a User will be on call for a given Escalation Policy and Escalation Rules\n"
    },
    {
      "name": "Priorities",
      "description": "A priority is a label representing the importance and impact of an incident. This feature is only available on Standard and Enterprise plans.\n"
    },
    {
      "name": "Response Plays",
      "description": "Response Plays are a package of Incident Actions that can be applied during an Incident's life cycle.\n"
    },
    {
      "name": "Rulesets",
      "description": "Rulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.\n"
    },
    {
      "name": "Schedules",
      "description": "A Schedule determines the time periods that users are On-Call.\n"
    },
    {
      "name": "Service Dependencies",
      "description": "Services are categorized into technical and business services. Dependencies can be created via any combination of these services.\n"
    },
    {
      "name": "Services",
      "description": "A Service may represent an application, component, or team you wish to open incidents against.\n"
    },
    {
      "name": "Webhooks",
      "description": "A webhook is a way to receive events that occur on the PagerDuty platform via an HTTP POST request.\nV3 webhooks are set up by creating a webhook subscription.\n"
    },
    {
      "name": "Status Dashboards",
      "description": "Status Dashboards represent user-defined views for the Status Dashboard product that are limited to specific Business Services rather than the whole set of top-level Business Services (those with no dependent Services).\n"
    },
    {
      "name": "Tags",
      "description": "A Tag is applied to EScalation Policies, Teams or Users and can be used to filter them.\n"
    },
    {
      "name": "Teams",
      "description": "A team is a collection of Users and Escalation Policies that represent a group of people within an organization.\n"
    },
    {
      "name": "Users",
      "description": "Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n"
    },
    {
      "name": "Vendors",
      "description": "A PagerDuty Vendor represents a specific type of integration. AWS Cloudwatch, Splunk, Datadog are all examples of vendors\n"
    }
  ],
  "paths": {
    "/abilities": {
      "get": {
        "tags": [
          "Abilities"
        ],
        "summary": "List abilities",
        "description": "List all of your account's abilities, by name.\n\n\"Abilities\" describes your account's capabilities by feature name. For example `\"teams\"`.\n\nAn ability may be available to your account based on things like your pricing plan or account state.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#abilities)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "abilities": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/abilities/{id}": {
      "get": {
        "tags": [
          "Abilities"
        ],
        "summary": "Test an ability",
        "description": "Test whether your account has a given ability.\n\n\"Abilities\" describes your account's capabilities by feature name. For example `\"teams\"`.\n\nAn ability may be available to your account based on things like your pricing plan or account state.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#abilities)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addons": {
      "get": {
        "tags": [
          "Add-ons"
        ],
        "summary": "List installed Add-ons",
        "description": "List all of the Add-ons installed on your account.\n\nAddon's are pieces of functionality that developers can write to insert new functionality into PagerDuty's UI.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#add-ons)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional Models to include in response.",
            "example": "<string>"
          },
          {
            "name": "service_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the results, showing only Add-ons for the given services",
            "example": "<string>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the results, showing only Add-ons of the given type",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "addons": [
                    {
                      "src": "<url>",
                      "name": "<string>",
                      "type": "<string>"
                    },
                    {
                      "src": "<url>",
                      "name": "<string>",
                      "type": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Add-ons"
        ],
        "summary": "Install an Add-on",
        "description": "Install an Add-on for your account.\n\nAddon's are pieces of functionality that developers can write to insert new functionality into PagerDuty's UI.\n\nGiven a configuration containing a `src` parameter, that URL will be embedded in an `iframe` on a page that's available to users from a drop-down menu.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#add-ons)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "addon": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "src": "<url>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "addon": {
                    "src": "<url>",
                    "name": "<string>",
                    "type": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addons/{id}": {
      "get": {
        "tags": [
          "Add-ons"
        ],
        "summary": "Get an Add-on",
        "description": "Get details about an existing Add-on.\n\nAddon's are pieces of functionality that developers can write to insert new functionality into PagerDuty's UI.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#add-ons)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "addon": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "src": "<url>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Add-ons"
        ],
        "summary": "Delete an Add-on",
        "description": "Remove an existing Add-on.\n\nAddon's are pieces of functionality that developers can write to insert new functionality into PagerDuty's UI.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#add-ons)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Add-ons"
        ],
        "summary": "Update an Add-on",
        "description": "Update an existing Add-on.\n\nAddon's are pieces of functionality that developers can write to insert new functionality into PagerDuty's UI.\n\nGiven a configuration containing a `src` parameter, that URL will be embedded in an `iframe` on a page that's available to users from a drop-down menu.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#add-ons)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "addon": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "src": "<url>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "addon": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "src": "<url>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analytics/metrics/incidents/all": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get aggregated incident data",
        "description": "Provides aggregated enriched metrics for incidents.\n\nThe provided metrics are aggregated by day, week, month using the aggregate_unit parameter, or for the entire period if no aggregate_unit is provided.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.\n<!-- theme: info -->\n> A `team_ids` or `service_ids` filter is required for [user-level API keys](https://support.pagerduty.com/docs/using-the-api#section-generating-a-personal-rest-api-key) or keys generated through an OAuth flow. Account-level API keys do not have this requirement.\n<!-- theme: info -->\n> **Note:** Analytics data is updated once per day. It takes up to 24 hours before new incidents appear in the Analytics API.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "filters": {
                    "created_at_start": "<string>",
                    "created_at_end": "<string>",
                    "urgency": "<string>",
                    "major": "<boolean>",
                    "team_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "service_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_names": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "time_zone": "<string>",
                  "aggregate_unit": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time.  You __MUST__ pass in this header and the above value.  Do not use this endpoint in production, as it may change!\n",
            "example": "analytics-v2",
            "required": true
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "data": [
                    {
                      "service_id": "<string>",
                      "service_name": "<string>",
                      "team_id": "<string>",
                      "team_name": "<string>",
                      "mean_seconds_to_resolve": "<integer>",
                      "mean_seconds_to_first_ack": "<integer>",
                      "mean_seconds_to_engage": "<integer>",
                      "mean_seconds_to_mobilize": "<integer>",
                      "mean_engaged_seconds": "<integer>",
                      "mean_engaged_user_count": "<integer>",
                      "total_escalation_count": "<integer>",
                      "mean_assignment_count": "<integer>",
                      "total_business_hour_interruptions": "<integer>",
                      "total_sleep_hour_interruptions": "<integer>",
                      "total_off_hour_interruptions": "<integer>",
                      "total_snoozed_seconds": "<integer>",
                      "total_engaged_seconds": "<integer>",
                      "up_time_pct": "<number>",
                      "user_defined_effort_seconds": "<integer>"
                    },
                    {
                      "service_id": "<string>",
                      "service_name": "<string>",
                      "team_id": "<string>",
                      "team_name": "<string>",
                      "mean_seconds_to_resolve": "<integer>",
                      "mean_seconds_to_first_ack": "<integer>",
                      "mean_seconds_to_engage": "<integer>",
                      "mean_seconds_to_mobilize": "<integer>",
                      "mean_engaged_seconds": "<integer>",
                      "mean_engaged_user_count": "<integer>",
                      "total_escalation_count": "<integer>",
                      "mean_assignment_count": "<integer>",
                      "total_business_hour_interruptions": "<integer>",
                      "total_sleep_hour_interruptions": "<integer>",
                      "total_off_hour_interruptions": "<integer>",
                      "total_snoozed_seconds": "<integer>",
                      "total_engaged_seconds": "<integer>",
                      "up_time_pct": "<number>",
                      "user_defined_effort_seconds": "<integer>"
                    }
                  ],
                  "filters": {
                    "created_at_start": "<string>",
                    "created_at_end": "<string>",
                    "urgency": "<string>",
                    "major": "<boolean>",
                    "team_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "service_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_names": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "time_zone": "<string>",
                  "aggregate_unit": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analytics/metrics/incidents/services": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get aggregated service data",
        "description": "Provides aggregated metrics for incidents aggregated into units of time by service.\n\nExample metrics include Seconds to Resolve, Seconds to Engage, Snoozed Seconds, and Sleep Hour Interruptions. Some metric definitions can be found in our [Knowledge Base](https://support.pagerduty.com/docs/pagerduty-analytics).\nData can be aggregated by day, week or month in addition to by service, or provided just as a collection of aggregates for each service in the dataset for the entire period.  If a unit is provided, each row in the returned dataset will include a 'range_start' timestamp.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.\n<!-- theme: info -->\n> A `team_ids` or `service_ids` filter is required for [user-level API keys](https://support.pagerduty.com/docs/using-the-api#section-generating-a-personal-rest-api-key) or keys generated through an OAuth flow. Account-level API keys do not have this requirement.\n<!-- theme: info -->\n> **Note:** Analytics data is updated once per day. It takes up to 24 hours before new incidents appear in the Analytics API.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "filters": {
                    "created_at_start": "<string>",
                    "created_at_end": "<string>",
                    "urgency": "<string>",
                    "major": "<boolean>",
                    "team_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "service_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_names": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "time_zone": "<string>",
                  "aggregate_unit": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time.  You __MUST__ pass in this header and the above value.  Do not use this endpoint in production, as it may change!\n",
            "example": "analytics-v2",
            "required": true
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "data": [
                    {
                      "service_id": "<string>",
                      "service_name": "<string>",
                      "team_id": "<string>",
                      "team_name": "<string>",
                      "mean_seconds_to_resolve": "<integer>",
                      "mean_seconds_to_first_ack": "<integer>",
                      "mean_seconds_to_engage": "<integer>",
                      "mean_seconds_to_mobilize": "<integer>",
                      "mean_engaged_seconds": "<integer>",
                      "mean_engaged_user_count": "<integer>",
                      "total_escalation_count": "<integer>",
                      "mean_assignment_count": "<integer>",
                      "total_business_hour_interruptions": "<integer>",
                      "total_sleep_hour_interruptions": "<integer>",
                      "total_off_hour_interruptions": "<integer>",
                      "total_snoozed_seconds": "<integer>",
                      "total_engaged_seconds": "<integer>",
                      "up_time_pct": "<number>",
                      "user_defined_effort_seconds": "<integer>"
                    },
                    {
                      "service_id": "<string>",
                      "service_name": "<string>",
                      "team_id": "<string>",
                      "team_name": "<string>",
                      "mean_seconds_to_resolve": "<integer>",
                      "mean_seconds_to_first_ack": "<integer>",
                      "mean_seconds_to_engage": "<integer>",
                      "mean_seconds_to_mobilize": "<integer>",
                      "mean_engaged_seconds": "<integer>",
                      "mean_engaged_user_count": "<integer>",
                      "total_escalation_count": "<integer>",
                      "mean_assignment_count": "<integer>",
                      "total_business_hour_interruptions": "<integer>",
                      "total_sleep_hour_interruptions": "<integer>",
                      "total_off_hour_interruptions": "<integer>",
                      "total_snoozed_seconds": "<integer>",
                      "total_engaged_seconds": "<integer>",
                      "up_time_pct": "<number>",
                      "user_defined_effort_seconds": "<integer>"
                    }
                  ],
                  "filters": {
                    "created_at_start": "<string>",
                    "created_at_end": "<string>",
                    "urgency": "<string>",
                    "major": "<boolean>",
                    "team_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "service_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_names": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "time_zone": "<string>",
                  "aggregate_unit": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analytics/metrics/incidents/teams": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get aggregated team data",
        "description": "Provides aggregated metrics for incidents aggregated into units of time by team.\n\nExample metrics include Seconds to Resolve, Seconds to Engage, Snoozed Seconds, and Sleep Hour Interruptions. Some metric definitions can be found in our [Knowledge Base](https://support.pagerduty.com/docs/pagerduty-analytics).\nData can be aggregated by day, week or month in addition to by team, or provided just as a collection of aggregates for each team in the dataset for the entire period.  If a unit is provided, each row in the returned dataset will include a 'range_start' timestamp.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.\n<!-- theme: info -->\n> A `team_ids` or `service_ids` filter is required for [user-level API keys](https://support.pagerduty.com/docs/using-the-api#section-generating-a-personal-rest-api-key) or keys generated through an OAuth flow. Account-level API keys do not have this requirement.\n<!-- theme: info -->\n> **Note:** Analytics data is updated once per day. It takes up to 24 hours before new incidents appear in the Analytics API.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "filters": {
                    "created_at_start": "<string>",
                    "created_at_end": "<string>",
                    "urgency": "<string>",
                    "major": "<boolean>",
                    "team_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "service_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_names": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "time_zone": "<string>",
                  "aggregate_unit": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time.  You __MUST__ pass in this header and the above value.  Do not use this endpoint in production, as it may change!\n",
            "example": "analytics-v2",
            "required": true
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "data": [
                    {
                      "service_id": "<string>",
                      "service_name": "<string>",
                      "team_id": "<string>",
                      "team_name": "<string>",
                      "mean_seconds_to_resolve": "<integer>",
                      "mean_seconds_to_first_ack": "<integer>",
                      "mean_seconds_to_engage": "<integer>",
                      "mean_seconds_to_mobilize": "<integer>",
                      "mean_engaged_seconds": "<integer>",
                      "mean_engaged_user_count": "<integer>",
                      "total_escalation_count": "<integer>",
                      "mean_assignment_count": "<integer>",
                      "total_business_hour_interruptions": "<integer>",
                      "total_sleep_hour_interruptions": "<integer>",
                      "total_off_hour_interruptions": "<integer>",
                      "total_snoozed_seconds": "<integer>",
                      "total_engaged_seconds": "<integer>",
                      "up_time_pct": "<number>",
                      "user_defined_effort_seconds": "<integer>"
                    },
                    {
                      "service_id": "<string>",
                      "service_name": "<string>",
                      "team_id": "<string>",
                      "team_name": "<string>",
                      "mean_seconds_to_resolve": "<integer>",
                      "mean_seconds_to_first_ack": "<integer>",
                      "mean_seconds_to_engage": "<integer>",
                      "mean_seconds_to_mobilize": "<integer>",
                      "mean_engaged_seconds": "<integer>",
                      "mean_engaged_user_count": "<integer>",
                      "total_escalation_count": "<integer>",
                      "mean_assignment_count": "<integer>",
                      "total_business_hour_interruptions": "<integer>",
                      "total_sleep_hour_interruptions": "<integer>",
                      "total_off_hour_interruptions": "<integer>",
                      "total_snoozed_seconds": "<integer>",
                      "total_engaged_seconds": "<integer>",
                      "up_time_pct": "<number>",
                      "user_defined_effort_seconds": "<integer>"
                    }
                  ],
                  "filters": {
                    "created_at_start": "<string>",
                    "created_at_end": "<string>",
                    "urgency": "<string>",
                    "major": "<boolean>",
                    "team_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "service_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_names": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "time_zone": "<string>",
                  "aggregate_unit": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analytics/raw/incidents": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get raw data - multiple incidents",
        "description": "Provides enriched incident data and metrics for multiple incidents.\n\nExample metrics include Seconds to Resolve, Seconds to Engage, Snoozed Seconds, and Sleep Hour Interruptions. Some metric definitions can be found in our [Knowledge Base](https://support.pagerduty.com/docs/pagerduty-analytics).\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.\n<!-- theme: info -->\n> A `team_ids` or `service_ids` filter is required for [user-level API keys](https://support.pagerduty.com/docs/using-the-api#section-generating-a-personal-rest-api-key) or keys generated through an OAuth flow. Account-level API keys do not have this requirement.\n<!-- theme: info -->\n> **Note:** Analytics data is updated once per day. It takes up to 24 hours before new incidents appear in the Analytics API.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "filters": {
                    "created_at_start": "<string>",
                    "created_at_end": "<string>",
                    "urgency": "<string>",
                    "major": "<boolean>",
                    "team_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "service_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_names": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "starting_after": "<string>",
                  "ending_before": "<string>",
                  "order": "<string>",
                  "order_by": "<string>",
                  "limit": "<integer>",
                  "time_zone": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time.  You __MUST__ pass in this header and the above value.  Do not use this endpoint in production, as it may change!\n",
            "example": "analytics-v2",
            "required": true
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "first": "<string>",
                  "last": "<string>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "order": "<string>",
                  "order_by": "<string>",
                  "time_zone": "<string>",
                  "data": [
                    {
                      "id": "<string>",
                      "team_id": "<string>",
                      "service_id": "<string>",
                      "created_at": "<string>",
                      "resolved_at": "<string>",
                      "urgency": "<string>",
                      "major": "<boolean>",
                      "priority_id": "<string>",
                      "priority_name": "<string>",
                      "priority_order": "<integer>",
                      "seconds_to_resolve": "<integer>",
                      "seconds_to_first_ack": "<integer>",
                      "seconds_to_engage": "<integer>",
                      "seconds_to_mobilize": "<integer>",
                      "engaged_seconds": "<integer>",
                      "engaged_user_count": "<integer>",
                      "escalation_count": "<integer>",
                      "assignment_count": "<integer>",
                      "business_hour_interruptions": "<integer>",
                      "sleep_hour_interruptions": "<integer>",
                      "off_hour_interruptions": "<integer>",
                      "snoozed_seconds": "<integer>"
                    },
                    {
                      "id": "<string>",
                      "team_id": "<string>",
                      "service_id": "<string>",
                      "created_at": "<string>",
                      "resolved_at": "<string>",
                      "urgency": "<string>",
                      "major": "<boolean>",
                      "priority_id": "<string>",
                      "priority_name": "<string>",
                      "priority_order": "<integer>",
                      "seconds_to_resolve": "<integer>",
                      "seconds_to_first_ack": "<integer>",
                      "seconds_to_engage": "<integer>",
                      "seconds_to_mobilize": "<integer>",
                      "engaged_seconds": "<integer>",
                      "engaged_user_count": "<integer>",
                      "escalation_count": "<integer>",
                      "assignment_count": "<integer>",
                      "business_hour_interruptions": "<integer>",
                      "sleep_hour_interruptions": "<integer>",
                      "off_hour_interruptions": "<integer>",
                      "snoozed_seconds": "<integer>"
                    }
                  ],
                  "filters": {
                    "created_at_start": "<string>",
                    "created_at_end": "<string>",
                    "urgency": "<string>",
                    "major": "<boolean>",
                    "team_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "service_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_ids": [
                      "<string>",
                      "<string>"
                    ],
                    "priority_names": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analytics/raw/incidents/{id}": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get raw data - single incident",
        "description": "Provides enriched incident data and metrics for a single incident.\n\nExample metrics include Seconds to Resolve, Seconds to Engage, Snoozed Seconds, and Sleep Hour Interruptions. Some metric definitions can be found in our [Knowledge Base](https://support.pagerduty.com/docs/pagerduty-analytics).\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.\n<!-- theme: info -->\n> **Note:** Analytics data is updated once per day. It takes up to 24 hours before new incidents appear in the Analytics API.\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time.  You __MUST__ pass in this header and the above value.  Do not use this endpoint in production, as it may change!\n",
            "example": "analytics-v2",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "team_id": "<string>",
                  "service_id": "<string>",
                  "created_at": "<string>",
                  "resolved_at": "<string>",
                  "urgency": "<string>",
                  "major": "<boolean>",
                  "priority_id": "<string>",
                  "priority_name": "<string>",
                  "priority_order": "<integer>",
                  "seconds_to_resolve": "<integer>",
                  "seconds_to_first_ack": "<integer>",
                  "seconds_to_engage": "<integer>",
                  "seconds_to_mobilize": "<integer>",
                  "engaged_seconds": "<integer>",
                  "engaged_user_count": "<integer>",
                  "escalation_count": "<integer>",
                  "assignment_count": "<integer>",
                  "business_hour_interruptions": "<integer>",
                  "sleep_hour_interruptions": "<integer>",
                  "off_hour_interruptions": "<integer>",
                  "snoozed_seconds": "<integer>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/audit/records": {
      "get": {
        "tags": [
          "Audit"
        ],
        "summary": "List audit records",
        "description": "List audit trail records matching provided query params or default criteria.\n\nThe returned records are sorted by the `execution_time` from newest to oldest.\n\nSee [`Cursor-based pagination`](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for instructions on how to paginate through the result set.\n\nOnly admins, account owners, or global API tokens on PagerDuty account [pricing plans](https://www.pagerduty.com/pricing) with the \"Audit Trail\" feature can access this endpoint.\n\nFor other role based access to audit records by resource ID, see the resource's API documentation.\n\nFor more information see the [Audit API Document](https://developer.pagerduty.com/docs/rest-api-v2/audit-records-api/).\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The minimum of the `limit` parameter used in the request or the maximum request size of the API.",
            "example": "<integer>"
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter used to request the \"next\" set of results from an API.  The value provided here is most commonly obtained from the `next_cursor` field of the previous request.  When no value is provided, the request starts at the beginning of the result set.\n",
            "example": "<string>"
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search. If not specified, defaults to `now() - 24 hours` (past 24 hours)",
            "example": "<dateTime>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the date range over which you want to search. If not specified, defaults to `now()`",
            "example": "<dateTime>"
          },
          {
            "name": "root_resource_types[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Resource type filter for the root_resource.",
            "example": "<string>"
          },
          {
            "name": "actor_type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Actor type filter.",
            "example": "<string>"
          },
          {
            "name": "actor_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Actor Id filter. Must be qualified by providing the `actor_type` param.",
            "example": "<string>"
          },
          {
            "name": "method_type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Method type filter.",
            "example": "<string>"
          },
          {
            "name": "method_truncated_token",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Method truncated_token filter. Must be qualified by providing the `method_type` param.",
            "example": "<string>"
          },
          {
            "name": "actions[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Action filter",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "records": [
                    {
                      "id": "<string>",
                      "execution_time": "<dateTime>",
                      "method": {
                        "type": "<string>",
                        "description": "<string>",
                        "truncated_token": "<string>"
                      },
                      "root_resource": {},
                      "action": "<string>",
                      "self": "<string>",
                      "execution_context": {
                        "request_id": "<string>",
                        "remote_address": "<string>"
                      },
                      "details": {
                        "resource": {},
                        "fields": [
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          }
                        ],
                        "references": [
                          {
                            "name": "<string>",
                            "description": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>"
                          }
                        ]
                      }
                    },
                    {
                      "id": "<string>",
                      "execution_time": "<dateTime>",
                      "method": {
                        "type": "<string>",
                        "description": "<string>",
                        "truncated_token": "<string>"
                      },
                      "root_resource": {},
                      "action": "<string>",
                      "self": "<string>",
                      "execution_context": {
                        "request_id": "<string>",
                        "remote_address": "<string>"
                      },
                      "details": {
                        "resource": {},
                        "fields": [
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          }
                        ],
                        "references": [
                          {
                            "name": "<string>",
                            "description": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>"
                          }
                        ]
                      }
                    }
                  ],
                  "response_metadata": {
                    "messages": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "limit": "<integer>",
                  "next_cursor": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/business_services": {
      "get": {
        "tags": [
          "Business Services"
        ],
        "summary": "List Business Services",
        "description": "List existing Business Services.\n\nBusiness services model capabilities that span multiple technical services and that may be owned by several different teams.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#business-services)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "business_services": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "description": "<string>",
                      "point_of_contact": "<string>",
                      "team": {
                        "id": "<string>",
                        "type": "<string>",
                        "self": "<url>"
                      }
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "description": "<string>",
                      "point_of_contact": "<string>",
                      "team": {
                        "id": "<string>",
                        "type": "<string>",
                        "self": "<url>"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Business Services"
        ],
        "summary": "Create a Business Service",
        "description": "Create a new Business Service.\n\nBusiness services model capabilities that span multiple technical services and that may be owned by several different teams.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#business-services)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "business_service": {
                    "name": "<string>",
                    "description": "<string>",
                    "point_of_contact": "<string>",
                    "team": {
                      "id": "<string>"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "business_service": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "point_of_contact": "<string>",
                    "team": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/business_services/{id}": {
      "get": {
        "tags": [
          "Business Services"
        ],
        "summary": "Get a Business Service",
        "description": "Get details about an existing Business Service.\n\nBusiness services model capabilities that span multiple technical services and that may be owned by several different teams.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#business-services)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "business_service": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "point_of_contact": "<string>",
                    "team": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Business Services"
        ],
        "summary": "Delete a Business Service",
        "description": "Delete an existing Business Service.\n\nOnce the service is deleted, it will not be accessible from the web UI and new incidents won't be able to be created for this service.\n\nBusiness services model capabilities that span multiple technical services and that may be owned by several different teams.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#business-services)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Business Services"
        ],
        "summary": "Update a Business Service",
        "description": "Update an existing Business Service. NOTE that this endpoint also accepts the PATCH verb.\n\nBusiness services model capabilities that span multiple technical services and that may be owned by several different teams.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#business-services)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "business_service": {
                    "name": "<string>",
                    "description": "<string>",
                    "point_of_contact": "<string>",
                    "team": {
                      "id": "<string>"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "business_service": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "point_of_contact": "<string>",
                    "team": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/business_services/{id}/account_subscription": {
      "post": {
        "tags": [
          "Business Services"
        ],
        "summary": "Create Business Service Account Subscription",
        "description": "Subscribe your Account to a Business Service.",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "account_is_subscribed": "<boolean>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Business Services"
        ],
        "summary": "Delete Business Service Account Subscription",
        "description": "Unsubscribe your Account from a Business Service.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/business_services/{id}/subscribers": {
      "get": {
        "tags": [
          "Business Services"
        ],
        "summary": "List Business Service Subscribers",
        "description": "Retrieve a list of Notification Subscribers on the Business Service.\n\n<!-- theme: warning -->\n> Users must be added through `POST /business_services/{id}/subscribers` to be returned from this endpoint.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "subscribers": [
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>"
                    },
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>"
                    }
                  ],
                  "account_id": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Business Services"
        ],
        "summary": "Create Business Service Subscribers",
        "description": "Subscribe the given entities to the given Business Service.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "subscribers": [
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "subscriptions": [
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>",
                      "subscribable_id": "<string>",
                      "subscribable_type": "<string>",
                      "account_id": "<string>",
                      "result": "<string>"
                    },
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>",
                      "subscribable_id": "<string>",
                      "subscribable_type": "<string>",
                      "account_id": "<string>",
                      "result": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/business_services/{id}/supporting_services/impacts": {
      "get": {
        "tags": [
          "Business Services"
        ],
        "summary": "List the supporting Business Services for the given Business Service Id, sorted by impacted status.",
        "description": "Retrieve of Business Services that support the given Business Service sorted by highest Impact with `status` included.\nThis endpoint does not return an exhaustive list of Business Services but rather provides access to the most impacted up to the limit of 200.\n\nThe returned Business Services are sorted first by Impact, secondarily by most recently impacted, and finally by name.\n\nTo get impact information about a specific set of Business Services, use the `ids[]` parameter on the `/business_services/impacts` endpoint.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `business-impact-early-access`. Do not use this endpoint in production, as it may change!",
            "example": "business-impact-early-access",
            "required": true
          },
          {
            "name": "additional_fields[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Provides access to additional fields such as highest priority per business service and total impacted count",
            "example": "<string>"
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The IDs of the resources.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "services": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "type": "<string>",
                      "status": "<string>",
                      "additional_fields": {
                        "highest_impacting_priority": {
                          "id": "<string>",
                          "order": "<integer>"
                        }
                      }
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "type": "<string>",
                      "status": "<string>",
                      "additional_fields": {
                        "highest_impacting_priority": {
                          "id": "<string>",
                          "order": "<integer>"
                        }
                      }
                    }
                  ],
                  "additional_fields": {
                    "total_impacted_count": "<integer>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/business_services/{id}/unsubscribe": {
      "post": {
        "tags": [
          "Business Services"
        ],
        "summary": "Remove Business Service Subscribers",
        "description": "Unsubscribes the matching Subscribers from a Business Service.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "subscribers": [
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deleted_count": "<number>",
                  "unauthorized_count": "<number>",
                  "non_existent_count": "<number>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/business_services/impactors": {
      "get": {
        "tags": [
          "Business Services"
        ],
        "summary": "List Impactors affecting Business Services",
        "description": "Retrieve a list of Impactors for the top-level Business Services on the account. Impactors are currently limited to Incidents.\n\nThis endpoint does not return an exhaustive list of Impactors but rather provides access to the highest priority Impactors for the Business Services in question up to the limit of 200.\n\nTo get Impactors for a specific set of Business Services, use the `ids[]` parameter.\n\nThe returned Impactors are sorted first by priority and secondarily by their creation date.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `business-impact-early-access`. Do not use this endpoint in production, as it may change!",
            "example": "business-impact-early-access",
            "required": true
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The IDs of the resources.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "impactors": [
                    {
                      "id": "<string>",
                      "type": "<string>"
                    },
                    {
                      "id": "<string>",
                      "type": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/business_services/impacts": {
      "get": {
        "tags": [
          "Business Services"
        ],
        "summary": "List Business Services sorted by impacted status",
        "description": "Retrieve a list top-level Business Services sorted by highest Impact with `status` included.\nWhen called without the `ids[]` parameter, this endpoint does not return an exhaustive list of Business Services but rather provides access to the most impacted up to the limit of 200.\n\nThe returned Business Services are sorted first by Impact, secondarily by most recently impacted, and finally by name.\n\nTo get impact information about a specific set of Business Services, use the `ids[]` parameter.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `business-impact-early-access`. Do not use this endpoint in production, as it may change!",
            "example": "business-impact-early-access",
            "required": true
          },
          {
            "name": "additional_fields[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Provides access to additional fields such as highest priority per business service and total impacted count",
            "example": "<string>"
          },
          {
            "name": "ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The IDs of the resources.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "services": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "type": "<string>",
                      "status": "<string>",
                      "additional_fields": {
                        "highest_impacting_priority": {
                          "id": "<string>",
                          "order": "<integer>"
                        }
                      }
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "type": "<string>",
                      "status": "<string>",
                      "additional_fields": {
                        "highest_impacting_priority": {
                          "id": "<string>",
                          "order": "<integer>"
                        }
                      }
                    }
                  ],
                  "additional_fields": {
                    "total_impacted_count": "<integer>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/business_services/priority_thresholds": {
      "get": {
        "tags": [
          "Business Services"
        ],
        "summary": "Get the global priority threshold for a Business Service to be considered impacted by an Incident",
        "description": "Retrieves the priority threshold information for an account.  Currently, there is a `global_threshold` that can be set for the account.  Incidents that have a priority meeting or exceeding this threshold will be considered impacting on any Business Service that depends on the Service to which the Incident belongs.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `business-impact-early-access`. Do not use this endpoint in production, as it may change!",
            "example": "business-impact-early-access",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "global_threshold": {
                    "id": "<string>",
                    "order": "<integer>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Business Services"
        ],
        "summary": "Deletes the account-level priority threshold for Business Service impact",
        "description": "Clears the Priority Threshold for the account.  If the priority threshold is cleared, any Incident with a Priority set will be able to impact Business Services.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `business-impact-early-access`. Do not use this endpoint in production, as it may change!",
            "example": "business-impact-early-access",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Business Services"
        ],
        "summary": "Set the Account-level priority threshold for Business Service impact.",
        "description": "Set the Account-level priority threshold for Business Service.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "global_threshold": {
                    "id": "<string>",
                    "order": "<number>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `business-impact-early-access`. Do not use this endpoint in production, as it may change!",
            "example": "business-impact-early-access",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "global_threshold": {
                    "id": "<string>",
                    "order": "<number>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        }
      }
    },
    "/change_events": {
      "get": {
        "tags": [
          "Change Events"
        ],
        "summary": "List Change Events",
        "description": "List all of the existing Change Events.\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "team_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "An array of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.",
            "example": "<string>"
          },
          {
            "name": "integration_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "An array of integration IDs. Only results related to these integrations will be returned.",
            "example": "<string>"
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search, as a UTC ISO 8601 datetime string. Will return an HTTP 400 for non-UTC datetimes.",
            "example": "<dateTime>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the date range over which you want to search, as a UTC ISO 8601 datetime string. Will return an HTTP 400 for non-UTC datetimes.",
            "example": "<dateTime>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "change_events": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "timestamp": "<dateTime>",
                      "services": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "integration": {
                        "type": "<string>"
                      },
                      "routing_key": "<string>",
                      "source": "<string>",
                      "links": [
                        {
                          "href": "<string>",
                          "text": "<string>"
                        },
                        {
                          "href": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "images": [
                        {
                          "src": "<string>",
                          "href": "<string>",
                          "alt": "<string>"
                        },
                        {
                          "src": "<string>",
                          "href": "<string>",
                          "alt": "<string>"
                        }
                      ],
                      "custom_details": "<object>"
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "timestamp": "<dateTime>",
                      "services": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "integration": {
                        "type": "<string>"
                      },
                      "routing_key": "<string>",
                      "source": "<string>",
                      "links": [
                        {
                          "href": "<string>",
                          "text": "<string>"
                        },
                        {
                          "href": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "images": [
                        {
                          "src": "<string>",
                          "href": "<string>",
                          "alt": "<string>"
                        },
                        {
                          "src": "<string>",
                          "href": "<string>",
                          "alt": "<string>"
                        }
                      ],
                      "custom_details": "<object>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Change Events"
        ],
        "summary": "Create a Change Event",
        "description": "Sending Change Events is documented as part of the V2 Events API. See [`Send Change Event`](https://developer.pagerduty.com/api-reference/reference/events-v2/openapiv3.json/paths/~1change~1enqueue/post).\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        }
      }
    },
    "/change_events/{id}": {
      "get": {
        "tags": [
          "Change Events"
        ],
        "summary": "Get a Change Event",
        "description": "Get details about an existing Change Event.\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "change_event": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "timestamp": "<dateTime>",
                    "services": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "integration": {
                      "type": "<string>"
                    },
                    "routing_key": "<string>",
                    "source": "<string>",
                    "links": [
                      {
                        "href": "<string>",
                        "text": "<string>"
                      },
                      {
                        "href": "<string>",
                        "text": "<string>"
                      }
                    ],
                    "images": [
                      {
                        "src": "<string>",
                        "href": "<string>",
                        "alt": "<string>"
                      },
                      {
                        "src": "<string>",
                        "href": "<string>",
                        "alt": "<string>"
                      }
                    ],
                    "custom_details": "<object>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Change Events"
        ],
        "summary": "Update a Change Event",
        "description": "Update an existing Change Event\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "change_event": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "timestamp": "<dateTime>",
                    "services": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "integration": {
                      "type": "<string>"
                    },
                    "routing_key": "<string>",
                    "source": "<string>",
                    "links": [
                      {
                        "href": "<string>",
                        "text": "<string>"
                      },
                      {
                        "href": "<string>",
                        "text": "<string>"
                      }
                    ],
                    "images": [
                      {
                        "src": "<string>",
                        "href": "<string>",
                        "alt": "<string>"
                      },
                      {
                        "src": "<string>",
                        "href": "<string>",
                        "alt": "<string>"
                      }
                    ],
                    "custom_details": "<object>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "change_event": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "timestamp": "<dateTime>",
                    "services": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "integration": {
                      "type": "<string>"
                    },
                    "routing_key": "<string>",
                    "source": "<string>",
                    "links": [
                      {
                        "href": "<string>",
                        "text": "<string>"
                      },
                      {
                        "href": "<string>",
                        "text": "<string>"
                      }
                    ],
                    "images": [
                      {
                        "src": "<string>",
                        "href": "<string>",
                        "alt": "<string>"
                      },
                      {
                        "src": "<string>",
                        "href": "<string>",
                        "alt": "<string>"
                      }
                    ],
                    "custom_details": "<object>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/related_change_events": {
      "get": {
        "tags": [
          "Change Events"
        ],
        "summary": "List related Change Events for an Incident",
        "description": "List related Change Events for an Incident, as well as the reason these changes are correlated with the incident.\n\nChange events represent service changes such as deploys, build completion, and configuration changes, providing information that is critical during incident triage or hypercare. For more information on change events, see [Change Events](https://support.pagerduty.com/docs/change-events).\n\nThe Change Correlation feature provides incident responders with recent change events that are most relevant to that incident. Change Correlation informs the responder why a particular change event was surfaced and correlated to an incident based on three key factors which include time, related service, or intelligence (machine learning).",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "change_events": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "timestamp": "<dateTime>",
                      "services": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "integration": {
                        "type": "<string>"
                      },
                      "routing_key": "<string>",
                      "source": "<string>",
                      "links": [
                        {
                          "href": "<string>",
                          "text": "<string>"
                        },
                        {
                          "href": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "images": [
                        {
                          "src": "<string>",
                          "href": "<string>",
                          "alt": "<string>"
                        },
                        {
                          "src": "<string>",
                          "href": "<string>",
                          "alt": "<string>"
                        }
                      ],
                      "custom_details": "<object>",
                      "correlation_reason": {
                        "reason": "<string>"
                      }
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "timestamp": "<dateTime>",
                      "services": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "integration": {
                        "type": "<string>"
                      },
                      "routing_key": "<string>",
                      "source": "<string>",
                      "links": [
                        {
                          "href": "<string>",
                          "text": "<string>"
                        },
                        {
                          "href": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "images": [
                        {
                          "src": "<string>",
                          "href": "<string>",
                          "alt": "<string>"
                        },
                        {
                          "src": "<string>",
                          "href": "<string>",
                          "alt": "<string>"
                        }
                      ],
                      "custom_details": "<object>",
                      "correlation_reason": {
                        "reason": "<string>"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{id}/change_events": {
      "get": {
        "tags": [
          "Change Events"
        ],
        "summary": "List Change Events for a service",
        "description": "List all of the existing Change Events for a service.\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search, as a UTC ISO 8601 datetime string. Will return an HTTP 400 for non-UTC datetimes.",
            "example": "<dateTime>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the date range over which you want to search, as a UTC ISO 8601 datetime string. Will return an HTTP 400 for non-UTC datetimes.",
            "example": "<dateTime>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "team_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "An array of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.",
            "example": "<string>"
          },
          {
            "name": "integration_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "An array of integration IDs. Only results related to these integrations will be returned.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "change_events": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "timestamp": "<dateTime>",
                      "services": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "integration": {
                        "type": "<string>"
                      },
                      "routing_key": "<string>",
                      "source": "<string>",
                      "links": [
                        {
                          "href": "<string>",
                          "text": "<string>"
                        },
                        {
                          "href": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "images": [
                        {
                          "src": "<string>",
                          "href": "<string>",
                          "alt": "<string>"
                        },
                        {
                          "src": "<string>",
                          "href": "<string>",
                          "alt": "<string>"
                        }
                      ],
                      "custom_details": "<object>"
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "timestamp": "<dateTime>",
                      "services": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "integration": {
                        "type": "<string>"
                      },
                      "routing_key": "<string>",
                      "source": "<string>",
                      "links": [
                        {
                          "href": "<string>",
                          "text": "<string>"
                        },
                        {
                          "href": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "images": [
                        {
                          "src": "<string>",
                          "href": "<string>",
                          "alt": "<string>"
                        },
                        {
                          "src": "<string>",
                          "href": "<string>",
                          "alt": "<string>"
                        }
                      ],
                      "custom_details": "<object>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/escalation_policies": {
      "get": {
        "tags": [
          "Escalation Policies"
        ],
        "summary": "List escalation policies",
        "description": "List all of the existing escalation policies.\n\nEscalation policies define which user should be alerted at which time.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#escalation-policies)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the result, showing only the tags whose labels match the query.",
            "example": "<string>"
          },
          {
            "name": "user_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the results, showing only escalation policies on which any of the users is a target.",
            "example": "<string>"
          },
          {
            "name": "team_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "An array of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.",
            "example": "<string>"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional Models to include in response.",
            "example": "<string>"
          },
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Used to specify the field you wish to sort the results on.",
            "example": "name"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "escalation_policies": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "description": "<string>",
                      "num_loops": 0,
                      "on_call_handoff_notifications": "<string>",
                      "escalation_rules": [
                        {
                          "escalation_delay_in_minutes": "<integer>",
                          "targets": [
                            {
                              "type": "<string>"
                            }
                          ],
                          "id": "<string>"
                        },
                        {
                          "escalation_delay_in_minutes": "<integer>",
                          "targets": [
                            {
                              "type": "<string>"
                            }
                          ],
                          "id": "<string>"
                        }
                      ],
                      "services": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ]
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "description": "<string>",
                      "num_loops": 0,
                      "on_call_handoff_notifications": "<string>",
                      "escalation_rules": [
                        {
                          "escalation_delay_in_minutes": "<integer>",
                          "targets": [
                            {
                              "type": "<string>"
                            }
                          ],
                          "id": "<string>"
                        },
                        {
                          "escalation_delay_in_minutes": "<integer>",
                          "targets": [
                            {
                              "type": "<string>"
                            }
                          ],
                          "id": "<string>"
                        }
                      ],
                      "services": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Escalation Policies"
        ],
        "summary": "Create an escalation policy",
        "description": "Creates a new escalation policy. At least one escalation rule must be provided.\n\nEscalation policies define which user should be alerted at which time.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#escalation-policies)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "escalation_policy": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "num_loops": 0,
                    "on_call_handoff_notifications": "<string>",
                    "escalation_rules": [
                      {
                        "escalation_delay_in_minutes": "<integer>",
                        "targets": [
                          {
                            "type": "<string>"
                          }
                        ],
                        "id": "<string>"
                      },
                      {
                        "escalation_delay_in_minutes": "<integer>",
                        "targets": [
                          {
                            "type": "<string>"
                          }
                        ],
                        "id": "<string>"
                      }
                    ],
                    "services": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The email address of a valid user associated with the account making the request. This is optional, and is only used for change tracking.",
            "example": "<email>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "escalation_policy": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "num_loops": 0,
                    "on_call_handoff_notifications": "<string>",
                    "escalation_rules": [
                      {
                        "escalation_delay_in_minutes": "<integer>",
                        "targets": [
                          {
                            "type": "<string>"
                          }
                        ],
                        "id": "<string>"
                      },
                      {
                        "escalation_delay_in_minutes": "<integer>",
                        "targets": [
                          {
                            "type": "<string>"
                          }
                        ],
                        "id": "<string>"
                      }
                    ],
                    "services": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/escalation_policies/{id}": {
      "get": {
        "tags": [
          "Escalation Policies"
        ],
        "summary": "Get an escalation policy",
        "description": "Get information about an existing escalation policy and its rules.\n\nEscalation policies define which user should be alerted at which time.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#escalation-policies)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional Models to include in response.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "escalation_policy": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "num_loops": 0,
                    "on_call_handoff_notifications": "<string>",
                    "escalation_rules": [
                      {
                        "escalation_delay_in_minutes": "<integer>",
                        "targets": [
                          {
                            "type": "<string>"
                          }
                        ],
                        "id": "<string>"
                      },
                      {
                        "escalation_delay_in_minutes": "<integer>",
                        "targets": [
                          {
                            "type": "<string>"
                          }
                        ],
                        "id": "<string>"
                      }
                    ],
                    "services": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Escalation Policies"
        ],
        "summary": "Delete an escalation policy",
        "description": "Deletes an existing escalation policy and rules. The escalation policy must not be in use by any services.\n\nEscalation policies define which user should be alerted at which time.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#escalation-policies)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Escalation Policies"
        ],
        "summary": "Update an escalation policy",
        "description": "Updates an existing escalation policy and rules.\n\nEscalation policies define which user should be alerted at which time.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#escalation-policies)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "escalation_policy": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "num_loops": 0,
                    "on_call_handoff_notifications": "<string>",
                    "escalation_rules": [
                      {
                        "escalation_delay_in_minutes": "<integer>",
                        "targets": [
                          {
                            "type": "<string>"
                          }
                        ],
                        "id": "<string>"
                      },
                      {
                        "escalation_delay_in_minutes": "<integer>",
                        "targets": [
                          {
                            "type": "<string>"
                          }
                        ],
                        "id": "<string>"
                      }
                    ],
                    "services": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "escalation_policy": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "num_loops": 0,
                    "on_call_handoff_notifications": "<string>",
                    "escalation_rules": [
                      {
                        "escalation_delay_in_minutes": "<integer>",
                        "targets": [
                          {
                            "type": "<string>"
                          }
                        ],
                        "id": "<string>"
                      },
                      {
                        "escalation_delay_in_minutes": "<integer>",
                        "targets": [
                          {
                            "type": "<string>"
                          }
                        ],
                        "id": "<string>"
                      }
                    ],
                    "services": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/escalation_policies/{id}/audit/records": {
      "get": {
        "tags": [
          "Escalation Policies"
        ],
        "summary": "List audit records for an escalation policy",
        "description": "The returned records are sorted by the `execution_time` from newest to oldest.\n\nSee [`Cursor-based pagination`](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for instructions on how to paginate through the result set.\n\nFor more information see the [Audit API Document](https://developer.pagerduty.com/docs/rest-api-v2/audit-records-api/).\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The minimum of the `limit` parameter used in the request or the maximum request size of the API.",
            "example": "<integer>"
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter used to request the \"next\" set of results from an API.  The value provided here is most commonly obtained from the `next_cursor` field of the previous request.  When no value is provided, the request starts at the beginning of the result set.\n",
            "example": "<string>"
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search. If not specified, defaults to `now() - 24 hours` (past 24 hours)",
            "example": "<dateTime>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the date range over which you want to search. If not specified, defaults to `now()`",
            "example": "<dateTime>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "records": [
                    {
                      "id": "<string>",
                      "execution_time": "<dateTime>",
                      "method": {
                        "type": "<string>",
                        "description": "<string>",
                        "truncated_token": "<string>"
                      },
                      "root_resource": {},
                      "action": "<string>",
                      "self": "<string>",
                      "execution_context": {
                        "request_id": "<string>",
                        "remote_address": "<string>"
                      },
                      "details": {
                        "resource": {},
                        "fields": [
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          }
                        ],
                        "references": [
                          {
                            "name": "<string>",
                            "description": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>"
                          }
                        ]
                      }
                    },
                    {
                      "id": "<string>",
                      "execution_time": "<dateTime>",
                      "method": {
                        "type": "<string>",
                        "description": "<string>",
                        "truncated_token": "<string>"
                      },
                      "root_resource": {},
                      "action": "<string>",
                      "self": "<string>",
                      "execution_context": {
                        "request_id": "<string>",
                        "remote_address": "<string>"
                      },
                      "details": {
                        "resource": {},
                        "fields": [
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          }
                        ],
                        "references": [
                          {
                            "name": "<string>",
                            "description": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>"
                          }
                        ]
                      }
                    }
                  ],
                  "response_metadata": {
                    "messages": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "limit": "<integer>",
                  "next_cursor": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/extension_schemas": {
      "get": {
        "tags": [
          "Extension Schemas"
        ],
        "summary": "List extension schemas",
        "description": "List all extension schemas.\n\nA PagerDuty extension vendor represents a specific type of outbound extension such as Generic Webhook, Slack, ServiceNow.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#extension-schemas)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "extension_schemas": [
                    {
                      "icon_url": "<url>",
                      "logo_url": "<url>",
                      "label": "<string>",
                      "key": "<string>",
                      "description": "<string>",
                      "guide_url": "<url>",
                      "send_types": [
                        "<string>"
                      ],
                      "url": "<string>"
                    },
                    {
                      "icon_url": "<url>",
                      "logo_url": "<url>",
                      "label": "<string>",
                      "key": "<string>",
                      "description": "<string>",
                      "guide_url": "<url>",
                      "send_types": [
                        "<string>"
                      ],
                      "url": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/extension_schemas/{id}": {
      "get": {
        "tags": [
          "Extension Schemas"
        ],
        "summary": "Get an extension vendor",
        "description": "Get details about one specific extension vendor.\n\nA PagerDuty extension vendor represents a specific type of outbound extension such as Generic Webhook, Slack, ServiceNow.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#extension-schemas)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "extension_schema": {
                    "icon_url": "<url>",
                    "logo_url": "<url>",
                    "label": "<string>",
                    "key": "<string>",
                    "description": "<string>",
                    "guide_url": "<url>",
                    "send_types": [
                      "<string>"
                    ],
                    "url": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/extensions": {
      "get": {
        "tags": [
          "Extensions"
        ],
        "summary": "List extensions",
        "description": "List existing extensions.\n\nExtensions are representations of Extension Schema objects that are attached to Services.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#extensions)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the result, showing only the tags whose labels match the query.",
            "example": "<string>"
          },
          {
            "name": "extension_object_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The id of the extension object you want to filter by.",
            "example": "<string>"
          },
          {
            "name": "extension_schema_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter the extensions by extension vendor id.",
            "example": "<string>"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional details to include.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "extensions": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "endpoint_url": "<url>",
                      "extension_objects": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "extension_schema": {
                        "type": "<string>"
                      },
                      "temporarily_disabled": false,
                      "config": "<object>"
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "endpoint_url": "<url>",
                      "extension_objects": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "extension_schema": {
                        "type": "<string>"
                      },
                      "temporarily_disabled": false,
                      "config": "<object>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Extensions"
        ],
        "summary": "Create an extension",
        "description": "Create a new Extension.\n\nExtensions are representations of Extension Schema objects that are attached to Services.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#extensions)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "extension": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "endpoint_url": "<url>",
                    "extension_objects": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "extension_schema": {
                      "type": "<string>"
                    },
                    "temporarily_disabled": false,
                    "config": "<object>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "extension": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "endpoint_url": "<url>",
                    "extension_objects": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "extension_schema": {
                      "type": "<string>"
                    },
                    "temporarily_disabled": false,
                    "config": "<object>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/extensions/{id}": {
      "get": {
        "tags": [
          "Extensions"
        ],
        "summary": "Get an extension",
        "description": "Get details about an existing extension.\n\nExtensions are representations of Extension Schema objects that are attached to Services.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#extensions)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional details to include.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "extension": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "endpoint_url": "<url>",
                    "extension_objects": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "extension_schema": {
                      "type": "<string>"
                    },
                    "temporarily_disabled": false,
                    "config": "<object>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Extensions"
        ],
        "summary": "Delete an extension",
        "description": "Delete an existing extension.\n\nOnce the extension is deleted, it will not be accessible from the web UI and new incidents won't be able to be created for this extension.\n\nExtensions are representations of Extension Schema objects that are attached to Services.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#extensions)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Extensions"
        ],
        "summary": "Update an extension",
        "description": "Update an existing extension.\n\nExtensions are representations of Extension Schema objects that are attached to Services.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#extensions)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "extension": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "endpoint_url": "<url>",
                    "extension_objects": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "extension_schema": {
                      "type": "<string>"
                    },
                    "temporarily_disabled": false,
                    "config": "<object>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "extension": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "endpoint_url": "<url>",
                    "extension_objects": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "extension_schema": {
                      "type": "<string>"
                    },
                    "temporarily_disabled": false,
                    "config": "<object>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/extensions/{id}/enable": {
      "post": {
        "tags": [
          "Extensions"
        ],
        "summary": "Enable an extension",
        "description": "Enable an extension that is temporarily disabled. (This API does not require a request body.)\n\nExtensions are representations of Extension Schema objects that are attached to Services.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#extensions)\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "extension": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "endpoint_url": "<url>",
                    "extension_objects": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "extension_schema": {
                      "type": "<string>"
                    },
                    "temporarily_disabled": false,
                    "config": "<object>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "List incidents",
        "description": "List existing incidents.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "date_range",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "When set to all, the since and until parameters and defaults are ignored.",
            "example": "<string>"
          },
          {
            "name": "incident_key",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Incident de-duplication key. Incidents with child alerts do not have an incident key; querying by incident key will return incidents whose alerts have alert_key matching the given incident key.",
            "example": "<string>"
          },
          {
            "name": "service_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns only the incidents associated with the passed service(s). This expects one or more service IDs.",
            "example": "<string>"
          },
          {
            "name": "team_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "An array of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.",
            "example": "<string>"
          },
          {
            "name": "user_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns only the incidents currently assigned to the passed user(s). This expects one or more user IDs. Note: When using the assigned_to_user filter, you will only receive incidents with statuses of triggered or acknowledged. This is because resolved incidents are not assigned to any user.",
            "example": "<string>"
          },
          {
            "name": "urgencies[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of the urgencies of the incidents to be returned. Defaults to all urgencies. Account must have the `urgencies` ability to do this.",
            "example": "<string>"
          },
          {
            "name": "time_zone",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Time zone in which dates in the result will be rendered.",
            "example": "UTC"
          },
          {
            "name": "statuses[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Return only incidents with the given statuses. (More status codes may be introduced in the future.)",
            "example": "<string>"
          },
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Used to specify both the field you wish to sort the results on (incident_number/created_at/resolved_at/urgency), as well as the direction (asc/desc) of the results. The sort_by field and direction should be separated by a colon. A maximum of two fields can be included, separated by a comma. Sort direction defaults to ascending. The account must have the `urgencies` ability to sort by the urgency.",
            "example": "<string>"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional details to include.",
            "example": "<string>"
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search. Maximum range is 6 months and default is 1 month.",
            "example": "<string>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the date range over which you want to search. Maximum range is 6 months and default is 1 month.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "incidents": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "incident_number": "<integer>",
                      "created_at": "<dateTime>",
                      "status": "<string>",
                      "title": "<string>",
                      "pending_actions": [
                        {
                          "type": "<string>",
                          "at": "<dateTime>"
                        },
                        {
                          "type": "<string>",
                          "at": "<dateTime>"
                        }
                      ],
                      "incident_key": "<string>",
                      "service": {
                        "type": "<string>"
                      },
                      "assignments": [
                        {
                          "at": "<dateTime>",
                          "assignee": {
                            "type": "<string>"
                          }
                        },
                        {
                          "at": "<dateTime>",
                          "assignee": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "assigned_via": "<string>",
                      "acknowledgements": [
                        {
                          "at": "<dateTime>",
                          "acknowledger": {
                            "type": "<string>"
                          }
                        },
                        {
                          "at": "<dateTime>",
                          "acknowledger": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "last_status_change_at": "<dateTime>",
                      "last_status_change_by": {
                        "type": "<string>"
                      },
                      "first_trigger_log_entry": {
                        "type": "<string>"
                      },
                      "escalation_policy": {
                        "type": "<string>"
                      },
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "priority": {
                        "type": "<string>"
                      },
                      "urgency": "<string>",
                      "resolve_reason": {
                        "type": "merge_resolve_reason",
                        "incident": {
                          "type": "<string>"
                        }
                      },
                      "alert_counts": {
                        "triggered": "<integer>",
                        "resolved": "<integer>",
                        "all": "<integer>"
                      },
                      "conference_bridge": {
                        "conference_number": "<string>",
                        "conference_url": "<url>"
                      },
                      "body": {
                        "type": "<string>",
                        "details": "<string>"
                      },
                      "occurrence": {
                        "count": "<integer>",
                        "frequency": "<number>",
                        "category": "<string>",
                        "since": "<dateTime>",
                        "until": "<dateTime>"
                      }
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "incident_number": "<integer>",
                      "created_at": "<dateTime>",
                      "status": "<string>",
                      "title": "<string>",
                      "pending_actions": [
                        {
                          "type": "<string>",
                          "at": "<dateTime>"
                        },
                        {
                          "type": "<string>",
                          "at": "<dateTime>"
                        }
                      ],
                      "incident_key": "<string>",
                      "service": {
                        "type": "<string>"
                      },
                      "assignments": [
                        {
                          "at": "<dateTime>",
                          "assignee": {
                            "type": "<string>"
                          }
                        },
                        {
                          "at": "<dateTime>",
                          "assignee": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "assigned_via": "<string>",
                      "acknowledgements": [
                        {
                          "at": "<dateTime>",
                          "acknowledger": {
                            "type": "<string>"
                          }
                        },
                        {
                          "at": "<dateTime>",
                          "acknowledger": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "last_status_change_at": "<dateTime>",
                      "last_status_change_by": {
                        "type": "<string>"
                      },
                      "first_trigger_log_entry": {
                        "type": "<string>"
                      },
                      "escalation_policy": {
                        "type": "<string>"
                      },
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "priority": {
                        "type": "<string>"
                      },
                      "urgency": "<string>",
                      "resolve_reason": {
                        "type": "merge_resolve_reason",
                        "incident": {
                          "type": "<string>"
                        }
                      },
                      "alert_counts": {
                        "triggered": "<integer>",
                        "resolved": "<integer>",
                        "all": "<integer>"
                      },
                      "conference_bridge": {
                        "conference_number": "<string>",
                        "conference_url": "<url>"
                      },
                      "body": {
                        "type": "<string>",
                        "details": "<string>"
                      },
                      "occurrence": {
                        "count": "<integer>",
                        "frequency": "<number>",
                        "category": "<string>",
                        "since": "<dateTime>",
                        "until": "<dateTime>"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Incidents"
        ],
        "summary": "Manage incidents",
        "description": "Acknowledge, resolve, escalate or reassign one or more incidents.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nA maximum of 500 incidents may be updated at a time. If more than this number of incidents are given, the API will respond with status 413 (Request Entity Too Large).\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "incidents": [
                    {
                      "id": "<string>",
                      "type": "<string>",
                      "status": "<string>",
                      "resolution": "<string>",
                      "title": "<string>",
                      "priority": {
                        "type": "<string>"
                      },
                      "escalation_level": "<integer>",
                      "assignments": [
                        {
                          "assignee": {
                            "type": "<string>"
                          }
                        },
                        {
                          "assignee": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "escalation_policy": {
                        "type": "<string>"
                      },
                      "conference_bridge": {
                        "conference_number": "<string>",
                        "conference_url": "<url>"
                      }
                    },
                    {
                      "id": "<string>",
                      "type": "<string>",
                      "status": "<string>",
                      "resolution": "<string>",
                      "title": "<string>",
                      "priority": {
                        "type": "<string>"
                      },
                      "escalation_level": "<integer>",
                      "assignments": [
                        {
                          "assignee": {
                            "type": "<string>"
                          }
                        },
                        {
                          "assignee": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "escalation_policy": {
                        "type": "<string>"
                      },
                      "conference_bridge": {
                        "conference_number": "<string>",
                        "conference_url": "<url>"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The email address of a valid user associated with the account making the request.",
            "example": "<email>",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "incidents": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "incident_number": "<integer>",
                      "created_at": "<dateTime>",
                      "status": "<string>",
                      "title": "<string>",
                      "pending_actions": [
                        {
                          "type": "<string>",
                          "at": "<dateTime>"
                        },
                        {
                          "type": "<string>",
                          "at": "<dateTime>"
                        }
                      ],
                      "incident_key": "<string>",
                      "service": {
                        "type": "<string>"
                      },
                      "assignments": [
                        {
                          "at": "<dateTime>",
                          "assignee": {
                            "type": "<string>"
                          }
                        },
                        {
                          "at": "<dateTime>",
                          "assignee": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "assigned_via": "<string>",
                      "acknowledgements": [
                        {
                          "at": "<dateTime>",
                          "acknowledger": {
                            "type": "<string>"
                          }
                        },
                        {
                          "at": "<dateTime>",
                          "acknowledger": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "last_status_change_at": "<dateTime>",
                      "last_status_change_by": {
                        "type": "<string>"
                      },
                      "first_trigger_log_entry": {
                        "type": "<string>"
                      },
                      "escalation_policy": {
                        "type": "<string>"
                      },
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "priority": {
                        "type": "<string>"
                      },
                      "urgency": "<string>",
                      "resolve_reason": {
                        "type": "merge_resolve_reason",
                        "incident": {
                          "type": "<string>"
                        }
                      },
                      "alert_counts": {
                        "triggered": "<integer>",
                        "resolved": "<integer>",
                        "all": "<integer>"
                      },
                      "conference_bridge": {
                        "conference_number": "<string>",
                        "conference_url": "<url>"
                      },
                      "body": {
                        "type": "<string>",
                        "details": "<string>"
                      },
                      "occurrence": {
                        "count": "<integer>",
                        "frequency": "<number>",
                        "category": "<string>",
                        "since": "<dateTime>",
                        "until": "<dateTime>"
                      }
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "incident_number": "<integer>",
                      "created_at": "<dateTime>",
                      "status": "<string>",
                      "title": "<string>",
                      "pending_actions": [
                        {
                          "type": "<string>",
                          "at": "<dateTime>"
                        },
                        {
                          "type": "<string>",
                          "at": "<dateTime>"
                        }
                      ],
                      "incident_key": "<string>",
                      "service": {
                        "type": "<string>"
                      },
                      "assignments": [
                        {
                          "at": "<dateTime>",
                          "assignee": {
                            "type": "<string>"
                          }
                        },
                        {
                          "at": "<dateTime>",
                          "assignee": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "assigned_via": "<string>",
                      "acknowledgements": [
                        {
                          "at": "<dateTime>",
                          "acknowledger": {
                            "type": "<string>"
                          }
                        },
                        {
                          "at": "<dateTime>",
                          "acknowledger": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "last_status_change_at": "<dateTime>",
                      "last_status_change_by": {
                        "type": "<string>"
                      },
                      "first_trigger_log_entry": {
                        "type": "<string>"
                      },
                      "escalation_policy": {
                        "type": "<string>"
                      },
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "priority": {
                        "type": "<string>"
                      },
                      "urgency": "<string>",
                      "resolve_reason": {
                        "type": "merge_resolve_reason",
                        "incident": {
                          "type": "<string>"
                        }
                      },
                      "alert_counts": {
                        "triggered": "<integer>",
                        "resolved": "<integer>",
                        "all": "<integer>"
                      },
                      "conference_bridge": {
                        "conference_number": "<string>",
                        "conference_url": "<url>"
                      },
                      "body": {
                        "type": "<string>",
                        "details": "<string>"
                      },
                      "occurrence": {
                        "count": "<integer>",
                        "frequency": "<number>",
                        "category": "<string>",
                        "since": "<dateTime>",
                        "until": "<dateTime>"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Create an Incident",
        "description": "Create an incident synchronously without a corresponding event from a monitoring service.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "incident": {
                    "type": "<string>",
                    "title": "<string>",
                    "service": {
                      "type": "<string>"
                    },
                    "priority": {
                      "type": "<string>"
                    },
                    "urgency": "<string>",
                    "body": {
                      "type": "<string>",
                      "details": "<string>"
                    },
                    "incident_key": "<string>",
                    "assignments": [
                      {
                        "assignee": {
                          "type": "<string>"
                        }
                      },
                      {
                        "assignee": {
                          "type": "<string>"
                        }
                      }
                    ],
                    "escalation_policy": {
                      "type": "<string>"
                    },
                    "conference_bridge": {
                      "conference_number": "<string>",
                      "conference_url": "<url>"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The email address of a valid user associated with the account making the request.",
            "example": "<email>",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "incident": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "incident_number": "<integer>",
                    "created_at": "<dateTime>",
                    "status": "<string>",
                    "title": "<string>",
                    "pending_actions": [
                      {
                        "type": "<string>",
                        "at": "<dateTime>"
                      },
                      {
                        "type": "<string>",
                        "at": "<dateTime>"
                      }
                    ],
                    "incident_key": "<string>",
                    "service": {
                      "type": "<string>"
                    },
                    "assignments": [
                      {
                        "at": "<dateTime>",
                        "assignee": {
                          "type": "<string>"
                        }
                      },
                      {
                        "at": "<dateTime>",
                        "assignee": {
                          "type": "<string>"
                        }
                      }
                    ],
                    "assigned_via": "<string>",
                    "acknowledgements": [
                      {
                        "at": "<dateTime>",
                        "acknowledger": {
                          "type": "<string>"
                        }
                      },
                      {
                        "at": "<dateTime>",
                        "acknowledger": {
                          "type": "<string>"
                        }
                      }
                    ],
                    "last_status_change_at": "<dateTime>",
                    "last_status_change_by": {
                      "type": "<string>"
                    },
                    "first_trigger_log_entry": {
                      "type": "<string>"
                    },
                    "escalation_policy": {
                      "type": "<string>"
                    },
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "priority": {
                      "type": "<string>"
                    },
                    "urgency": "<string>",
                    "resolve_reason": {
                      "type": "merge_resolve_reason",
                      "incident": {
                        "type": "<string>"
                      }
                    },
                    "alert_counts": {
                      "triggered": "<integer>",
                      "resolved": "<integer>",
                      "all": "<integer>"
                    },
                    "conference_bridge": {
                      "conference_number": "<string>",
                      "conference_url": "<url>"
                    },
                    "body": {
                      "type": "<string>",
                      "details": "<string>"
                    },
                    "occurrence": {
                      "count": "<integer>",
                      "frequency": "<number>",
                      "category": "<string>",
                      "since": "<dateTime>",
                      "until": "<dateTime>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get an incident",
        "description": "Show detailed information about an incident. Accepts either an incident id, or an incident number.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "incident": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "incident_number": "<integer>",
                    "created_at": "<dateTime>",
                    "status": "<string>",
                    "title": "<string>",
                    "pending_actions": [
                      {
                        "type": "<string>",
                        "at": "<dateTime>"
                      },
                      {
                        "type": "<string>",
                        "at": "<dateTime>"
                      }
                    ],
                    "incident_key": "<string>",
                    "service": {
                      "type": "<string>"
                    },
                    "assignments": [
                      {
                        "at": "<dateTime>",
                        "assignee": {
                          "type": "<string>"
                        }
                      },
                      {
                        "at": "<dateTime>",
                        "assignee": {
                          "type": "<string>"
                        }
                      }
                    ],
                    "assigned_via": "<string>",
                    "acknowledgements": [
                      {
                        "at": "<dateTime>",
                        "acknowledger": {
                          "type": "<string>"
                        }
                      },
                      {
                        "at": "<dateTime>",
                        "acknowledger": {
                          "type": "<string>"
                        }
                      }
                    ],
                    "last_status_change_at": "<dateTime>",
                    "last_status_change_by": {
                      "type": "<string>"
                    },
                    "first_trigger_log_entry": {
                      "type": "<string>"
                    },
                    "escalation_policy": {
                      "type": "<string>"
                    },
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "priority": {
                      "type": "<string>"
                    },
                    "urgency": "<string>",
                    "resolve_reason": {
                      "type": "merge_resolve_reason",
                      "incident": {
                        "type": "<string>"
                      }
                    },
                    "alert_counts": {
                      "triggered": "<integer>",
                      "resolved": "<integer>",
                      "all": "<integer>"
                    },
                    "conference_bridge": {
                      "conference_number": "<string>",
                      "conference_url": "<url>"
                    },
                    "body": {
                      "type": "<string>",
                      "details": "<string>"
                    },
                    "occurrence": {
                      "count": "<integer>",
                      "frequency": "<number>",
                      "category": "<string>",
                      "since": "<dateTime>",
                      "until": "<dateTime>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Incidents"
        ],
        "summary": "Update an incident",
        "description": "Acknowledge, resolve, escalate or reassign an incident.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "incident": {
                    "type": "<string>",
                    "status": "<string>",
                    "priority": {
                      "type": "<string>"
                    },
                    "resolution": "<string>",
                    "title": "<string>",
                    "escalation_level": "<integer>",
                    "assignments": [
                      {
                        "assignee": {
                          "type": "<string>"
                        }
                      },
                      {
                        "assignee": {
                          "type": "<string>"
                        }
                      }
                    ],
                    "escalation_policy": {
                      "type": "<string>"
                    },
                    "urgency": "<string>",
                    "conference_bridge": {
                      "conference_number": "<string>",
                      "conference_url": "<url>"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The email address of a valid user associated with the account making the request.",
            "example": "<email>",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "incident": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "incident_number": "<integer>",
                    "created_at": "<dateTime>",
                    "status": "<string>",
                    "title": "<string>",
                    "pending_actions": [
                      {
                        "type": "<string>",
                        "at": "<dateTime>"
                      },
                      {
                        "type": "<string>",
                        "at": "<dateTime>"
                      }
                    ],
                    "incident_key": "<string>",
                    "service": {
                      "type": "<string>"
                    },
                    "assignments": [
                      {
                        "at": "<dateTime>",
                        "assignee": {
                          "type": "<string>"
                        }
                      },
                      {
                        "at": "<dateTime>",
                        "assignee": {
                          "type": "<string>"
                        }
                      }
                    ],
                    "assigned_via": "<string>",
                    "acknowledgements": [
                      {
                        "at": "<dateTime>",
                        "acknowledger": {
                          "type": "<string>"
                        }
                      },
                      {
                        "at": "<dateTime>",
                        "acknowledger": {
                          "type": "<string>"
                        }
                      }
                    ],
                    "last_status_change_at": "<dateTime>",
                    "last_status_change_by": {
                      "type": "<string>"
                    },
                    "first_trigger_log_entry": {
                      "type": "<string>"
                    },
                    "escalation_policy": {
                      "type": "<string>"
                    },
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "priority": {
                      "type": "<string>"
                    },
                    "urgency": "<string>",
                    "resolve_reason": {
                      "type": "merge_resolve_reason",
                      "incident": {
                        "type": "<string>"
                      }
                    },
                    "alert_counts": {
                      "triggered": "<integer>",
                      "resolved": "<integer>",
                      "all": "<integer>"
                    },
                    "conference_bridge": {
                      "conference_number": "<string>",
                      "conference_url": "<url>"
                    },
                    "body": {
                      "type": "<string>",
                      "details": "<string>"
                    },
                    "occurrence": {
                      "count": "<integer>",
                      "frequency": "<number>",
                      "category": "<string>",
                      "since": "<dateTime>",
                      "until": "<dateTime>"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/alerts": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "List alerts for an incident",
        "description": "List alerts for the specified incident.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "alert_key",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Alert de-duplication key.",
            "example": "<string>"
          },
          {
            "name": "statuses[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Return only alerts with the given statuses. (More status codes may be introduced in the future.)",
            "example": "<string>"
          },
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Used to specify both the field you wish to sort the results on (created_at/resolved_at), as well as the direction (asc/desc) of the results. The sort_by field and direction should be separated by a colon. A maximum of two fields can be included, separated by a comma. Sort direction defaults to ascending.",
            "example": "<string>"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional details to include.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "alerts": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "created_at": "<dateTime>",
                      "status": "<string>",
                      "alert_key": "<string>",
                      "service": {
                        "type": "<string>"
                      },
                      "first_trigger_log_entry": {
                        "type": "<string>"
                      },
                      "incident": {
                        "type": "<string>"
                      },
                      "suppressed": false,
                      "severity": "<string>",
                      "integration": {
                        "type": "<string>"
                      },
                      "body": {
                        "type": "<string>",
                        "contexts": [
                          {
                            "type": "<string>",
                            "href": "<string>",
                            "src": "<string>",
                            "text": "<string>"
                          },
                          {
                            "type": "<string>",
                            "href": "<string>",
                            "src": "<string>",
                            "text": "<string>"
                          }
                        ],
                        "details": "<object>"
                      }
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "created_at": "<dateTime>",
                      "status": "<string>",
                      "alert_key": "<string>",
                      "service": {
                        "type": "<string>"
                      },
                      "first_trigger_log_entry": {
                        "type": "<string>"
                      },
                      "incident": {
                        "type": "<string>"
                      },
                      "suppressed": false,
                      "severity": "<string>",
                      "integration": {
                        "type": "<string>"
                      },
                      "body": {
                        "type": "<string>",
                        "contexts": [
                          {
                            "type": "<string>",
                            "href": "<string>",
                            "src": "<string>",
                            "text": "<string>"
                          },
                          {
                            "type": "<string>",
                            "href": "<string>",
                            "src": "<string>",
                            "text": "<string>"
                          }
                        ],
                        "details": "<object>"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Incidents"
        ],
        "summary": "Manage alerts",
        "description": "Resolve multiple alerts or associate them with different incidents.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved. An alert represents a digital signal that was emitted to PagerDuty by the monitoring systems that detected or identified the issue.\n\nA maximum of 500 alerts may be updated at a time. If more than this number of alerts are given, the API will respond with status 413 (Request Entity Too Large).\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "alerts": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "created_at": "<dateTime>",
                      "status": "<string>",
                      "alert_key": "<string>",
                      "service": {
                        "type": "<string>"
                      },
                      "first_trigger_log_entry": {
                        "type": "<string>"
                      },
                      "incident": {
                        "type": "<string>"
                      },
                      "suppressed": false,
                      "severity": "<string>",
                      "integration": {
                        "type": "<string>"
                      },
                      "body": {
                        "type": "<string>",
                        "contexts": [
                          {
                            "type": "<string>",
                            "href": "<string>",
                            "src": "<string>",
                            "text": "<string>"
                          },
                          {
                            "type": "<string>",
                            "href": "<string>",
                            "src": "<string>",
                            "text": "<string>"
                          }
                        ],
                        "details": "<object>"
                      }
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "created_at": "<dateTime>",
                      "status": "<string>",
                      "alert_key": "<string>",
                      "service": {
                        "type": "<string>"
                      },
                      "first_trigger_log_entry": {
                        "type": "<string>"
                      },
                      "incident": {
                        "type": "<string>"
                      },
                      "suppressed": false,
                      "severity": "<string>",
                      "integration": {
                        "type": "<string>"
                      },
                      "body": {
                        "type": "<string>",
                        "contexts": [
                          {
                            "type": "<string>",
                            "href": "<string>",
                            "src": "<string>",
                            "text": "<string>"
                          },
                          {
                            "type": "<string>",
                            "href": "<string>",
                            "src": "<string>",
                            "text": "<string>"
                          }
                        ],
                        "details": "<object>"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The email address of a valid user associated with the account making the request.",
            "example": "<email>",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "alerts": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "created_at": "<dateTime>",
                      "status": "<string>",
                      "alert_key": "<string>",
                      "service": {
                        "type": "<string>"
                      },
                      "first_trigger_log_entry": {
                        "type": "<string>"
                      },
                      "incident": {
                        "type": "<string>"
                      },
                      "suppressed": false,
                      "severity": "<string>",
                      "integration": {
                        "type": "<string>"
                      },
                      "body": {
                        "type": "<string>",
                        "contexts": [
                          {
                            "type": "<string>",
                            "href": "<string>",
                            "src": "<string>",
                            "text": "<string>"
                          },
                          {
                            "type": "<string>",
                            "href": "<string>",
                            "src": "<string>",
                            "text": "<string>"
                          }
                        ],
                        "details": "<object>"
                      }
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "created_at": "<dateTime>",
                      "status": "<string>",
                      "alert_key": "<string>",
                      "service": {
                        "type": "<string>"
                      },
                      "first_trigger_log_entry": {
                        "type": "<string>"
                      },
                      "incident": {
                        "type": "<string>"
                      },
                      "suppressed": false,
                      "severity": "<string>",
                      "integration": {
                        "type": "<string>"
                      },
                      "body": {
                        "type": "<string>",
                        "contexts": [
                          {
                            "type": "<string>",
                            "href": "<string>",
                            "src": "<string>",
                            "text": "<string>"
                          },
                          {
                            "type": "<string>",
                            "href": "<string>",
                            "src": "<string>",
                            "text": "<string>"
                          }
                        ],
                        "details": "<object>"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/alerts/{alert_id}": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get an alert",
        "description": "Show detailed information about an alert. Accepts an alert id.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nWhen a service sends an event to PagerDuty, an alert and corresponding incident is triggered in PagerDuty.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "alert_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The id of the alert to retrieve.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "alert": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "created_at": "<dateTime>",
                    "status": "<string>",
                    "alert_key": "<string>",
                    "service": {
                      "type": "<string>"
                    },
                    "first_trigger_log_entry": {
                      "type": "<string>"
                    },
                    "incident": {
                      "type": "<string>"
                    },
                    "suppressed": false,
                    "severity": "<string>",
                    "integration": {
                      "type": "<string>"
                    },
                    "body": {
                      "type": "<string>",
                      "contexts": [
                        {
                          "type": "<string>",
                          "href": "<string>",
                          "src": "<string>",
                          "text": "<string>"
                        },
                        {
                          "type": "<string>",
                          "href": "<string>",
                          "src": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "details": "<object>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Incidents"
        ],
        "summary": "Update an alert",
        "description": "Resolve an alert or associate an alert with a new parent incident.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nWhen a service sends an event to PagerDuty, an alert and corresponding incident is triggered in PagerDuty.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "alert": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "created_at": "<dateTime>",
                    "status": "<string>",
                    "alert_key": "<string>",
                    "service": {
                      "type": "<string>"
                    },
                    "first_trigger_log_entry": {
                      "type": "<string>"
                    },
                    "incident": {
                      "type": "<string>"
                    },
                    "suppressed": false,
                    "severity": "<string>",
                    "integration": {
                      "type": "<string>"
                    },
                    "body": {
                      "type": "<string>",
                      "contexts": [
                        {
                          "type": "<string>",
                          "href": "<string>",
                          "src": "<string>",
                          "text": "<string>"
                        },
                        {
                          "type": "<string>",
                          "href": "<string>",
                          "src": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "details": "<object>"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The email address of a valid user associated with the account making the request.",
            "example": "<email>",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "alert_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The id of the alert to retrieve.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "alert": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "created_at": "<dateTime>",
                    "status": "<string>",
                    "alert_key": "<string>",
                    "service": {
                      "type": "<string>"
                    },
                    "first_trigger_log_entry": {
                      "type": "<string>"
                    },
                    "incident": {
                      "type": "<string>"
                    },
                    "suppressed": false,
                    "severity": "<string>",
                    "integration": {
                      "type": "<string>"
                    },
                    "body": {
                      "type": "<string>",
                      "contexts": [
                        {
                          "type": "<string>",
                          "href": "<string>",
                          "src": "<string>",
                          "text": "<string>"
                        },
                        {
                          "type": "<string>",
                          "href": "<string>",
                          "src": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "details": "<object>"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/business_services/{business_service_id}/impacts": {
      "put": {
        "tags": [
          "Incidents"
        ],
        "summary": "Manually change an Incident's Impact on a Business Service.",
        "description": "Change Impact of an Incident on a Business Service.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "relation": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `business-impact-early-access`. Do not use this endpoint in production, as it may change!",
            "example": "business-impact-early-access",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "business_service_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The business service ID.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "relation": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/business_services/impacts": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "List Business Services impacted by the given Incident",
        "description": "Retrieve a list of Business Services that are being impacted by the given Incident.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `business-impact-early-access`. Do not use this endpoint in production, as it may change!",
            "example": "business-impact-early-access",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "limit": "<integer>",
                  "next_cursor": "<string>",
                  "services": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "type": "<string>",
                      "status": "<string>",
                      "additional_fields": {
                        "highest_impacting_priority": {
                          "id": "<string>",
                          "order": "<integer>"
                        }
                      }
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "type": "<string>",
                      "status": "<string>",
                      "additional_fields": {
                        "highest_impacting_priority": {
                          "id": "<string>",
                          "order": "<integer>"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/log_entries": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "List log entries for an incident",
        "description": "List log entries for the specified incident.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nA Log Entry are a record of all events on your account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "time_zone",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Time zone in which dates in the result will be rendered.",
            "example": "UTC"
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search.",
            "example": "<dateTime>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the date range over which you want to search.",
            "example": "<dateTime>"
          },
          {
            "name": "is_overview",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If `true`, will return a subset of log entries that show only the most important changes to the incident.",
            "example": "false"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional Models to include in response.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "log_entries": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "created_at": "<dateTime>",
                      "channel": {
                        "type": "<string>",
                        "user": "<object>",
                        "team": "<object>",
                        "notification": {
                          "id": "<string>",
                          "type": "<string>",
                          "started_at": "<dateTime>",
                          "address": "<string>",
                          "user": {
                            "type": "<string>"
                          },
                          "conferenceAddress": "<string>",
                          "status": "<string>",
                          "": "<string>"
                        },
                        "channel": "<object>"
                      },
                      "agent": {
                        "type": "<string>"
                      },
                      "note": "<string>",
                      "contexts": [
                        {
                          "type": "<string>",
                          "href": "<string>",
                          "src": "<string>",
                          "text": "<string>"
                        },
                        {
                          "type": "<string>",
                          "href": "<string>",
                          "src": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "service": {
                        "type": "<string>"
                      },
                      "user": {
                        "type": "<string>"
                      },
                      "incident": {
                        "type": "<string>"
                      },
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "event_details": {
                        "description": "<string>"
                      }
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "created_at": "<dateTime>",
                      "channel": {
                        "type": "<string>",
                        "user": "<object>",
                        "team": "<object>",
                        "notification": {
                          "id": "<string>",
                          "type": "<string>",
                          "started_at": "<dateTime>",
                          "address": "<string>",
                          "user": {
                            "type": "<string>"
                          },
                          "conferenceAddress": "<string>",
                          "status": "<string>",
                          "": "<string>"
                        },
                        "channel": "<object>"
                      },
                      "agent": {
                        "type": "<string>"
                      },
                      "note": "<string>",
                      "contexts": [
                        {
                          "type": "<string>",
                          "href": "<string>",
                          "src": "<string>",
                          "text": "<string>"
                        },
                        {
                          "type": "<string>",
                          "href": "<string>",
                          "src": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "service": {
                        "type": "<string>"
                      },
                      "user": {
                        "type": "<string>"
                      },
                      "incident": {
                        "type": "<string>"
                      },
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "event_details": {
                        "description": "<string>"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/merge": {
      "put": {
        "tags": [
          "Incidents"
        ],
        "summary": "Merge incidents",
        "description": "Merge a list of source incidents into this incident.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "source_incidents": [
                    {
                      "type": "<string>"
                    },
                    {
                      "type": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The email address of a valid user associated with the account making the request.",
            "example": "<email>",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "incident": {
                    "type": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/notes": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "List notes for an incident",
        "description": "List existing notes for the specified incident.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "notes": [
                    {
                      "content": "<string>",
                      "id": "<string>",
                      "user": {
                        "type": "<string>"
                      },
                      "channel": {
                        "summary": "<string>",
                        "id": "<string>",
                        "type": "<string>",
                        "self": "<url>",
                        "html_url": "<url>"
                      },
                      "created_at": "<dateTime>"
                    },
                    {
                      "content": "<string>",
                      "id": "<string>",
                      "user": {
                        "type": "<string>"
                      },
                      "channel": {
                        "summary": "<string>",
                        "id": "<string>",
                        "type": "<string>",
                        "self": "<url>",
                        "html_url": "<url>"
                      },
                      "created_at": "<dateTime>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Create a note on an incident",
        "description": "Create a new note for the specified incident.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": {
                    "content": "<string>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The email address of a valid user associated with the account making the request.",
            "example": "<email>",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "note": {
                    "content": "<string>",
                    "id": "<string>",
                    "user": {
                      "type": "<string>"
                    },
                    "channel": {
                      "summary": "<string>",
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>"
                    },
                    "created_at": "<dateTime>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/outlier_incident": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get Outlier Incident",
        "description": "Gets Outlier Incident information for a given Incident on its Service.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#related_incidents)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search.",
            "example": "<dateTime>"
          },
          {
            "name": "additional_details[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional attributes to any of the returned incidents for related incidents.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "outlier_incident": {
                    "incident": {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "incident_number": "<integer>",
                      "created_at": "<dateTime>",
                      "status": "<string>",
                      "title": "<string>",
                      "pending_actions": [
                        {
                          "type": "<string>",
                          "at": "<dateTime>"
                        },
                        {
                          "type": "<string>",
                          "at": "<dateTime>"
                        }
                      ],
                      "incident_key": "<string>",
                      "service": {
                        "type": "<string>"
                      },
                      "assignments": [
                        {
                          "at": "<dateTime>",
                          "assignee": {
                            "type": "<string>"
                          }
                        },
                        {
                          "at": "<dateTime>",
                          "assignee": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "assigned_via": "<string>",
                      "acknowledgements": [
                        {
                          "at": "<dateTime>",
                          "acknowledger": {
                            "type": "<string>"
                          }
                        },
                        {
                          "at": "<dateTime>",
                          "acknowledger": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "last_status_change_at": "<dateTime>",
                      "last_status_change_by": {
                        "type": "<string>"
                      },
                      "first_trigger_log_entry": {
                        "type": "<string>"
                      },
                      "escalation_policy": {
                        "type": "<string>"
                      },
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "priority": {
                        "type": "<string>"
                      },
                      "urgency": "<string>",
                      "resolve_reason": {
                        "type": "merge_resolve_reason",
                        "incident": {
                          "type": "<string>"
                        }
                      },
                      "alert_counts": {
                        "triggered": "<integer>",
                        "resolved": "<integer>",
                        "all": "<integer>"
                      },
                      "conference_bridge": {
                        "conference_number": "<string>",
                        "conference_url": "<url>"
                      },
                      "body": {
                        "type": "<string>",
                        "details": "<string>"
                      },
                      "occurrence": {
                        "count": "<integer>",
                        "frequency": "<number>",
                        "category": "<string>",
                        "since": "<dateTime>",
                        "until": "<dateTime>"
                      }
                    },
                    "incident_template": {
                      "id": "<string>",
                      "cluster_id": "<string>",
                      "mined_text": "<string>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/past_incidents": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get Past Incidents",
        "description": "Past Incidents returns Incidents within the past 6 months that have similar metadata and were generated on the same Service as the parent Incident. By default, 5 Past Incidents are returned. Note: This feature is currently available as part of the Event Intelligence package or Digital Operations plan only.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#past_incidents)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The number of results to be returned in the response.",
            "example": "5"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in the response body is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated with the total number of Past Incidents.\n",
            "example": "false"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "past_incidents": [
                    {
                      "incident": {
                        "id": "<string>",
                        "created_at": "<string>",
                        "self": "<string>",
                        "title": "<string>"
                      },
                      "score": "<number>"
                    },
                    {
                      "incident": {
                        "id": "<string>",
                        "created_at": "<string>",
                        "self": "<string>",
                        "title": "<string>"
                      },
                      "score": "<number>"
                    }
                  ],
                  "total": "<number>",
                  "limit": "<number>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/related_incidents": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get Related Incidents",
        "description": "Returns the 20 most recent Related Incidents that are impacting other Responders and Services. Note: This feature is currently available as part of the Event Intelligence package or Digital Operations plan only.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#related_incidents)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "additional_details[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional attributes to any of the returned incidents for related incidents.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "related_incidents": [
                    {
                      "incident": {
                        "id": "<string>",
                        "summary": "<string>",
                        "type": "<string>",
                        "self": "<url>",
                        "html_url": "<url>",
                        "incident_number": "<integer>",
                        "created_at": "<dateTime>",
                        "status": "<string>",
                        "title": "<string>",
                        "pending_actions": [
                          {
                            "type": "<string>",
                            "at": "<dateTime>"
                          },
                          {
                            "type": "<string>",
                            "at": "<dateTime>"
                          }
                        ],
                        "incident_key": "<string>",
                        "service": {
                          "type": "<string>"
                        },
                        "assignments": [
                          {
                            "at": "<dateTime>",
                            "assignee": {
                              "type": "<string>"
                            }
                          },
                          {
                            "at": "<dateTime>",
                            "assignee": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "assigned_via": "<string>",
                        "acknowledgements": [
                          {
                            "at": "<dateTime>",
                            "acknowledger": {
                              "type": "<string>"
                            }
                          },
                          {
                            "at": "<dateTime>",
                            "acknowledger": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "last_status_change_at": "<dateTime>",
                        "last_status_change_by": {
                          "type": "<string>"
                        },
                        "first_trigger_log_entry": {
                          "type": "<string>"
                        },
                        "escalation_policy": {
                          "type": "<string>"
                        },
                        "teams": [
                          {
                            "type": "<string>"
                          },
                          {
                            "type": "<string>"
                          }
                        ],
                        "priority": {
                          "type": "<string>"
                        },
                        "urgency": "<string>",
                        "resolve_reason": {
                          "type": "merge_resolve_reason",
                          "incident": {
                            "type": "<string>"
                          }
                        },
                        "alert_counts": {
                          "triggered": "<integer>",
                          "resolved": "<integer>",
                          "all": "<integer>"
                        },
                        "conference_bridge": {
                          "conference_number": "<string>",
                          "conference_url": "<url>"
                        },
                        "body": {
                          "type": "<string>",
                          "details": "<string>"
                        },
                        "occurrence": {
                          "count": "<integer>",
                          "frequency": "<number>",
                          "category": "<string>",
                          "since": "<dateTime>",
                          "until": "<dateTime>"
                        }
                      },
                      "relationships": [
                        {
                          "type": "<string>",
                          "metadata": {
                            "grouping_classification": "<string>",
                            "user_feedback": {
                              "positive_feedback_count": "<integer>",
                              "negative_feedback_count": "<integer>"
                            }
                          }
                        },
                        {
                          "type": "<string>",
                          "metadata": {
                            "grouping_classification": "<string>",
                            "user_feedback": {
                              "positive_feedback_count": "<integer>",
                              "negative_feedback_count": "<integer>"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "incident": {
                        "id": "<string>",
                        "summary": "<string>",
                        "type": "<string>",
                        "self": "<url>",
                        "html_url": "<url>",
                        "incident_number": "<integer>",
                        "created_at": "<dateTime>",
                        "status": "<string>",
                        "title": "<string>",
                        "pending_actions": [
                          {
                            "type": "<string>",
                            "at": "<dateTime>"
                          },
                          {
                            "type": "<string>",
                            "at": "<dateTime>"
                          }
                        ],
                        "incident_key": "<string>",
                        "service": {
                          "type": "<string>"
                        },
                        "assignments": [
                          {
                            "at": "<dateTime>",
                            "assignee": {
                              "type": "<string>"
                            }
                          },
                          {
                            "at": "<dateTime>",
                            "assignee": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "assigned_via": "<string>",
                        "acknowledgements": [
                          {
                            "at": "<dateTime>",
                            "acknowledger": {
                              "type": "<string>"
                            }
                          },
                          {
                            "at": "<dateTime>",
                            "acknowledger": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "last_status_change_at": "<dateTime>",
                        "last_status_change_by": {
                          "type": "<string>"
                        },
                        "first_trigger_log_entry": {
                          "type": "<string>"
                        },
                        "escalation_policy": {
                          "type": "<string>"
                        },
                        "teams": [
                          {
                            "type": "<string>"
                          },
                          {
                            "type": "<string>"
                          }
                        ],
                        "priority": {
                          "type": "<string>"
                        },
                        "urgency": "<string>",
                        "resolve_reason": {
                          "type": "merge_resolve_reason",
                          "incident": {
                            "type": "<string>"
                          }
                        },
                        "alert_counts": {
                          "triggered": "<integer>",
                          "resolved": "<integer>",
                          "all": "<integer>"
                        },
                        "conference_bridge": {
                          "conference_number": "<string>",
                          "conference_url": "<url>"
                        },
                        "body": {
                          "type": "<string>",
                          "details": "<string>"
                        },
                        "occurrence": {
                          "count": "<integer>",
                          "frequency": "<number>",
                          "category": "<string>",
                          "since": "<dateTime>",
                          "until": "<dateTime>"
                        }
                      },
                      "relationships": [
                        {
                          "type": "<string>",
                          "metadata": {
                            "grouping_classification": "<string>",
                            "user_feedback": {
                              "positive_feedback_count": "<integer>",
                              "negative_feedback_count": "<integer>"
                            }
                          }
                        },
                        {
                          "type": "<string>",
                          "metadata": {
                            "grouping_classification": "<string>",
                            "user_feedback": {
                              "positive_feedback_count": "<integer>",
                              "negative_feedback_count": "<integer>"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/responder_requests": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Create a responder request for an incident",
        "description": "Send a new responder request for the specified incident.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "requester_id": "<string>",
                  "message": "<string>",
                  "responder_request_targets": "schema type not provided"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The email address of a valid user associated with the account making the request.",
            "example": "<email>",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "responder_request": {
                    "incident": {
                      "type": "<string>"
                    },
                    "requester": {
                      "type": "<string>"
                    },
                    "requested_at": "<string>",
                    "message": "<string>",
                    "responder_request_targets": [
                      {
                        "type": "<string>",
                        "id": "<string>",
                        "summary": "<string>",
                        "incident_responders": [
                          {
                            "state": "<string>",
                            "user": {
                              "type": "<string>"
                            },
                            "incident": {
                              "type": "<string>"
                            },
                            "updated_at": "<string>",
                            "message": "<string>",
                            "requester": {
                              "type": "<string>"
                            },
                            "requested_at": "<string>"
                          },
                          {
                            "state": "<string>",
                            "user": {
                              "type": "<string>"
                            },
                            "incident": {
                              "type": "<string>"
                            },
                            "updated_at": "<string>",
                            "message": "<string>",
                            "requester": {
                              "type": "<string>"
                            },
                            "requested_at": "<string>"
                          }
                        ]
                      },
                      {
                        "type": "<string>",
                        "id": "<string>",
                        "summary": "<string>",
                        "incident_responders": [
                          {
                            "state": "<string>",
                            "user": {
                              "type": "<string>"
                            },
                            "incident": {
                              "type": "<string>"
                            },
                            "updated_at": "<string>",
                            "message": "<string>",
                            "requester": {
                              "type": "<string>"
                            },
                            "requested_at": "<string>"
                          },
                          {
                            "state": "<string>",
                            "user": {
                              "type": "<string>"
                            },
                            "incident": {
                              "type": "<string>"
                            },
                            "updated_at": "<string>",
                            "message": "<string>",
                            "requester": {
                              "type": "<string>"
                            },
                            "requested_at": "<string>"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/snooze": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Snooze an incident",
        "description": "Snooze an incident.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "duration": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The email address of a valid user associated with the account making the request.",
            "example": "<email>",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "incident": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "incident_number": "<integer>",
                    "created_at": "<dateTime>",
                    "status": "<string>",
                    "title": "<string>",
                    "pending_actions": [
                      {
                        "type": "<string>",
                        "at": "<dateTime>"
                      },
                      {
                        "type": "<string>",
                        "at": "<dateTime>"
                      }
                    ],
                    "incident_key": "<string>",
                    "service": {
                      "type": "<string>"
                    },
                    "assignments": [
                      {
                        "at": "<dateTime>",
                        "assignee": {
                          "type": "<string>"
                        }
                      },
                      {
                        "at": "<dateTime>",
                        "assignee": {
                          "type": "<string>"
                        }
                      }
                    ],
                    "assigned_via": "<string>",
                    "acknowledgements": [
                      {
                        "at": "<dateTime>",
                        "acknowledger": {
                          "type": "<string>"
                        }
                      },
                      {
                        "at": "<dateTime>",
                        "acknowledger": {
                          "type": "<string>"
                        }
                      }
                    ],
                    "last_status_change_at": "<dateTime>",
                    "last_status_change_by": {
                      "type": "<string>"
                    },
                    "first_trigger_log_entry": {
                      "type": "<string>"
                    },
                    "escalation_policy": {
                      "type": "<string>"
                    },
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "priority": {
                      "type": "<string>"
                    },
                    "urgency": "<string>",
                    "resolve_reason": {
                      "type": "merge_resolve_reason",
                      "incident": {
                        "type": "<string>"
                      }
                    },
                    "alert_counts": {
                      "triggered": "<integer>",
                      "resolved": "<integer>",
                      "all": "<integer>"
                    },
                    "conference_bridge": {
                      "conference_number": "<string>",
                      "conference_url": "<url>"
                    },
                    "body": {
                      "type": "<string>",
                      "details": "<string>"
                    },
                    "occurrence": {
                      "count": "<integer>",
                      "frequency": "<number>",
                      "category": "<string>",
                      "since": "<dateTime>",
                      "until": "<dateTime>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/status_updates": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Create a status update on an incident",
        "description": "Create a new status update for the specified incident.\n\nAn incident represents a problem or an issue that needs to be addressed and resolved.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#incidents)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "message": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The email address of a valid user associated with the account making the request.",
            "example": "<email>",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "status_update": {
                    "id": "<string>",
                    "message": "<string>",
                    "created_at": "<string>",
                    "sender": {
                      "type": "<string>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/status_updates/subscribers": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "List Notification Subscribers",
        "description": "Retrieve a list of Notification Subscribers on the Incident.\n\n<!-- theme: warning -->\n> Users must be added through `POST /incident/{id}/status_updates/subscribers` to be returned from this endpoint.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "subscribers": [
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>",
                      "has_indirect_subscription": "<boolean>",
                      "subscribed_via": [
                        {
                          "id": "<string>",
                          "name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>"
                        }
                      ]
                    },
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>",
                      "has_indirect_subscription": "<boolean>",
                      "subscribed_via": [
                        {
                          "id": "<string>",
                          "name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>"
                        }
                      ]
                    }
                  ],
                  "account_id": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Add Notification Subscribers",
        "description": "Subscribe the given entities to Incident Status Update Notifications.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "subscribers": [
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "subscriptions": [
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>",
                      "subscribable_id": "<string>",
                      "subscribable_type": "<string>",
                      "account_id": "<string>",
                      "result": "<string>"
                    },
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>",
                      "subscribable_id": "<string>",
                      "subscribable_type": "<string>",
                      "account_id": "<string>",
                      "result": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incidents/{id}/status_updates/unsubscribe": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Remove Notification Subscriber",
        "description": "Unsubscribes the matching Subscribers from Incident Status Update Notifications.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "subscribers": [
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deleted_count": "<number>",
                  "unauthorized_count": "<number>",
                  "non_existent_count": "<number>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/log_entries": {
      "get": {
        "tags": [
          "Log Entries"
        ],
        "summary": "List log entries",
        "description": "List all of the incident log entries across the entire account.\n\nA log of all the events that happen to an Incident, and these are exposed as Log Entries.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#log-entries)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "time_zone",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Time zone in which dates in the result will be rendered.",
            "example": "UTC"
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search.",
            "example": "<dateTime>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the date range over which you want to search.",
            "example": "<dateTime>"
          },
          {
            "name": "is_overview",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If `true`, will return a subset of log entries that show only the most important changes to the incident.",
            "example": "false"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional Models to include in response.",
            "example": "<string>"
          },
          {
            "name": "team_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "An array of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "log_entries": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "created_at": "<dateTime>",
                      "channel": {
                        "type": "<string>",
                        "user": "<object>",
                        "team": "<object>",
                        "notification": {
                          "id": "<string>",
                          "type": "<string>",
                          "started_at": "<dateTime>",
                          "address": "<string>",
                          "user": {
                            "type": "<string>"
                          },
                          "conferenceAddress": "<string>",
                          "status": "<string>",
                          "": "<string>"
                        },
                        "channel": "<object>"
                      },
                      "agent": {
                        "type": "<string>"
                      },
                      "note": "<string>",
                      "contexts": [
                        {
                          "type": "<string>",
                          "href": "<string>",
                          "src": "<string>",
                          "text": "<string>"
                        },
                        {
                          "type": "<string>",
                          "href": "<string>",
                          "src": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "service": {
                        "type": "<string>"
                      },
                      "user": {
                        "type": "<string>"
                      },
                      "incident": {
                        "type": "<string>"
                      },
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "event_details": {
                        "description": "<string>"
                      }
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "created_at": "<dateTime>",
                      "channel": {
                        "type": "<string>",
                        "user": "<object>",
                        "team": "<object>",
                        "notification": {
                          "id": "<string>",
                          "type": "<string>",
                          "started_at": "<dateTime>",
                          "address": "<string>",
                          "user": {
                            "type": "<string>"
                          },
                          "conferenceAddress": "<string>",
                          "status": "<string>",
                          "": "<string>"
                        },
                        "channel": "<object>"
                      },
                      "agent": {
                        "type": "<string>"
                      },
                      "note": "<string>",
                      "contexts": [
                        {
                          "type": "<string>",
                          "href": "<string>",
                          "src": "<string>",
                          "text": "<string>"
                        },
                        {
                          "type": "<string>",
                          "href": "<string>",
                          "src": "<string>",
                          "text": "<string>"
                        }
                      ],
                      "service": {
                        "type": "<string>"
                      },
                      "user": {
                        "type": "<string>"
                      },
                      "incident": {
                        "type": "<string>"
                      },
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "event_details": {
                        "description": "<string>"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/log_entries/{id}": {
      "get": {
        "tags": [
          "Log Entries"
        ],
        "summary": "Get a log entry",
        "description": "Get details for a specific incident log entry. This method provides additional information you can use to get at raw event data.\n\nA log of all the events that happen to an Incident, and these are exposed as Log Entries.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#log-entries)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "time_zone",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Time zone in which dates in the result will be rendered.",
            "example": "UTC"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional Models to include in response.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "log_entry": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "created_at": "<dateTime>",
                    "channel": {
                      "type": "<string>",
                      "user": "<object>",
                      "team": "<object>",
                      "notification": {
                        "id": "<string>",
                        "type": "<string>",
                        "started_at": "<dateTime>",
                        "address": "<string>",
                        "user": {
                          "type": "<string>"
                        },
                        "conferenceAddress": "<string>",
                        "status": "<string>",
                        "": "<string>"
                      },
                      "channel": "<object>"
                    },
                    "agent": {
                      "type": "<string>"
                    },
                    "note": "<string>",
                    "contexts": [
                      {
                        "type": "<string>",
                        "href": "<string>",
                        "src": "<string>",
                        "text": "<string>"
                      },
                      {
                        "type": "<string>",
                        "href": "<string>",
                        "src": "<string>",
                        "text": "<string>"
                      }
                    ],
                    "service": {
                      "type": "<string>"
                    },
                    "user": {
                      "type": "<string>"
                    },
                    "incident": {
                      "type": "<string>"
                    },
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "event_details": {
                      "description": "<string>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/log_entries/{id}/channel": {
      "put": {
        "tags": [
          "Log Entries"
        ],
        "summary": "Update log entry channel information.",
        "description": "Update an existing incident log entry channel.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#log-entries)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "channel": {
                    "type": "<string>",
                    "details": "<string>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The email address of a valid user associated with the account making the request.",
            "example": "<email>",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/maintenance_windows": {
      "get": {
        "tags": [
          "Maintenance Windows"
        ],
        "summary": "List maintenance windows",
        "description": "List existing maintenance windows, optionally filtered by service and/or team, or whether they are from the past, present or future.\n\nA Maintenance Window is used to temporarily disable one or more Services for a set period of time.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#maintenance-windows)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the result, showing only the tags whose labels match the query.",
            "example": "<string>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "team_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "An array of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.",
            "example": "<string>"
          },
          {
            "name": "service_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "An array of service IDs. Only results related to these services will be returned.",
            "example": "<string>,<string>"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional Models to include in response.",
            "example": "<string>"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Only return maintenance windows in a given state.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "maintenance_windows": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "sequence_number": "<integer>",
                      "start_time": "<dateTime>",
                      "end_time": "<dateTime>",
                      "description": "<string>",
                      "created_by": {
                        "type": "<string>"
                      },
                      "services": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ]
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "sequence_number": "<integer>",
                      "start_time": "<dateTime>",
                      "end_time": "<dateTime>",
                      "description": "<string>",
                      "created_by": {
                        "type": "<string>"
                      },
                      "services": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Maintenance Windows"
        ],
        "summary": "Create a maintenance window",
        "description": "Create a new maintenance window for the specified services. No new incidents will be created for a service that is in maintenance.\n\nA Maintenance Window is used to temporarily disable one or more Services for a set period of time.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#maintenance-windows)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "maintenance_window": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "sequence_number": "<integer>",
                    "start_time": "<dateTime>",
                    "end_time": "<dateTime>",
                    "description": "<string>",
                    "created_by": {
                      "type": "<string>"
                    },
                    "services": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The email address of a valid user associated with the account making the request.",
            "example": "<email>",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "maintenance_window": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "sequence_number": "<integer>",
                    "start_time": "<dateTime>",
                    "end_time": "<dateTime>",
                    "description": "<string>",
                    "created_by": {
                      "type": "<string>"
                    },
                    "services": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/maintenance_windows/{id}": {
      "get": {
        "tags": [
          "Maintenance Windows"
        ],
        "summary": "Get a maintenance window",
        "description": "Get an existing maintenance window.\n\nA Maintenance Window is used to temporarily disable one or more Services for a set period of time.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#maintenance-windows)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional Models to include in response.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "maintenance_window": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "sequence_number": "<integer>",
                    "start_time": "<dateTime>",
                    "end_time": "<dateTime>",
                    "description": "<string>",
                    "created_by": {
                      "type": "<string>"
                    },
                    "services": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Maintenance Windows"
        ],
        "summary": "Delete or end a maintenance window",
        "description": "Delete an existing maintenance window if it's in the future, or end it if it's currently on-going. If the maintenance window has already ended it cannot be deleted.\n\nA Maintenance Window is used to temporarily disable one or more Services for a set period of time.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#maintenance-windows)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Maintenance Windows"
        ],
        "summary": "Update a maintenance window",
        "description": "Update an existing maintenance window.\n\nA Maintenance Window is used to temporarily disable one or more Services for a set period of time.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#maintenance-windows)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "maintenance_window": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "sequence_number": "<integer>",
                    "start_time": "<dateTime>",
                    "end_time": "<dateTime>",
                    "description": "<string>",
                    "created_by": {
                      "type": "<string>"
                    },
                    "services": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "maintenance_window": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "sequence_number": "<integer>",
                    "start_time": "<dateTime>",
                    "end_time": "<dateTime>",
                    "description": "<string>",
                    "created_by": {
                      "type": "<string>"
                    },
                    "services": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "List notifications",
        "description": "List notifications for a given time range, optionally filtered by type (sms_notification, email_notification, phone_notification, or push_notification).\n\nA Notification is created when an Incident is triggered or escalated.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#notifications)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "time_zone",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Time zone in which dates in the result will be rendered.",
            "example": "UTC"
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The start of the date range over which you want to search. The time element is optional.",
            "example": "<dateTime>",
            "required": true
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The end of the date range over which you want to search. This should be in the same format as since. The size of the date range must be less than 3 months.",
            "example": "<dateTime>",
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Return notification of this type only.",
            "example": "<string>"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional details to include.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "notifications": [
                    {
                      "id": "<string>",
                      "type": "<string>",
                      "started_at": "<dateTime>",
                      "address": "<string>",
                      "user": {
                        "type": "<string>"
                      },
                      "conferenceAddress": "<string>",
                      "status": "<string>",
                      "": "<string>"
                    },
                    {
                      "id": "<string>",
                      "type": "<string>",
                      "started_at": "<dateTime>",
                      "address": "<string>",
                      "user": {
                        "type": "<string>"
                      },
                      "conferenceAddress": "<string>",
                      "status": "<string>",
                      "": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/oncalls": {
      "get": {
        "tags": [
          "On-Calls"
        ],
        "summary": "List all of the on-calls",
        "description": "List the on-call entries during a given time range.\n\nAn on-call represents a contiguous unit of time for which a User will be on call for a given Escalation Policy and Escalation Rules.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#on-calls)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "time_zone",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Time zone in which dates in the result will be rendered.",
            "example": "UTC"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional details to include.",
            "example": "<string>"
          },
          {
            "name": "user_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the results, showing only on-calls for the specified user IDs.",
            "example": "<string>"
          },
          {
            "name": "escalation_policy_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the results, showing only on-calls for the specified escalation policy IDs.",
            "example": "<string>"
          },
          {
            "name": "schedule_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the results, showing only on-calls for the specified schedule IDs. If `null` is provided in the array, it includes permanent on-calls due to direct user escalation targets.",
            "example": "<string>"
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the time range over which you want to search. If an on-call period overlaps with the range, it will be included in the result. Defaults to current time. The search range cannot exceed 3 months.",
            "example": "<dateTime>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the time range over which you want to search. If an on-call period overlaps with the range, it will be included in the result. Defaults to current time. The search range cannot exceed 3 months, and the `until` time cannot be before the `since` time.",
            "example": "<dateTime>"
          },
          {
            "name": "earliest",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "This will filter on-calls such that only the earliest on-call for each combination of escalation policy, escalation level, and user is returned. This is useful for determining when the \"next\" on-calls are for a given set of filters.",
            "example": "<boolean>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "oncalls": [
                    {
                      "escalation_policy": {
                        "type": "<string>"
                      },
                      "user": {
                        "type": "<string>"
                      },
                      "schedule": {
                        "type": "<string>"
                      },
                      "escalation_level": "<integer>",
                      "start": "<dateTime>",
                      "end": "<dateTime>"
                    },
                    {
                      "escalation_policy": {
                        "type": "<string>"
                      },
                      "user": {
                        "type": "<string>"
                      },
                      "schedule": {
                        "type": "<string>"
                      },
                      "escalation_level": "<integer>",
                      "start": "<dateTime>",
                      "end": "<dateTime>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/priorities": {
      "get": {
        "tags": [
          "Priorities"
        ],
        "summary": "List priorities",
        "description": "List existing priorities, in order (most to least severe).\n\nA priority is a label representing the importance and impact of an incident. This feature is only available on Standard and Enterprise plans.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#priorities)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "priorities": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "description": "<string>"
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "description": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/response_plays": {
      "get": {
        "tags": [
          "Response Plays"
        ],
        "summary": "List Response Plays",
        "description": "List all of the existing Response Plays.\n\nResponse Plays allow you to create packages of Incident Actions that can be applied during an Incident's life cycle.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#response-plays)\n\nWhen using a Global API token, the `From` header is required.\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The email address of a valid user associated with the account making the request. This is optional, and is only used for change tracking.",
            "example": "<email>"
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the result, showing only the tags whose labels match the query.",
            "example": "<string>"
          },
          {
            "name": "filter_for_manual_run",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "When this parameter is present, only those Response Plays that can be run manually will be returned.",
            "example": "<boolean>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "response_plays": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "description": "<string>",
                      "team": {
                        "type": "<string>"
                      },
                      "subscribers": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "subscribers_message": "<string>",
                      "responders": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "responders_message": "<string>",
                      "runnability": "services",
                      "conference_number": "<string>",
                      "conference_url": "<string>",
                      "conference_type": "none"
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "description": "<string>",
                      "team": {
                        "type": "<string>"
                      },
                      "subscribers": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "subscribers_message": "<string>",
                      "responders": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "responders_message": "<string>",
                      "runnability": "services",
                      "conference_number": "<string>",
                      "conference_url": "<string>",
                      "conference_type": "none"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Response Plays"
        ],
        "summary": "Create a Response Play",
        "description": "Creates a new Response Plays.\n\nResponse Plays allow you to create packages of Incident Actions that can be applied during an Incident's life cycle.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#response-plays)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "response_play": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "team": {
                      "type": "<string>"
                    },
                    "subscribers": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "subscribers_message": "<string>",
                    "responders": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "responders_message": "<string>",
                    "runnability": "services",
                    "conference_number": "<string>",
                    "conference_url": "<string>",
                    "conference_type": "none"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "response_play": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "team": {
                      "type": "<string>"
                    },
                    "subscribers": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "subscribers_message": "<string>",
                    "responders": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "responders_message": "<string>",
                    "runnability": "services",
                    "conference_number": "<string>",
                    "conference_url": "<string>",
                    "conference_type": "none"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/response_plays/{id}": {
      "get": {
        "tags": [
          "Response Plays"
        ],
        "summary": "Get a Response Play",
        "description": "Get details about an existing Response Play.\n\nResponse Plays allow you to create packages of Incident Actions that can be applied during an Incident's life cycle.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#response-plays)\n\nWhen using a Global API token, the `From` header is required.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The email address of a valid user associated with the account making the request. This is optional, and is only used for change tracking.",
            "example": "<email>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "response_play": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "team": {
                      "type": "<string>"
                    },
                    "subscribers": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "subscribers_message": "<string>",
                    "responders": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "responders_message": "<string>",
                    "runnability": "services",
                    "conference_number": "<string>",
                    "conference_url": "<string>",
                    "conference_type": "none"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Response Plays"
        ],
        "summary": "Update a Response Play",
        "description": "Updates an existing Response Play.\n\nResponse Plays allow you to create packages of Incident Actions that can be applied during an Incident's life cycle.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#response-plays)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "response_play": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "team": {
                      "type": "<string>"
                    },
                    "subscribers": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "subscribers_message": "<string>",
                    "responders": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "responders_message": "<string>",
                    "runnability": "services",
                    "conference_number": "<string>",
                    "conference_url": "<string>",
                    "conference_type": "none"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "response_play": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "team": {
                      "type": "<string>"
                    },
                    "subscribers": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "subscribers_message": "<string>",
                    "responders": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "responders_message": "<string>",
                    "runnability": "services",
                    "conference_number": "<string>",
                    "conference_url": "<string>",
                    "conference_type": "none"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Response Plays"
        ],
        "summary": "Delete a Response Play",
        "description": "Delete an existing Response Play. Once the Response Play is deleted, the action cannot be undone.\n\nWARNING: When the Response Play is deleted, it is also removed from any Services that were using it.\n\nResponse Plays allow you to create packages of Incident Actions that can be applied to an Incident.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#response-plays)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/response_plays/{response_play_id}/run": {
      "post": {
        "tags": [
          "Response Plays"
        ],
        "summary": "Run a response play",
        "description": "Run a specified response play on a given incident.\n\nResponse Plays are a package of Incident Actions that can be applied during an Incident's life cycle.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#response-plays)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "incident": {
                    "type": "<string>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The email address of a valid user associated with the account making the request.",
            "example": "<email>",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "response_play_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The response play ID of the response play associated with the request.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rulesets": {
      "get": {
        "tags": [
          "Rulesets"
        ],
        "summary": "List Rulesets",
        "description": "List all Rulesets.\n\nRulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#rulesets)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "rulesets": [
                    {
                      "id": "<string>",
                      "self": "<url>",
                      "type": "<string>",
                      "name": "<string>",
                      "routing_keys": [
                        "<string>",
                        "<string>"
                      ],
                      "created_at": "<dateTime>",
                      "creator": {
                        "id": "<string>",
                        "type": "<string>",
                        "self": "<url>"
                      },
                      "updated_at": "<dateTime>",
                      "updater": {
                        "id": "<string>",
                        "type": "<string>",
                        "self": "<url>"
                      },
                      "team": {
                        "id": "<string>",
                        "type": "<string>",
                        "self": "<url>"
                      }
                    },
                    {
                      "id": "<string>",
                      "self": "<url>",
                      "type": "<string>",
                      "name": "<string>",
                      "routing_keys": [
                        "<string>",
                        "<string>"
                      ],
                      "created_at": "<dateTime>",
                      "creator": {
                        "id": "<string>",
                        "type": "<string>",
                        "self": "<url>"
                      },
                      "updated_at": "<dateTime>",
                      "updater": {
                        "id": "<string>",
                        "type": "<string>",
                        "self": "<url>"
                      },
                      "team": {
                        "id": "<string>",
                        "type": "<string>",
                        "self": "<url>"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Create a Ruleset",
        "description": "Create a new Ruleset.\n\nRulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#rulesets)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ruleset": {
                    "id": "<string>",
                    "self": "<url>",
                    "type": "<string>",
                    "name": "<string>",
                    "routing_keys": [
                      "<string>",
                      "<string>"
                    ],
                    "created_at": "<dateTime>",
                    "creator": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    },
                    "updated_at": "<dateTime>",
                    "updater": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    },
                    "team": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "ruleset": {
                    "id": "<string>",
                    "self": "<url>",
                    "type": "<string>",
                    "name": "<string>",
                    "routing_keys": [
                      "<string>",
                      "<string>"
                    ],
                    "created_at": "<dateTime>",
                    "creator": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    },
                    "updated_at": "<dateTime>",
                    "updater": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    },
                    "team": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rulesets/{id}": {
      "get": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Get a Ruleset",
        "description": "Get a Ruleset.\n\nRulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#rulesets)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "ruleset": {
                    "id": "<string>",
                    "self": "<url>",
                    "type": "<string>",
                    "name": "<string>",
                    "routing_keys": [
                      "<string>",
                      "<string>"
                    ],
                    "created_at": "<dateTime>",
                    "creator": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    },
                    "updated_at": "<dateTime>",
                    "updater": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    },
                    "team": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Update a Ruleset",
        "description": "Update a Ruleset.\n\nRulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#rulesets)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ruleset": {
                    "id": "<string>",
                    "self": "<url>",
                    "type": "<string>",
                    "name": "<string>",
                    "routing_keys": [
                      "<string>",
                      "<string>"
                    ],
                    "created_at": "<dateTime>",
                    "creator": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    },
                    "updated_at": "<dateTime>",
                    "updater": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    },
                    "team": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "ruleset": {
                    "id": "<string>",
                    "self": "<url>",
                    "type": "<string>",
                    "name": "<string>",
                    "routing_keys": [
                      "<string>",
                      "<string>"
                    ],
                    "created_at": "<dateTime>",
                    "creator": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    },
                    "updated_at": "<dateTime>",
                    "updater": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    },
                    "team": {
                      "id": "<string>",
                      "type": "<string>",
                      "self": "<url>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Delete a Ruleset",
        "description": "Delete a Ruleset.\n\nRulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#rulesets)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rulesets/{id}/rules": {
      "get": {
        "tags": [
          "Rulesets"
        ],
        "summary": "List Event Rules",
        "description": "List all Event Rules on a Ruleset.\n\nRulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#rulesets)\n\nNote: Create and Update on rules will accept 'description' or 'summary' interchangeably as an extraction action target. Get and List on rules will always return 'summary' as the target. If you are expecting 'description' please change your automation code to expect 'summary' instead.\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "rules": [
                    {
                      "id": "<string>",
                      "self": "<url>",
                      "disabled": "<boolean>",
                      "conditions": {
                        "operator": "<string>",
                        "subconditions": [
                          {
                            "operator": "<string>",
                            "parameters": {
                              "value": "<string>",
                              "path": "<string>",
                              "options": "<object>"
                            }
                          },
                          {
                            "operator": "<string>",
                            "parameters": {
                              "value": "<string>",
                              "path": "<string>",
                              "options": "<object>"
                            }
                          }
                        ]
                      },
                      "time_frame": {
                        "active_between": {
                          "start_time": "<integer>",
                          "end_time": "<integer>"
                        },
                        "scheduled_weekly": {
                          "start_time": "<integer>",
                          "duration": "<integer>",
                          "timezone": "<string>",
                          "weekdays": [
                            "<integer>",
                            "<integer>"
                          ]
                        }
                      },
                      "variables": [
                        {
                          "type": "<string>",
                          "name": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>"
                          }
                        },
                        {
                          "type": "<string>",
                          "name": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>"
                          }
                        }
                      ],
                      "position": "<integer>",
                      "catch_all": "<boolean>",
                      "actions": {
                        "annotate": {
                          "value": "<string>"
                        },
                        "event_action": {
                          "value": "<string>"
                        },
                        "extractions": [
                          {
                            "target": "<string>",
                            "source": "<string>",
                            "regex": "<string>"
                          },
                          {
                            "target": "<string>",
                            "source": "<string>",
                            "regex": "<string>"
                          }
                        ],
                        "priority": {
                          "value": "<string>"
                        },
                        "severity": {
                          "value": "<string>"
                        },
                        "suppress": {
                          "value": "<boolean>",
                          "threshold_value": "<integer>",
                          "threshold_time_unit": "<string>",
                          "threshold_time_amount": "<integer>"
                        },
                        "suspend": {
                          "value": "<integer>"
                        },
                        "route": {
                          "value": "<string>"
                        }
                      }
                    },
                    {
                      "id": "<string>",
                      "self": "<url>",
                      "disabled": "<boolean>",
                      "conditions": {
                        "operator": "<string>",
                        "subconditions": [
                          {
                            "operator": "<string>",
                            "parameters": {
                              "value": "<string>",
                              "path": "<string>",
                              "options": "<object>"
                            }
                          },
                          {
                            "operator": "<string>",
                            "parameters": {
                              "value": "<string>",
                              "path": "<string>",
                              "options": "<object>"
                            }
                          }
                        ]
                      },
                      "time_frame": {
                        "active_between": {
                          "start_time": "<integer>",
                          "end_time": "<integer>"
                        },
                        "scheduled_weekly": {
                          "start_time": "<integer>",
                          "duration": "<integer>",
                          "timezone": "<string>",
                          "weekdays": [
                            "<integer>",
                            "<integer>"
                          ]
                        }
                      },
                      "variables": [
                        {
                          "type": "<string>",
                          "name": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>"
                          }
                        },
                        {
                          "type": "<string>",
                          "name": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>"
                          }
                        }
                      ],
                      "position": "<integer>",
                      "catch_all": "<boolean>",
                      "actions": {
                        "annotate": {
                          "value": "<string>"
                        },
                        "event_action": {
                          "value": "<string>"
                        },
                        "extractions": [
                          {
                            "target": "<string>",
                            "source": "<string>",
                            "regex": "<string>"
                          },
                          {
                            "target": "<string>",
                            "source": "<string>",
                            "regex": "<string>"
                          }
                        ],
                        "priority": {
                          "value": "<string>"
                        },
                        "severity": {
                          "value": "<string>"
                        },
                        "suppress": {
                          "value": "<boolean>",
                          "threshold_value": "<integer>",
                          "threshold_time_unit": "<string>",
                          "threshold_time_amount": "<integer>"
                        },
                        "suspend": {
                          "value": "<integer>"
                        },
                        "route": {
                          "value": "<string>"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Create an Event Rule",
        "description": "Create a new Event Rule.\n\nRulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#rulesets)\n\nNote: Create and Update on rules will accept 'description' or 'summary' interchangeably as an extraction action target. Get and List on rules will always return 'summary' as the target. If you are expecting 'description' please change your automation code to expect 'summary' instead.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "rule": {
                    "id": "<string>",
                    "self": "<url>",
                    "disabled": "<boolean>",
                    "conditions": {
                      "operator": "<string>",
                      "subconditions": [
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        },
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        }
                      ]
                    },
                    "time_frame": {
                      "active_between": {
                        "start_time": "<integer>",
                        "end_time": "<integer>"
                      },
                      "scheduled_weekly": {
                        "start_time": "<integer>",
                        "duration": "<integer>",
                        "timezone": "<string>",
                        "weekdays": [
                          "<integer>",
                          "<integer>"
                        ]
                      }
                    },
                    "variables": [
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      },
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      }
                    ],
                    "position": "<integer>",
                    "catch_all": "<boolean>",
                    "actions": {
                      "annotate": {
                        "value": "<string>"
                      },
                      "event_action": {
                        "value": "<string>"
                      },
                      "extractions": [
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        },
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        }
                      ],
                      "priority": {
                        "value": "<string>"
                      },
                      "severity": {
                        "value": "<string>"
                      },
                      "suppress": {
                        "value": "<boolean>",
                        "threshold_value": "<integer>",
                        "threshold_time_unit": "<string>",
                        "threshold_time_amount": "<integer>"
                      },
                      "suspend": {
                        "value": "<integer>"
                      },
                      "route": {
                        "value": "<string>"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "rule": {
                    "id": "<string>",
                    "self": "<url>",
                    "disabled": "<boolean>",
                    "conditions": {
                      "operator": "<string>",
                      "subconditions": [
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        },
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        }
                      ]
                    },
                    "time_frame": {
                      "active_between": {
                        "start_time": "<integer>",
                        "end_time": "<integer>"
                      },
                      "scheduled_weekly": {
                        "start_time": "<integer>",
                        "duration": "<integer>",
                        "timezone": "<string>",
                        "weekdays": [
                          "<integer>",
                          "<integer>"
                        ]
                      }
                    },
                    "variables": [
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      },
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      }
                    ],
                    "position": "<integer>",
                    "catch_all": "<boolean>",
                    "actions": {
                      "annotate": {
                        "value": "<string>"
                      },
                      "event_action": {
                        "value": "<string>"
                      },
                      "extractions": [
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        },
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        }
                      ],
                      "priority": {
                        "value": "<string>"
                      },
                      "severity": {
                        "value": "<string>"
                      },
                      "suppress": {
                        "value": "<boolean>",
                        "threshold_value": "<integer>",
                        "threshold_time_unit": "<string>",
                        "threshold_time_amount": "<integer>"
                      },
                      "suspend": {
                        "value": "<integer>"
                      },
                      "route": {
                        "value": "<string>"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rulesets/{id}/rules/{rule_id}": {
      "get": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Get an Event Rule",
        "description": "Get an Event Rule.\n\nRulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#rulesets)\n\nNote: Create and Update on rules will accept 'description' or 'summary' interchangeably as an extraction action target. Get and List on rules will always return 'summary' as the target. If you are expecting 'description' please change your automation code to expect 'summary' instead.\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The id of the Event Rule to retrieve.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "rule": {
                    "id": "<string>",
                    "self": "<url>",
                    "disabled": "<boolean>",
                    "conditions": {
                      "operator": "<string>",
                      "subconditions": [
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        },
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        }
                      ]
                    },
                    "time_frame": {
                      "active_between": {
                        "start_time": "<integer>",
                        "end_time": "<integer>"
                      },
                      "scheduled_weekly": {
                        "start_time": "<integer>",
                        "duration": "<integer>",
                        "timezone": "<string>",
                        "weekdays": [
                          "<integer>",
                          "<integer>"
                        ]
                      }
                    },
                    "variables": [
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      },
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      }
                    ],
                    "position": "<integer>",
                    "catch_all": "<boolean>",
                    "actions": {
                      "annotate": {
                        "value": "<string>"
                      },
                      "event_action": {
                        "value": "<string>"
                      },
                      "extractions": [
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        },
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        }
                      ],
                      "priority": {
                        "value": "<string>"
                      },
                      "severity": {
                        "value": "<string>"
                      },
                      "suppress": {
                        "value": "<boolean>",
                        "threshold_value": "<integer>",
                        "threshold_time_unit": "<string>",
                        "threshold_time_amount": "<integer>"
                      },
                      "suspend": {
                        "value": "<integer>"
                      },
                      "route": {
                        "value": "<string>"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Update an Event Rule",
        "description": "Update an Event Rule. Note that the endpoint supports partial updates, so any number of the writable fields can be provided.\n\nRulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#rulesets)\n\nNote: Create and Update on rules will accept 'description' or 'summary' interchangeably as an extraction action target. Get and List on rules will always return 'summary' as the target. If you are expecting 'description' please change your automation code to expect 'summary' instead.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "rule_id": "<string>",
                  "rule": {
                    "id": "<string>",
                    "self": "<url>",
                    "disabled": "<boolean>",
                    "conditions": {
                      "operator": "<string>",
                      "subconditions": [
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        },
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        }
                      ]
                    },
                    "time_frame": {
                      "active_between": {
                        "start_time": "<integer>",
                        "end_time": "<integer>"
                      },
                      "scheduled_weekly": {
                        "start_time": "<integer>",
                        "duration": "<integer>",
                        "timezone": "<string>",
                        "weekdays": [
                          "<integer>",
                          "<integer>"
                        ]
                      }
                    },
                    "variables": [
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      },
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      }
                    ],
                    "position": "<integer>",
                    "catch_all": "<boolean>",
                    "actions": {
                      "annotate": {
                        "value": "<string>"
                      },
                      "event_action": {
                        "value": "<string>"
                      },
                      "extractions": [
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        },
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        }
                      ],
                      "priority": {
                        "value": "<string>"
                      },
                      "severity": {
                        "value": "<string>"
                      },
                      "suppress": {
                        "value": "<boolean>",
                        "threshold_value": "<integer>",
                        "threshold_time_unit": "<string>",
                        "threshold_time_amount": "<integer>"
                      },
                      "suspend": {
                        "value": "<integer>"
                      },
                      "route": {
                        "value": "<string>"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The id of the Event Rule to retrieve.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "rule": {
                    "id": "<string>",
                    "self": "<url>",
                    "disabled": "<boolean>",
                    "conditions": {
                      "operator": "<string>",
                      "subconditions": [
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        },
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        }
                      ]
                    },
                    "time_frame": {
                      "active_between": {
                        "start_time": "<integer>",
                        "end_time": "<integer>"
                      },
                      "scheduled_weekly": {
                        "start_time": "<integer>",
                        "duration": "<integer>",
                        "timezone": "<string>",
                        "weekdays": [
                          "<integer>",
                          "<integer>"
                        ]
                      }
                    },
                    "variables": [
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      },
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      }
                    ],
                    "position": "<integer>",
                    "catch_all": "<boolean>",
                    "actions": {
                      "annotate": {
                        "value": "<string>"
                      },
                      "event_action": {
                        "value": "<string>"
                      },
                      "extractions": [
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        },
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        }
                      ],
                      "priority": {
                        "value": "<string>"
                      },
                      "severity": {
                        "value": "<string>"
                      },
                      "suppress": {
                        "value": "<boolean>",
                        "threshold_value": "<integer>",
                        "threshold_time_unit": "<string>",
                        "threshold_time_amount": "<integer>"
                      },
                      "suspend": {
                        "value": "<integer>"
                      },
                      "route": {
                        "value": "<string>"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Delete an Event Rule",
        "description": "Delete an Event Rule.\n\nRulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#rulesets)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The id of the Event Rule to retrieve.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/schedules": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "List schedules",
        "description": "List the on-call schedules.\n\nA Schedule determines the time periods that users are On-Call.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#schedules)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the result, showing only the tags whose labels match the query.",
            "example": "<string>"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional details to include.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "schedules": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "schedule_layers": [
                        {
                          "start": "<dateTime>",
                          "users": [
                            {
                              "user": {
                                "type": "<string>"
                              }
                            },
                            {
                              "user": {
                                "type": "<string>"
                              }
                            }
                          ],
                          "rotation_virtual_start": "<dateTime>",
                          "rotation_turn_length_seconds": "<integer>",
                          "id": "<string>",
                          "end": "<dateTime>",
                          "restrictions": [
                            {
                              "type": "<string>",
                              "duration_seconds": "<integer>",
                              "start_time_of_day": "<partial-time>",
                              "start_day_of_week": "<integer>"
                            },
                            {
                              "type": "<string>",
                              "duration_seconds": "<integer>",
                              "start_time_of_day": "<partial-time>",
                              "start_day_of_week": "<integer>"
                            }
                          ],
                          "name": "<string>",
                          "rendered_schedule_entries": [
                            {
                              "start": "<dateTime>",
                              "end": "<dateTime>",
                              "user": {
                                "type": "<string>"
                              }
                            },
                            {
                              "start": "<dateTime>",
                              "end": "<dateTime>",
                              "user": {
                                "type": "<string>"
                              }
                            }
                          ],
                          "rendered_coverage_percentage": "<number>"
                        },
                        {
                          "start": "<dateTime>",
                          "users": [
                            {
                              "user": {
                                "type": "<string>"
                              }
                            },
                            {
                              "user": {
                                "type": "<string>"
                              }
                            }
                          ],
                          "rotation_virtual_start": "<dateTime>",
                          "rotation_turn_length_seconds": "<integer>",
                          "id": "<string>",
                          "end": "<dateTime>",
                          "restrictions": [
                            {
                              "type": "<string>",
                              "duration_seconds": "<integer>",
                              "start_time_of_day": "<partial-time>",
                              "start_day_of_week": "<integer>"
                            },
                            {
                              "type": "<string>",
                              "duration_seconds": "<integer>",
                              "start_time_of_day": "<partial-time>",
                              "start_day_of_week": "<integer>"
                            }
                          ],
                          "name": "<string>",
                          "rendered_schedule_entries": [
                            {
                              "start": "<dateTime>",
                              "end": "<dateTime>",
                              "user": {
                                "type": "<string>"
                              }
                            },
                            {
                              "start": "<dateTime>",
                              "end": "<dateTime>",
                              "user": {
                                "type": "<string>"
                              }
                            }
                          ],
                          "rendered_coverage_percentage": "<number>"
                        }
                      ],
                      "time_zone": "<activesupport-time-zone>",
                      "name": "<string>",
                      "description": "<string>",
                      "final_schedule": {
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      },
                      "overrides_subschedule": {
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      },
                      "escalation_policies": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "users": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ]
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "schedule_layers": [
                        {
                          "start": "<dateTime>",
                          "users": [
                            {
                              "user": {
                                "type": "<string>"
                              }
                            },
                            {
                              "user": {
                                "type": "<string>"
                              }
                            }
                          ],
                          "rotation_virtual_start": "<dateTime>",
                          "rotation_turn_length_seconds": "<integer>",
                          "id": "<string>",
                          "end": "<dateTime>",
                          "restrictions": [
                            {
                              "type": "<string>",
                              "duration_seconds": "<integer>",
                              "start_time_of_day": "<partial-time>",
                              "start_day_of_week": "<integer>"
                            },
                            {
                              "type": "<string>",
                              "duration_seconds": "<integer>",
                              "start_time_of_day": "<partial-time>",
                              "start_day_of_week": "<integer>"
                            }
                          ],
                          "name": "<string>",
                          "rendered_schedule_entries": [
                            {
                              "start": "<dateTime>",
                              "end": "<dateTime>",
                              "user": {
                                "type": "<string>"
                              }
                            },
                            {
                              "start": "<dateTime>",
                              "end": "<dateTime>",
                              "user": {
                                "type": "<string>"
                              }
                            }
                          ],
                          "rendered_coverage_percentage": "<number>"
                        },
                        {
                          "start": "<dateTime>",
                          "users": [
                            {
                              "user": {
                                "type": "<string>"
                              }
                            },
                            {
                              "user": {
                                "type": "<string>"
                              }
                            }
                          ],
                          "rotation_virtual_start": "<dateTime>",
                          "rotation_turn_length_seconds": "<integer>",
                          "id": "<string>",
                          "end": "<dateTime>",
                          "restrictions": [
                            {
                              "type": "<string>",
                              "duration_seconds": "<integer>",
                              "start_time_of_day": "<partial-time>",
                              "start_day_of_week": "<integer>"
                            },
                            {
                              "type": "<string>",
                              "duration_seconds": "<integer>",
                              "start_time_of_day": "<partial-time>",
                              "start_day_of_week": "<integer>"
                            }
                          ],
                          "name": "<string>",
                          "rendered_schedule_entries": [
                            {
                              "start": "<dateTime>",
                              "end": "<dateTime>",
                              "user": {
                                "type": "<string>"
                              }
                            },
                            {
                              "start": "<dateTime>",
                              "end": "<dateTime>",
                              "user": {
                                "type": "<string>"
                              }
                            }
                          ],
                          "rendered_coverage_percentage": "<number>"
                        }
                      ],
                      "time_zone": "<activesupport-time-zone>",
                      "name": "<string>",
                      "description": "<string>",
                      "final_schedule": {
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      },
                      "overrides_subschedule": {
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      },
                      "escalation_policies": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "users": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Schedules"
        ],
        "summary": "Create a schedule",
        "description": "Create a new on-call schedule.\n\nA Schedule determines the time periods that users are On-Call.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#schedules)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "schedule": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "schedule_layers": [
                      {
                        "start": "<dateTime>",
                        "users": [
                          {
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rotation_virtual_start": "<dateTime>",
                        "rotation_turn_length_seconds": "<integer>",
                        "id": "<string>",
                        "end": "<dateTime>",
                        "restrictions": [
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          },
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          }
                        ],
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      },
                      {
                        "start": "<dateTime>",
                        "users": [
                          {
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rotation_virtual_start": "<dateTime>",
                        "rotation_turn_length_seconds": "<integer>",
                        "id": "<string>",
                        "end": "<dateTime>",
                        "restrictions": [
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          },
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          }
                        ],
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      }
                    ],
                    "time_zone": "<activesupport-time-zone>",
                    "name": "<string>",
                    "description": "<string>",
                    "final_schedule": {
                      "name": "<string>",
                      "rendered_schedule_entries": [
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        },
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "rendered_coverage_percentage": "<number>"
                    },
                    "overrides_subschedule": {
                      "name": "<string>",
                      "rendered_schedule_entries": [
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        },
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "rendered_coverage_percentage": "<number>"
                    },
                    "escalation_policies": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "users": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "overflow",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Any on-call schedule entries that pass the date range bounds will be truncated at the bounds, unless the parameter `overflow=true` is passed. This parameter defaults to false.\nFor instance, if your schedule is a rotation that changes daily at midnight UTC, and your date range is from `2011-06-01T10:00:00Z` to `2011-06-01T14:00:00Z`:\n\n\n- If you don't pass the `overflow=true` parameter, you will get one schedule entry returned with a start of `2011-06-01T10:00:00Z` and end of `2011-06-01T14:00:00Z`.\n- If you do pass the `overflow=true` parameter, you will get one schedule entry returned with a start of `2011-06-01T00:00:00Z` and end of `2011-06-02T00:00:00Z`.\n",
            "example": "false"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "schedule": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "schedule_layers": [
                      {
                        "start": "<dateTime>",
                        "users": [
                          {
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rotation_virtual_start": "<dateTime>",
                        "rotation_turn_length_seconds": "<integer>",
                        "id": "<string>",
                        "end": "<dateTime>",
                        "restrictions": [
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          },
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          }
                        ],
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      },
                      {
                        "start": "<dateTime>",
                        "users": [
                          {
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rotation_virtual_start": "<dateTime>",
                        "rotation_turn_length_seconds": "<integer>",
                        "id": "<string>",
                        "end": "<dateTime>",
                        "restrictions": [
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          },
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          }
                        ],
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      }
                    ],
                    "time_zone": "<activesupport-time-zone>",
                    "name": "<string>",
                    "description": "<string>",
                    "final_schedule": {
                      "name": "<string>",
                      "rendered_schedule_entries": [
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        },
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "rendered_coverage_percentage": "<number>"
                    },
                    "overrides_subschedule": {
                      "name": "<string>",
                      "rendered_schedule_entries": [
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        },
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "rendered_coverage_percentage": "<number>"
                    },
                    "escalation_policies": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "users": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/schedules/{id}": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "Get a schedule",
        "description": "Show detailed information about a schedule, including entries for each layer and sub-schedule.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "time_zone",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Time zone in which dates in the result will be rendered.",
            "example": "UTC"
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search.",
            "example": "<dateTime>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the date range over which you want to search.",
            "example": "<dateTime>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "schedule": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "schedule_layers": [
                      {
                        "start": "<dateTime>",
                        "users": [
                          {
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rotation_virtual_start": "<dateTime>",
                        "rotation_turn_length_seconds": "<integer>",
                        "id": "<string>",
                        "end": "<dateTime>",
                        "restrictions": [
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          },
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          }
                        ],
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      },
                      {
                        "start": "<dateTime>",
                        "users": [
                          {
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rotation_virtual_start": "<dateTime>",
                        "rotation_turn_length_seconds": "<integer>",
                        "id": "<string>",
                        "end": "<dateTime>",
                        "restrictions": [
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          },
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          }
                        ],
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      }
                    ],
                    "time_zone": "<activesupport-time-zone>",
                    "name": "<string>",
                    "description": "<string>",
                    "final_schedule": {
                      "name": "<string>",
                      "rendered_schedule_entries": [
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        },
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "rendered_coverage_percentage": "<number>"
                    },
                    "overrides_subschedule": {
                      "name": "<string>",
                      "rendered_schedule_entries": [
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        },
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "rendered_coverage_percentage": "<number>"
                    },
                    "escalation_policies": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "users": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Schedules"
        ],
        "summary": "Delete a schedule",
        "description": "Delete an on-call schedule.\n\nA Schedule determines the time periods that users are On-Call.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#schedules)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Schedules"
        ],
        "summary": "Update a schedule",
        "description": "Update an existing on-call schedule.\n\nA Schedule determines the time periods that users are On-Call.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#schedules)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "schedule": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "schedule_layers": [
                      {
                        "start": "<dateTime>",
                        "users": [
                          {
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rotation_virtual_start": "<dateTime>",
                        "rotation_turn_length_seconds": "<integer>",
                        "id": "<string>",
                        "end": "<dateTime>",
                        "restrictions": [
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          },
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          }
                        ],
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      },
                      {
                        "start": "<dateTime>",
                        "users": [
                          {
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rotation_virtual_start": "<dateTime>",
                        "rotation_turn_length_seconds": "<integer>",
                        "id": "<string>",
                        "end": "<dateTime>",
                        "restrictions": [
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          },
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          }
                        ],
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      }
                    ],
                    "time_zone": "<activesupport-time-zone>",
                    "name": "<string>",
                    "description": "<string>",
                    "final_schedule": {
                      "name": "<string>",
                      "rendered_schedule_entries": [
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        },
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "rendered_coverage_percentage": "<number>"
                    },
                    "overrides_subschedule": {
                      "name": "<string>",
                      "rendered_schedule_entries": [
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        },
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "rendered_coverage_percentage": "<number>"
                    },
                    "escalation_policies": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "users": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "overflow",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Any on-call schedule entries that pass the date range bounds will be truncated at the bounds, unless the parameter `overflow=true` is passed. This parameter defaults to false.\nFor instance, if your schedule is a rotation that changes daily at midnight UTC, and your date range is from `2011-06-01T10:00:00Z` to `2011-06-01T14:00:00Z`:\n\n\n- If you don't pass the `overflow=true` parameter, you will get one schedule entry returned with a start of `2011-06-01T10:00:00Z` and end of `2011-06-01T14:00:00Z`.\n- If you do pass the `overflow=true` parameter, you will get one schedule entry returned with a start of `2011-06-01T00:00:00Z` and end of `2011-06-02T00:00:00Z`.\n",
            "example": "false"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "schedule": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "schedule_layers": [
                      {
                        "start": "<dateTime>",
                        "users": [
                          {
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rotation_virtual_start": "<dateTime>",
                        "rotation_turn_length_seconds": "<integer>",
                        "id": "<string>",
                        "end": "<dateTime>",
                        "restrictions": [
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          },
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          }
                        ],
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      },
                      {
                        "start": "<dateTime>",
                        "users": [
                          {
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rotation_virtual_start": "<dateTime>",
                        "rotation_turn_length_seconds": "<integer>",
                        "id": "<string>",
                        "end": "<dateTime>",
                        "restrictions": [
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          },
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          }
                        ],
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      }
                    ],
                    "time_zone": "<activesupport-time-zone>",
                    "name": "<string>",
                    "description": "<string>",
                    "final_schedule": {
                      "name": "<string>",
                      "rendered_schedule_entries": [
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        },
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "rendered_coverage_percentage": "<number>"
                    },
                    "overrides_subschedule": {
                      "name": "<string>",
                      "rendered_schedule_entries": [
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        },
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "rendered_coverage_percentage": "<number>"
                    },
                    "escalation_policies": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "users": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/schedules/{id}/audit/records": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "List audit records for a schedule",
        "description": "The returned records are sorted by the `execution_time` from newest to oldest.\n\nSee [`Cursor-based pagination`](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for instructions on how to paginate through the result set.\n\nFor more information see the [Audit API Document](https://developer.pagerduty.com/docs/rest-api-v2/audit-records-api/).\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The minimum of the `limit` parameter used in the request or the maximum request size of the API.",
            "example": "<integer>"
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter used to request the \"next\" set of results from an API.  The value provided here is most commonly obtained from the `next_cursor` field of the previous request.  When no value is provided, the request starts at the beginning of the result set.\n",
            "example": "<string>"
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search. If not specified, defaults to `now() - 24 hours` (past 24 hours)",
            "example": "<dateTime>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the date range over which you want to search. If not specified, defaults to `now()`",
            "example": "<dateTime>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "records": [
                    {
                      "id": "<string>",
                      "execution_time": "<dateTime>",
                      "method": {
                        "type": "<string>",
                        "description": "<string>",
                        "truncated_token": "<string>"
                      },
                      "root_resource": {},
                      "action": "<string>",
                      "self": "<string>",
                      "execution_context": {
                        "request_id": "<string>",
                        "remote_address": "<string>"
                      },
                      "details": {
                        "resource": {},
                        "fields": [
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          }
                        ],
                        "references": [
                          {
                            "name": "<string>",
                            "description": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>"
                          }
                        ]
                      }
                    },
                    {
                      "id": "<string>",
                      "execution_time": "<dateTime>",
                      "method": {
                        "type": "<string>",
                        "description": "<string>",
                        "truncated_token": "<string>"
                      },
                      "root_resource": {},
                      "action": "<string>",
                      "self": "<string>",
                      "execution_context": {
                        "request_id": "<string>",
                        "remote_address": "<string>"
                      },
                      "details": {
                        "resource": {},
                        "fields": [
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          }
                        ],
                        "references": [
                          {
                            "name": "<string>",
                            "description": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>"
                          }
                        ]
                      }
                    }
                  ],
                  "response_metadata": {
                    "messages": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "limit": "<integer>",
                  "next_cursor": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/schedules/{id}/overrides": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "List overrides",
        "description": "List overrides for a given time range.\n\nA Schedule determines the time periods that users are On-Call.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#schedules)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The start of the date range over which you want to search.",
            "example": "<dateTime>",
            "required": true
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The end of the date range over which you want to search.",
            "example": "<dateTime>",
            "required": true
          },
          {
            "name": "editable",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "When this parameter is present, only editable overrides will be returned. The result will only include the id of the override if this parameter is present. Only future overrides are editable.",
            "example": "<boolean>"
          },
          {
            "name": "overflow",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Any on-call schedule entries that pass the date range bounds will be truncated at the bounds, unless the parameter overflow=true is passed. This parameter defaults to false.",
            "example": "<boolean>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "overrides": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "start": "<dateTime>",
                      "end": "<dateTime>",
                      "user": {
                        "type": "<string>"
                      }
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "start": "<dateTime>",
                      "end": "<dateTime>",
                      "user": {
                        "type": "<string>"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Schedules"
        ],
        "summary": "Create one or more overrides",
        "description": "Create one or more overrides, each for a specific user covering a specified time range. If you create an override on top of an existing override, the last created override will have priority.\n\nA Schedule determines the time periods that users are On-Call.\n\nNote: An older implementation of this endpoint only supported creating a single ocverride per request. That functionality is still supported, but deprecated and may be removed in the future.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#schedules)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "overrides": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "start": "<dateTime>",
                      "end": "<dateTime>",
                      "user": {
                        "type": "<string>"
                      }
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "start": "<dateTime>",
                      "end": "<dateTime>",
                      "user": {
                        "type": "<string>"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "override": {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "start": "<dateTime>",
                      "end": "<dateTime>",
                      "user": {
                        "type": "<string>"
                      }
                    },
                    "status": "<number>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/schedules/{id}/overrides/{override_id}": {
      "delete": {
        "tags": [
          "Schedules"
        ],
        "summary": "Delete an override",
        "description": "Remove an override.\n\nYou cannot remove a past override.\n\nIf the override start time is before the current time, but the end time is after the current time, the override will be truncated to the current time.\n\nIf the override is truncated, the status code will be 200 OK, as opposed to a 204 No Content for a successful delete.\n\nA Schedule determines the time periods that users are On-Call.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#schedules)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "override_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The override ID on the schedule.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/schedules/{id}/users": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "List users on call.",
        "description": "List all of the users on call in a given schedule for a given time range.\n\nA Schedule determines the time periods that users are On-Call.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#schedules)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search.",
            "example": "<dateTime>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the date range over which you want to search.",
            "example": "<dateTime>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "users": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "email": "<email>",
                      "time_zone": "<tzinfo>",
                      "color": "<string>",
                      "role": "<string>",
                      "avatar_url": "<url>",
                      "description": "<string>",
                      "invitation_sent": "<boolean>",
                      "job_title": "<string>",
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "contact_methods": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "notification_rules": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ]
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "email": "<email>",
                      "time_zone": "<tzinfo>",
                      "color": "<string>",
                      "role": "<string>",
                      "avatar_url": "<url>",
                      "description": "<string>",
                      "invitation_sent": "<boolean>",
                      "job_title": "<string>",
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "contact_methods": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "notification_rules": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/schedules/preview": {
      "post": {
        "tags": [
          "Schedules"
        ],
        "summary": "Preview a schedule",
        "description": "Preview what an on-call schedule would look like without saving it.\n\nA Schedule determines the time periods that users are On-Call.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#schedules)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "schedule": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "schedule_layers": [
                      {
                        "start": "<dateTime>",
                        "users": [
                          {
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rotation_virtual_start": "<dateTime>",
                        "rotation_turn_length_seconds": "<integer>",
                        "id": "<string>",
                        "end": "<dateTime>",
                        "restrictions": [
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          },
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          }
                        ],
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      },
                      {
                        "start": "<dateTime>",
                        "users": [
                          {
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rotation_virtual_start": "<dateTime>",
                        "rotation_turn_length_seconds": "<integer>",
                        "id": "<string>",
                        "end": "<dateTime>",
                        "restrictions": [
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          },
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          }
                        ],
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      }
                    ],
                    "time_zone": "<activesupport-time-zone>",
                    "name": "<string>",
                    "description": "<string>",
                    "final_schedule": {
                      "name": "<string>",
                      "rendered_schedule_entries": [
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        },
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "rendered_coverage_percentage": "<number>"
                    },
                    "overrides_subschedule": {
                      "name": "<string>",
                      "rendered_schedule_entries": [
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        },
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "rendered_coverage_percentage": "<number>"
                    },
                    "escalation_policies": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "users": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search.",
            "example": "<dateTime>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the date range over which you want to search.",
            "example": "<dateTime>"
          },
          {
            "name": "overflow",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Any on-call schedule entries that pass the date range bounds will be truncated at the bounds, unless the parameter `overflow=true` is passed. This parameter defaults to false.\nFor instance, if your schedule is a rotation that changes daily at midnight UTC, and your date range is from `2011-06-01T10:00:00Z` to `2011-06-01T14:00:00Z`:\n\n\n- If you don't pass the `overflow=true` parameter, you will get one schedule entry returned with a start of `2011-06-01T10:00:00Z` and end of `2011-06-01T14:00:00Z`.\n- If you do pass the `overflow=true` parameter, you will get one schedule entry returned with a start of `2011-06-01T00:00:00Z` and end of `2011-06-02T00:00:00Z`.\n",
            "example": "false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "schedule": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "schedule_layers": [
                      {
                        "start": "<dateTime>",
                        "users": [
                          {
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rotation_virtual_start": "<dateTime>",
                        "rotation_turn_length_seconds": "<integer>",
                        "id": "<string>",
                        "end": "<dateTime>",
                        "restrictions": [
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          },
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          }
                        ],
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      },
                      {
                        "start": "<dateTime>",
                        "users": [
                          {
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rotation_virtual_start": "<dateTime>",
                        "rotation_turn_length_seconds": "<integer>",
                        "id": "<string>",
                        "end": "<dateTime>",
                        "restrictions": [
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          },
                          {
                            "type": "<string>",
                            "duration_seconds": "<integer>",
                            "start_time_of_day": "<partial-time>",
                            "start_day_of_week": "<integer>"
                          }
                        ],
                        "name": "<string>",
                        "rendered_schedule_entries": [
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          },
                          {
                            "start": "<dateTime>",
                            "end": "<dateTime>",
                            "user": {
                              "type": "<string>"
                            }
                          }
                        ],
                        "rendered_coverage_percentage": "<number>"
                      }
                    ],
                    "time_zone": "<activesupport-time-zone>",
                    "name": "<string>",
                    "description": "<string>",
                    "final_schedule": {
                      "name": "<string>",
                      "rendered_schedule_entries": [
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        },
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "rendered_coverage_percentage": "<number>"
                    },
                    "overrides_subschedule": {
                      "name": "<string>",
                      "rendered_schedule_entries": [
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        },
                        {
                          "start": "<dateTime>",
                          "end": "<dateTime>",
                          "user": {
                            "type": "<string>"
                          }
                        }
                      ],
                      "rendered_coverage_percentage": "<number>"
                    },
                    "escalation_policies": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "users": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service_dependencies/associate": {
      "post": {
        "tags": [
          "Service Dependencies"
        ],
        "summary": "Associate service dependencies",
        "description": "Create new dependencies between two services.\n\nBusiness services model capabilities that span multiple technical services and that may be owned by several different teams.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#business-services)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "relationships": [
                    {
                      "supporting_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "dependent_service": {
                        "id": "<string>",
                        "type": "<string>"
                      }
                    },
                    {
                      "supporting_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "dependent_service": {
                        "id": "<string>",
                        "type": "<string>"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "relationships": [
                    {
                      "supporting_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "dependent_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "id": "<string>",
                      "type": "<string>"
                    },
                    {
                      "supporting_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "dependent_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "id": "<string>",
                      "type": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service_dependencies/business_services/{id}": {
      "get": {
        "tags": [
          "Service Dependencies"
        ],
        "summary": "Get Business Service dependencies",
        "description": "Get all immediate dependencies of any Business Service.\n\nBusiness Services model capabilities that span multiple technical services and that may be owned by several different teams.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#business-services)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "relationships": [
                    {
                      "supporting_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "dependent_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "id": "<string>",
                      "type": "<string>"
                    },
                    {
                      "supporting_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "dependent_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "id": "<string>",
                      "type": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service_dependencies/disassociate": {
      "post": {
        "tags": [
          "Service Dependencies"
        ],
        "summary": "Disassociate service dependencies",
        "description": "Disassociate dependencies between two services.\n\nBusiness services model capabilities that span multiple technical services and that may be owned by several different teams.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#business-services)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "relationships": [
                    {
                      "supporting_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "dependent_service": {
                        "id": "<string>",
                        "type": "<string>"
                      }
                    },
                    {
                      "supporting_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "dependent_service": {
                        "id": "<string>",
                        "type": "<string>"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "relationships": [
                    {
                      "supporting_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "dependent_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "id": "<string>",
                      "type": "<string>"
                    },
                    {
                      "supporting_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "dependent_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "id": "<string>",
                      "type": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service_dependencies/technical_services/{id}": {
      "get": {
        "tags": [
          "Service Dependencies"
        ],
        "summary": "Get technical service dependencies",
        "description": "Get all immediate dependencies of any technical service.\nTechnical services are also known as `services`.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#services)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "relationships": [
                    {
                      "supporting_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "dependent_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "id": "<string>",
                      "type": "<string>"
                    },
                    {
                      "supporting_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "dependent_service": {
                        "id": "<string>",
                        "type": "<string>"
                      },
                      "id": "<string>",
                      "type": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "List services",
        "description": "List existing Services.\n\nA service may represent an application, component, or team you wish to open incidents against.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#services)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the result, showing only the tags whose labels match the query.",
            "example": "<string>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "team_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "An array of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.",
            "example": "<string>"
          },
          {
            "name": "time_zone",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Time zone in which dates in the result will be rendered.",
            "example": "UTC"
          },
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Used to specify the field you wish to sort the results on.",
            "example": "name"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional details to include.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "services": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "description": "<string>",
                      "auto_resolve_timeout": 14400,
                      "acknowledgement_timeout": 1800,
                      "created_at": "<dateTime>",
                      "status": "active",
                      "last_incident_timestamp": "<dateTime>",
                      "escalation_policy": {
                        "type": "<string>"
                      },
                      "response_play": {
                        "type": "<string>"
                      },
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "integrations": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "incident_urgency_rule": {
                        "type": "constant",
                        "urgency": "high",
                        "during_support_hours": {
                          "value": "<Circular reference to #/components/schemas/IncidentUrgencyType detected>"
                        },
                        "outside_support_hours": {
                          "value": "<Circular reference to #/components/schemas/IncidentUrgencyType detected>"
                        }
                      },
                      "support_hours": {
                        "type": "fixed_time_per_day",
                        "time_zone": "<activesupport-time-zone>",
                        "days_of_week": [
                          "<integer>",
                          "<integer>"
                        ],
                        "start_time": "<time>",
                        "end_time": "<time>"
                      },
                      "scheduled_actions": [
                        {
                          "type": "<string>",
                          "at": {
                            "type": "<string>",
                            "name": "<string>"
                          },
                          "to_urgency": "<string>"
                        },
                        {
                          "type": "<string>",
                          "at": {
                            "type": "<string>",
                            "name": "<string>"
                          },
                          "to_urgency": "<string>"
                        }
                      ],
                      "addons": [
                        {
                          "src": "<url>",
                          "name": "<string>",
                          "type": "<string>"
                        },
                        {
                          "src": "<url>",
                          "name": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "alert_creation": "<string>",
                      "alert_grouping_parameters": {
                        "type": "<string>",
                        "config": {
                          "timeout": "<integer>"
                        }
                      },
                      "alert_grouping": "<string>",
                      "alert_grouping_timeout": "<integer>"
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "description": "<string>",
                      "auto_resolve_timeout": 14400,
                      "acknowledgement_timeout": 1800,
                      "created_at": "<dateTime>",
                      "status": "active",
                      "last_incident_timestamp": "<dateTime>",
                      "escalation_policy": {
                        "type": "<string>"
                      },
                      "response_play": {
                        "type": "<string>"
                      },
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "integrations": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "incident_urgency_rule": {
                        "type": "constant",
                        "urgency": "high",
                        "during_support_hours": {
                          "value": "<Circular reference to #/components/schemas/IncidentUrgencyType detected>"
                        },
                        "outside_support_hours": {
                          "value": "<Circular reference to #/components/schemas/IncidentUrgencyType detected>"
                        }
                      },
                      "support_hours": {
                        "type": "fixed_time_per_day",
                        "time_zone": "<activesupport-time-zone>",
                        "days_of_week": [
                          "<integer>",
                          "<integer>"
                        ],
                        "start_time": "<time>",
                        "end_time": "<time>"
                      },
                      "scheduled_actions": [
                        {
                          "type": "<string>",
                          "at": {
                            "type": "<string>",
                            "name": "<string>"
                          },
                          "to_urgency": "<string>"
                        },
                        {
                          "type": "<string>",
                          "at": {
                            "type": "<string>",
                            "name": "<string>"
                          },
                          "to_urgency": "<string>"
                        }
                      ],
                      "addons": [
                        {
                          "src": "<url>",
                          "name": "<string>",
                          "type": "<string>"
                        },
                        {
                          "src": "<url>",
                          "name": "<string>",
                          "type": "<string>"
                        }
                      ],
                      "alert_creation": "<string>",
                      "alert_grouping_parameters": {
                        "type": "<string>",
                        "config": {
                          "timeout": "<integer>"
                        }
                      },
                      "alert_grouping": "<string>",
                      "alert_grouping_timeout": "<integer>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "Create a service",
        "description": "Create a new service.\n\nIf `status` is included in the request, it must have a value of `active` when creating a new service. If a different status is required, make a second request to update the service.\n\nA service may represent an application, component, or team you wish to open incidents against.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#services)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "service": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "auto_resolve_timeout": 14400,
                    "acknowledgement_timeout": 1800,
                    "created_at": "<dateTime>",
                    "status": "active",
                    "last_incident_timestamp": "<dateTime>",
                    "escalation_policy": {
                      "type": "<string>"
                    },
                    "response_play": {
                      "type": "<string>"
                    },
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "integrations": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "incident_urgency_rule": {
                      "type": "constant",
                      "urgency": "high",
                      "during_support_hours": {
                        "value": "<Circular reference to #/components/schemas/IncidentUrgencyType detected>"
                      },
                      "outside_support_hours": {
                        "value": "<Circular reference to #/components/schemas/IncidentUrgencyType detected>"
                      }
                    },
                    "support_hours": {
                      "type": "fixed_time_per_day",
                      "time_zone": "<activesupport-time-zone>",
                      "days_of_week": [
                        "<integer>",
                        "<integer>"
                      ],
                      "start_time": "<time>",
                      "end_time": "<time>"
                    },
                    "scheduled_actions": [
                      {
                        "type": "<string>",
                        "at": {
                          "type": "<string>",
                          "name": "<string>"
                        },
                        "to_urgency": "<string>"
                      },
                      {
                        "type": "<string>",
                        "at": {
                          "type": "<string>",
                          "name": "<string>"
                        },
                        "to_urgency": "<string>"
                      }
                    ],
                    "addons": [
                      {
                        "src": "<url>",
                        "name": "<string>",
                        "type": "<string>"
                      },
                      {
                        "src": "<url>",
                        "name": "<string>",
                        "type": "<string>"
                      }
                    ],
                    "alert_creation": "<string>",
                    "alert_grouping_parameters": {
                      "type": "<string>",
                      "config": {
                        "timeout": "<integer>"
                      }
                    },
                    "alert_grouping": "<string>",
                    "alert_grouping_timeout": "<integer>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "service": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "auto_resolve_timeout": 14400,
                    "acknowledgement_timeout": 1800,
                    "created_at": "<dateTime>",
                    "status": "active",
                    "last_incident_timestamp": "<dateTime>",
                    "escalation_policy": {
                      "type": "<string>"
                    },
                    "response_play": {
                      "type": "<string>"
                    },
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "integrations": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "incident_urgency_rule": {
                      "type": "constant",
                      "urgency": "high",
                      "during_support_hours": {
                        "value": "<Circular reference to #/components/schemas/IncidentUrgencyType detected>"
                      },
                      "outside_support_hours": {
                        "value": "<Circular reference to #/components/schemas/IncidentUrgencyType detected>"
                      }
                    },
                    "support_hours": {
                      "type": "fixed_time_per_day",
                      "time_zone": "<activesupport-time-zone>",
                      "days_of_week": [
                        "<integer>",
                        "<integer>"
                      ],
                      "start_time": "<time>",
                      "end_time": "<time>"
                    },
                    "scheduled_actions": [
                      {
                        "type": "<string>",
                        "at": {
                          "type": "<string>",
                          "name": "<string>"
                        },
                        "to_urgency": "<string>"
                      },
                      {
                        "type": "<string>",
                        "at": {
                          "type": "<string>",
                          "name": "<string>"
                        },
                        "to_urgency": "<string>"
                      }
                    ],
                    "addons": [
                      {
                        "src": "<url>",
                        "name": "<string>",
                        "type": "<string>"
                      },
                      {
                        "src": "<url>",
                        "name": "<string>",
                        "type": "<string>"
                      }
                    ],
                    "alert_creation": "<string>",
                    "alert_grouping_parameters": {
                      "type": "<string>",
                      "config": {
                        "timeout": "<integer>"
                      }
                    },
                    "alert_grouping": "<string>",
                    "alert_grouping_timeout": "<integer>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{id}": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get a service",
        "description": "Get details about an existing service.\n\nA service may represent an application, component, or team you wish to open incidents against.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#services)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional details to include.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "service": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "auto_resolve_timeout": 14400,
                    "acknowledgement_timeout": 1800,
                    "created_at": "<dateTime>",
                    "status": "active",
                    "last_incident_timestamp": "<dateTime>",
                    "escalation_policy": {
                      "type": "<string>"
                    },
                    "response_play": {
                      "type": "<string>"
                    },
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "integrations": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "incident_urgency_rule": {
                      "type": "constant",
                      "urgency": "high",
                      "during_support_hours": {
                        "value": "<Circular reference to #/components/schemas/IncidentUrgencyType detected>"
                      },
                      "outside_support_hours": {
                        "value": "<Circular reference to #/components/schemas/IncidentUrgencyType detected>"
                      }
                    },
                    "support_hours": {
                      "type": "fixed_time_per_day",
                      "time_zone": "<activesupport-time-zone>",
                      "days_of_week": [
                        "<integer>",
                        "<integer>"
                      ],
                      "start_time": "<time>",
                      "end_time": "<time>"
                    },
                    "scheduled_actions": [
                      {
                        "type": "<string>",
                        "at": {
                          "type": "<string>",
                          "name": "<string>"
                        },
                        "to_urgency": "<string>"
                      },
                      {
                        "type": "<string>",
                        "at": {
                          "type": "<string>",
                          "name": "<string>"
                        },
                        "to_urgency": "<string>"
                      }
                    ],
                    "addons": [
                      {
                        "src": "<url>",
                        "name": "<string>",
                        "type": "<string>"
                      },
                      {
                        "src": "<url>",
                        "name": "<string>",
                        "type": "<string>"
                      }
                    ],
                    "alert_creation": "<string>",
                    "alert_grouping_parameters": {
                      "type": "<string>",
                      "config": {
                        "timeout": "<integer>"
                      }
                    },
                    "alert_grouping": "<string>",
                    "alert_grouping_timeout": "<integer>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Services"
        ],
        "summary": "Delete a service",
        "description": "Delete an existing service.\n\nOnce the service is deleted, it will not be accessible from the web UI and new incidents won't be able to be created for this service.\n\nA service may represent an application, component, or team you wish to open incidents against.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#services)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Services"
        ],
        "summary": "Update a service",
        "description": "Update an existing service.\n\nA service may represent an application, component, or team you wish to open incidents against.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#services)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "service": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "auto_resolve_timeout": 14400,
                    "acknowledgement_timeout": 1800,
                    "created_at": "<dateTime>",
                    "status": "active",
                    "last_incident_timestamp": "<dateTime>",
                    "escalation_policy": {
                      "type": "<string>"
                    },
                    "response_play": {
                      "type": "<string>"
                    },
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "integrations": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "incident_urgency_rule": {
                      "type": "constant",
                      "urgency": "high",
                      "during_support_hours": {
                        "value": "<Circular reference to #/components/schemas/IncidentUrgencyType detected>"
                      },
                      "outside_support_hours": {
                        "value": "<Circular reference to #/components/schemas/IncidentUrgencyType detected>"
                      }
                    },
                    "support_hours": {
                      "type": "fixed_time_per_day",
                      "time_zone": "<activesupport-time-zone>",
                      "days_of_week": [
                        "<integer>",
                        "<integer>"
                      ],
                      "start_time": "<time>",
                      "end_time": "<time>"
                    },
                    "scheduled_actions": [
                      {
                        "type": "<string>",
                        "at": {
                          "type": "<string>",
                          "name": "<string>"
                        },
                        "to_urgency": "<string>"
                      },
                      {
                        "type": "<string>",
                        "at": {
                          "type": "<string>",
                          "name": "<string>"
                        },
                        "to_urgency": "<string>"
                      }
                    ],
                    "addons": [
                      {
                        "src": "<url>",
                        "name": "<string>",
                        "type": "<string>"
                      },
                      {
                        "src": "<url>",
                        "name": "<string>",
                        "type": "<string>"
                      }
                    ],
                    "alert_creation": "<string>",
                    "alert_grouping_parameters": {
                      "type": "<string>",
                      "config": {
                        "timeout": "<integer>"
                      }
                    },
                    "alert_grouping": "<string>",
                    "alert_grouping_timeout": "<integer>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "service": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "auto_resolve_timeout": 14400,
                    "acknowledgement_timeout": 1800,
                    "created_at": "<dateTime>",
                    "status": "active",
                    "last_incident_timestamp": "<dateTime>",
                    "escalation_policy": {
                      "type": "<string>"
                    },
                    "response_play": {
                      "type": "<string>"
                    },
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "integrations": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "incident_urgency_rule": {
                      "type": "constant",
                      "urgency": "high",
                      "during_support_hours": {
                        "value": "<Circular reference to #/components/schemas/IncidentUrgencyType detected>"
                      },
                      "outside_support_hours": {
                        "value": "<Circular reference to #/components/schemas/IncidentUrgencyType detected>"
                      }
                    },
                    "support_hours": {
                      "type": "fixed_time_per_day",
                      "time_zone": "<activesupport-time-zone>",
                      "days_of_week": [
                        "<integer>",
                        "<integer>"
                      ],
                      "start_time": "<time>",
                      "end_time": "<time>"
                    },
                    "scheduled_actions": [
                      {
                        "type": "<string>",
                        "at": {
                          "type": "<string>",
                          "name": "<string>"
                        },
                        "to_urgency": "<string>"
                      },
                      {
                        "type": "<string>",
                        "at": {
                          "type": "<string>",
                          "name": "<string>"
                        },
                        "to_urgency": "<string>"
                      }
                    ],
                    "addons": [
                      {
                        "src": "<url>",
                        "name": "<string>",
                        "type": "<string>"
                      },
                      {
                        "src": "<url>",
                        "name": "<string>",
                        "type": "<string>"
                      }
                    ],
                    "alert_creation": "<string>",
                    "alert_grouping_parameters": {
                      "type": "<string>",
                      "config": {
                        "timeout": "<integer>"
                      }
                    },
                    "alert_grouping": "<string>",
                    "alert_grouping_timeout": "<integer>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{id}/audit/records": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "List audit records for a service",
        "description": "The returned records are sorted by the `execution_time` from newest to oldest.\n\nSee [`Cursor-based pagination`](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for instructions on how to paginate through the result set.\n\nFor more information see the [Audit API Document](https://developer.pagerduty.com/docs/rest-api-v2/audit-records-api/).\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The minimum of the `limit` parameter used in the request or the maximum request size of the API.",
            "example": "<integer>"
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter used to request the \"next\" set of results from an API.  The value provided here is most commonly obtained from the `next_cursor` field of the previous request.  When no value is provided, the request starts at the beginning of the result set.\n",
            "example": "<string>"
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search. If not specified, defaults to `now() - 24 hours` (past 24 hours)",
            "example": "<dateTime>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the date range over which you want to search. If not specified, defaults to `now()`",
            "example": "<dateTime>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "records": [
                    {
                      "id": "<string>",
                      "execution_time": "<dateTime>",
                      "method": {
                        "type": "<string>",
                        "description": "<string>",
                        "truncated_token": "<string>"
                      },
                      "root_resource": {},
                      "action": "<string>",
                      "self": "<string>",
                      "execution_context": {
                        "request_id": "<string>",
                        "remote_address": "<string>"
                      },
                      "details": {
                        "resource": {},
                        "fields": [
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          }
                        ],
                        "references": [
                          {
                            "name": "<string>",
                            "description": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>"
                          }
                        ]
                      }
                    },
                    {
                      "id": "<string>",
                      "execution_time": "<dateTime>",
                      "method": {
                        "type": "<string>",
                        "description": "<string>",
                        "truncated_token": "<string>"
                      },
                      "root_resource": {},
                      "action": "<string>",
                      "self": "<string>",
                      "execution_context": {
                        "request_id": "<string>",
                        "remote_address": "<string>"
                      },
                      "details": {
                        "resource": {},
                        "fields": [
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          }
                        ],
                        "references": [
                          {
                            "name": "<string>",
                            "description": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>"
                          }
                        ]
                      }
                    }
                  ],
                  "response_metadata": {
                    "messages": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "limit": "<integer>",
                  "next_cursor": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{id}/integrations": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "Create a new integration",
        "description": "Create a new integration belonging to a Service.\n\nA service may represent an application, component, or team you wish to open incidents against.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#services)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "integration": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "service": {
                      "type": "<string>"
                    },
                    "vendor": {
                      "type": "<string>"
                    },
                    "integration_email": "<string>",
                    "email_incident_creation": "<string>",
                    "email_filter_mode": "<string>",
                    "email_parsers": [
                      {
                        "action": "<string>",
                        "match_predicate": {
                          "type": "<string>",
                          "part": "<string>",
                          "children": [
                            {
                              "value": "<Circular reference to #/components/schemas/MatchPredicate detected>"
                            },
                            {
                              "value": "<Circular reference to #/components/schemas/MatchPredicate detected>"
                            }
                          ],
                          "matcher": "<string>"
                        },
                        "value_extractors": [
                          {
                            "type": "<string>",
                            "part": "<string>",
                            "value_name": "<string>",
                            "regex": "<string>",
                            "starts_after": "<string>",
                            "ends_with": "<string>"
                          }
                        ]
                      }
                    ],
                    "email_parsing_fallback": "<string>",
                    "email_filters": [
                      {
                        "subject_mode": "<string>",
                        "body_mode": "<string>",
                        "from_email_mode": "<string>",
                        "subject_regex": "<string>",
                        "body_regex": "<string>",
                        "from_email_regex": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "integration": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "service": {
                      "type": "<string>"
                    },
                    "vendor": {
                      "type": "<string>"
                    },
                    "integration_email": "<string>",
                    "email_incident_creation": "<string>",
                    "email_filter_mode": "<string>",
                    "email_parsers": [
                      {
                        "action": "<string>",
                        "match_predicate": {
                          "type": "<string>",
                          "part": "<string>",
                          "children": [
                            {
                              "value": "<Circular reference to #/components/schemas/MatchPredicate detected>"
                            },
                            {
                              "value": "<Circular reference to #/components/schemas/MatchPredicate detected>"
                            }
                          ],
                          "matcher": "<string>"
                        },
                        "value_extractors": [
                          {
                            "type": "<string>",
                            "part": "<string>",
                            "value_name": "<string>",
                            "regex": "<string>",
                            "starts_after": "<string>",
                            "ends_with": "<string>"
                          }
                        ]
                      }
                    ],
                    "email_parsing_fallback": "<string>",
                    "email_filters": [
                      {
                        "subject_mode": "<string>",
                        "body_mode": "<string>",
                        "from_email_mode": "<string>",
                        "subject_regex": "<string>",
                        "body_regex": "<string>",
                        "from_email_regex": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{id}/integrations/{integration_id}": {
      "put": {
        "tags": [
          "Services"
        ],
        "summary": "Update an existing integration",
        "description": "Update an integration belonging to a Service.\n\nA service may represent an application, component, or team you wish to open incidents against.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#services)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "integration": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "service": {
                      "type": "<string>"
                    },
                    "vendor": {
                      "type": "<string>"
                    },
                    "integration_email": "<string>",
                    "email_incident_creation": "<string>",
                    "email_filter_mode": "<string>",
                    "email_parsers": [
                      {
                        "action": "<string>",
                        "match_predicate": {
                          "type": "<string>",
                          "part": "<string>",
                          "children": [
                            {
                              "value": "<Circular reference to #/components/schemas/MatchPredicate detected>"
                            },
                            {
                              "value": "<Circular reference to #/components/schemas/MatchPredicate detected>"
                            }
                          ],
                          "matcher": "<string>"
                        },
                        "value_extractors": [
                          {
                            "type": "<string>",
                            "part": "<string>",
                            "value_name": "<string>",
                            "regex": "<string>",
                            "starts_after": "<string>",
                            "ends_with": "<string>"
                          }
                        ]
                      }
                    ],
                    "email_parsing_fallback": "<string>",
                    "email_filters": [
                      {
                        "subject_mode": "<string>",
                        "body_mode": "<string>",
                        "from_email_mode": "<string>",
                        "subject_regex": "<string>",
                        "body_regex": "<string>",
                        "from_email_regex": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "integration_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The integration ID on the service.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "integration": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "service": {
                      "type": "<string>"
                    },
                    "vendor": {
                      "type": "<string>"
                    },
                    "integration_email": "<string>",
                    "email_incident_creation": "<string>",
                    "email_filter_mode": "<string>",
                    "email_parsers": [
                      {
                        "action": "<string>",
                        "match_predicate": {
                          "type": "<string>",
                          "part": "<string>",
                          "children": [
                            {
                              "value": "<Circular reference to #/components/schemas/MatchPredicate detected>"
                            },
                            {
                              "value": "<Circular reference to #/components/schemas/MatchPredicate detected>"
                            }
                          ],
                          "matcher": "<string>"
                        },
                        "value_extractors": [
                          {
                            "type": "<string>",
                            "part": "<string>",
                            "value_name": "<string>",
                            "regex": "<string>",
                            "starts_after": "<string>",
                            "ends_with": "<string>"
                          }
                        ]
                      }
                    ],
                    "email_parsing_fallback": "<string>",
                    "email_filters": [
                      {
                        "subject_mode": "<string>",
                        "body_mode": "<string>",
                        "from_email_mode": "<string>",
                        "subject_regex": "<string>",
                        "body_regex": "<string>",
                        "from_email_regex": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "View an integration",
        "description": "Get details about an integration belonging to a service.\n\nA service may represent an application, component, or team you wish to open incidents against.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#services)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional details to include.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "integration_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The integration ID on the service.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "integration": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "service": {
                      "type": "<string>"
                    },
                    "vendor": {
                      "type": "<string>"
                    },
                    "integration_email": "<string>",
                    "email_incident_creation": "<string>",
                    "email_filter_mode": "<string>",
                    "email_parsers": [
                      {
                        "action": "<string>",
                        "match_predicate": {
                          "type": "<string>",
                          "part": "<string>",
                          "children": [
                            {
                              "value": "<Circular reference to #/components/schemas/MatchPredicate detected>"
                            },
                            {
                              "value": "<Circular reference to #/components/schemas/MatchPredicate detected>"
                            }
                          ],
                          "matcher": "<string>"
                        },
                        "value_extractors": [
                          {
                            "type": "<string>",
                            "part": "<string>",
                            "value_name": "<string>",
                            "regex": "<string>",
                            "starts_after": "<string>",
                            "ends_with": "<string>"
                          }
                        ]
                      }
                    ],
                    "email_parsing_fallback": "<string>",
                    "email_filters": [
                      {
                        "subject_mode": "<string>",
                        "body_mode": "<string>",
                        "from_email_mode": "<string>",
                        "subject_regex": "<string>",
                        "body_regex": "<string>",
                        "from_email_regex": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{id}/rules": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "List Service's Event Rules",
        "description": "List Event Rules on a Service.\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "rules": [
                    {
                      "id": "<string>",
                      "self": "<url>",
                      "disabled": "<boolean>",
                      "conditions": {
                        "operator": "<string>",
                        "subconditions": [
                          {
                            "operator": "<string>",
                            "parameters": {
                              "value": "<string>",
                              "path": "<string>",
                              "options": "<object>"
                            }
                          },
                          {
                            "operator": "<string>",
                            "parameters": {
                              "value": "<string>",
                              "path": "<string>",
                              "options": "<object>"
                            }
                          }
                        ]
                      },
                      "time_frame": {
                        "active_between": {
                          "start_time": "<integer>",
                          "end_time": "<integer>"
                        },
                        "scheduled_weekly": {
                          "start_time": "<integer>",
                          "duration": "<integer>",
                          "timezone": "<string>",
                          "weekdays": [
                            "<integer>",
                            "<integer>"
                          ]
                        }
                      },
                      "variables": [
                        {
                          "type": "<string>",
                          "name": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>"
                          }
                        },
                        {
                          "type": "<string>",
                          "name": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>"
                          }
                        }
                      ],
                      "position": "<integer>",
                      "actions": {
                        "annotate": {
                          "value": "<string>"
                        },
                        "event_action": {
                          "value": "<string>"
                        },
                        "extractions": [
                          {
                            "target": "<string>",
                            "source": "<string>",
                            "regex": "<string>"
                          },
                          {
                            "target": "<string>",
                            "source": "<string>",
                            "regex": "<string>"
                          }
                        ],
                        "priority": {
                          "value": "<string>"
                        },
                        "severity": {
                          "value": "<string>"
                        },
                        "suppress": {
                          "value": "<boolean>",
                          "threshold_value": "<integer>",
                          "threshold_time_unit": "<string>",
                          "threshold_time_amount": "<integer>"
                        },
                        "suspend": {
                          "value": "<integer>"
                        }
                      }
                    },
                    {
                      "id": "<string>",
                      "self": "<url>",
                      "disabled": "<boolean>",
                      "conditions": {
                        "operator": "<string>",
                        "subconditions": [
                          {
                            "operator": "<string>",
                            "parameters": {
                              "value": "<string>",
                              "path": "<string>",
                              "options": "<object>"
                            }
                          },
                          {
                            "operator": "<string>",
                            "parameters": {
                              "value": "<string>",
                              "path": "<string>",
                              "options": "<object>"
                            }
                          }
                        ]
                      },
                      "time_frame": {
                        "active_between": {
                          "start_time": "<integer>",
                          "end_time": "<integer>"
                        },
                        "scheduled_weekly": {
                          "start_time": "<integer>",
                          "duration": "<integer>",
                          "timezone": "<string>",
                          "weekdays": [
                            "<integer>",
                            "<integer>"
                          ]
                        }
                      },
                      "variables": [
                        {
                          "type": "<string>",
                          "name": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>"
                          }
                        },
                        {
                          "type": "<string>",
                          "name": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>"
                          }
                        }
                      ],
                      "position": "<integer>",
                      "actions": {
                        "annotate": {
                          "value": "<string>"
                        },
                        "event_action": {
                          "value": "<string>"
                        },
                        "extractions": [
                          {
                            "target": "<string>",
                            "source": "<string>",
                            "regex": "<string>"
                          },
                          {
                            "target": "<string>",
                            "source": "<string>",
                            "regex": "<string>"
                          }
                        ],
                        "priority": {
                          "value": "<string>"
                        },
                        "severity": {
                          "value": "<string>"
                        },
                        "suppress": {
                          "value": "<boolean>",
                          "threshold_value": "<integer>",
                          "threshold_time_unit": "<string>",
                          "threshold_time_amount": "<integer>"
                        },
                        "suspend": {
                          "value": "<integer>"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "Create an Event Rule on a Service",
        "description": "Create a new Event Rule on a Service.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "rule": {
                    "id": "<string>",
                    "self": "<url>",
                    "disabled": "<boolean>",
                    "conditions": {
                      "operator": "<string>",
                      "subconditions": [
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        },
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        }
                      ]
                    },
                    "time_frame": {
                      "active_between": {
                        "start_time": "<integer>",
                        "end_time": "<integer>"
                      },
                      "scheduled_weekly": {
                        "start_time": "<integer>",
                        "duration": "<integer>",
                        "timezone": "<string>",
                        "weekdays": [
                          "<integer>",
                          "<integer>"
                        ]
                      }
                    },
                    "variables": [
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      },
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      }
                    ],
                    "position": "<integer>",
                    "actions": {
                      "annotate": {
                        "value": "<string>"
                      },
                      "event_action": {
                        "value": "<string>"
                      },
                      "extractions": [
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        },
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        }
                      ],
                      "priority": {
                        "value": "<string>"
                      },
                      "severity": {
                        "value": "<string>"
                      },
                      "suppress": {
                        "value": "<boolean>",
                        "threshold_value": "<integer>",
                        "threshold_time_unit": "<string>",
                        "threshold_time_amount": "<integer>"
                      },
                      "suspend": {
                        "value": "<integer>"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "rule": {
                    "id": "<string>",
                    "self": "<url>",
                    "disabled": "<boolean>",
                    "conditions": {
                      "operator": "<string>",
                      "subconditions": [
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        },
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        }
                      ]
                    },
                    "time_frame": {
                      "active_between": {
                        "start_time": "<integer>",
                        "end_time": "<integer>"
                      },
                      "scheduled_weekly": {
                        "start_time": "<integer>",
                        "duration": "<integer>",
                        "timezone": "<string>",
                        "weekdays": [
                          "<integer>",
                          "<integer>"
                        ]
                      }
                    },
                    "variables": [
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      },
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      }
                    ],
                    "position": "<integer>",
                    "actions": {
                      "annotate": {
                        "value": "<string>"
                      },
                      "event_action": {
                        "value": "<string>"
                      },
                      "extractions": [
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        },
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        }
                      ],
                      "priority": {
                        "value": "<string>"
                      },
                      "severity": {
                        "value": "<string>"
                      },
                      "suppress": {
                        "value": "<boolean>",
                        "threshold_value": "<integer>",
                        "threshold_time_unit": "<string>",
                        "threshold_time_amount": "<integer>"
                      },
                      "suspend": {
                        "value": "<integer>"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{id}/rules/{rule_id}": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get an Event Rule from a Service",
        "description": "Get an Event Rule from a Service.\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The id of the Event Rule to retrieve.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "rule": {
                    "id": "<string>",
                    "self": "<url>",
                    "disabled": "<boolean>",
                    "conditions": {
                      "operator": "<string>",
                      "subconditions": [
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        },
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        }
                      ]
                    },
                    "time_frame": {
                      "active_between": {
                        "start_time": "<integer>",
                        "end_time": "<integer>"
                      },
                      "scheduled_weekly": {
                        "start_time": "<integer>",
                        "duration": "<integer>",
                        "timezone": "<string>",
                        "weekdays": [
                          "<integer>",
                          "<integer>"
                        ]
                      }
                    },
                    "variables": [
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      },
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      }
                    ],
                    "position": "<integer>",
                    "actions": {
                      "annotate": {
                        "value": "<string>"
                      },
                      "event_action": {
                        "value": "<string>"
                      },
                      "extractions": [
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        },
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        }
                      ],
                      "priority": {
                        "value": "<string>"
                      },
                      "severity": {
                        "value": "<string>"
                      },
                      "suppress": {
                        "value": "<boolean>",
                        "threshold_value": "<integer>",
                        "threshold_time_unit": "<string>",
                        "threshold_time_amount": "<integer>"
                      },
                      "suspend": {
                        "value": "<integer>"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Services"
        ],
        "summary": "Update an Event Rule on a Service",
        "description": "Update an Event Rule on a Service. Note that the endpoint supports partial updates, so any number of the writable fields can be provided.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "rule_id": "<string>",
                  "rule": {
                    "id": "<string>",
                    "self": "<url>",
                    "disabled": "<boolean>",
                    "conditions": {
                      "operator": "<string>",
                      "subconditions": [
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        },
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        }
                      ]
                    },
                    "time_frame": {
                      "active_between": {
                        "start_time": "<integer>",
                        "end_time": "<integer>"
                      },
                      "scheduled_weekly": {
                        "start_time": "<integer>",
                        "duration": "<integer>",
                        "timezone": "<string>",
                        "weekdays": [
                          "<integer>",
                          "<integer>"
                        ]
                      }
                    },
                    "variables": [
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      },
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      }
                    ],
                    "position": "<integer>",
                    "actions": {
                      "annotate": {
                        "value": "<string>"
                      },
                      "event_action": {
                        "value": "<string>"
                      },
                      "extractions": [
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        },
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        }
                      ],
                      "priority": {
                        "value": "<string>"
                      },
                      "severity": {
                        "value": "<string>"
                      },
                      "suppress": {
                        "value": "<boolean>",
                        "threshold_value": "<integer>",
                        "threshold_time_unit": "<string>",
                        "threshold_time_amount": "<integer>"
                      },
                      "suspend": {
                        "value": "<integer>"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The id of the Event Rule to retrieve.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "rule": {
                    "id": "<string>",
                    "self": "<url>",
                    "disabled": "<boolean>",
                    "conditions": {
                      "operator": "<string>",
                      "subconditions": [
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        },
                        {
                          "operator": "<string>",
                          "parameters": {
                            "value": "<string>",
                            "path": "<string>",
                            "options": "<object>"
                          }
                        }
                      ]
                    },
                    "time_frame": {
                      "active_between": {
                        "start_time": "<integer>",
                        "end_time": "<integer>"
                      },
                      "scheduled_weekly": {
                        "start_time": "<integer>",
                        "duration": "<integer>",
                        "timezone": "<string>",
                        "weekdays": [
                          "<integer>",
                          "<integer>"
                        ]
                      }
                    },
                    "variables": [
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      },
                      {
                        "type": "<string>",
                        "name": "<string>",
                        "parameters": {
                          "value": "<string>",
                          "path": "<string>"
                        }
                      }
                    ],
                    "position": "<integer>",
                    "actions": {
                      "annotate": {
                        "value": "<string>"
                      },
                      "event_action": {
                        "value": "<string>"
                      },
                      "extractions": [
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        },
                        {
                          "target": "<string>",
                          "source": "<string>",
                          "regex": "<string>"
                        }
                      ],
                      "priority": {
                        "value": "<string>"
                      },
                      "severity": {
                        "value": "<string>"
                      },
                      "suppress": {
                        "value": "<boolean>",
                        "threshold_value": "<integer>",
                        "threshold_time_unit": "<string>",
                        "threshold_time_amount": "<integer>"
                      },
                      "suspend": {
                        "value": "<integer>"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Services"
        ],
        "summary": "Delete an Event Rule from a Service",
        "description": "Delete an Event Rule from a Service.\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The id of the Event Rule to retrieve.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhook_subscriptions": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "List webhook subscriptions",
        "description": "List existing webhook subscriptions.\n\nThe `filter_type` and `filter_id` query parameters may be used to only show subscriptions\nfor a particular _service_ or _team_.\n\nFor more information on webhook subscriptions and how they are used to configure v3 webhooks\nsee the [Webhooks v3 Developer Documentation](https://developer.pagerduty.com/docs/webhooks/v3-overview/).\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "filter_type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The type of resource to filter upon.",
            "example": "<string>"
          },
          {
            "name": "filter_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The id of the resource to filter upon.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "webhook_subscriptions": [
                    {
                      "type": "webhook_subscription",
                      "delivery_method": {
                        "type": "http_delivery_method",
                        "url": "<url>",
                        "id": "<string>",
                        "secret": "<string>",
                        "temporarily_disabled": "<boolean>"
                      },
                      "events": [
                        "<string>"
                      ],
                      "filter": {
                        "type": "<string>",
                        "id": "<string>"
                      },
                      "id": "<string>",
                      "active": true,
                      "description": "<string>"
                    },
                    {
                      "type": "webhook_subscription",
                      "delivery_method": {
                        "type": "http_delivery_method",
                        "url": "<url>",
                        "id": "<string>",
                        "secret": "<string>",
                        "temporarily_disabled": "<boolean>"
                      },
                      "events": [
                        "<string>"
                      ],
                      "filter": {
                        "type": "<string>",
                        "id": "<string>"
                      },
                      "id": "<string>",
                      "active": true,
                      "description": "<string>"
                    }
                  ],
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create a webhook subscription",
        "description": "Creates a new webhook subscription.\n\nFor more information on webhook subscriptions and how they are used to configure v3 webhooks\nsee the [Webhooks v3 Developer Documentation](https://developer.pagerduty.com/docs/webhooks/v3-overview/).\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "webhook_subscription": {
                    "type": "webhook_subscription",
                    "delivery_method": {
                      "type": "http_delivery_method",
                      "url": "<url>",
                      "id": "<string>",
                      "secret": "<string>",
                      "temporarily_disabled": "<boolean>"
                    },
                    "events": [
                      "<string>"
                    ],
                    "filter": {
                      "type": "<string>",
                      "id": "<string>"
                    },
                    "id": "<string>",
                    "active": true,
                    "description": "<string>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "webhook_subscription": {
                    "type": "webhook_subscription",
                    "delivery_method": {
                      "type": "http_delivery_method",
                      "url": "<url>",
                      "id": "<string>",
                      "secret": "<string>",
                      "temporarily_disabled": "<boolean>"
                    },
                    "events": [
                      "<string>"
                    ],
                    "filter": {
                      "type": "<string>",
                      "id": "<string>"
                    },
                    "id": "<string>",
                    "active": true,
                    "description": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        }
      }
    },
    "/webhook_subscriptions/{id}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get a webhook subscription",
        "description": "Gets details about an existing webhook subscription.\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "webhook_subscription": {
                    "type": "webhook_subscription",
                    "delivery_method": {
                      "type": "http_delivery_method",
                      "url": "<url>",
                      "id": "<string>",
                      "secret": "<string>",
                      "temporarily_disabled": "<boolean>"
                    },
                    "events": [
                      "<string>"
                    ],
                    "filter": {
                      "type": "<string>",
                      "id": "<string>"
                    },
                    "id": "<string>",
                    "active": true,
                    "description": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Update a webhook subscription",
        "description": "Updates an existing webhook subscription.\n\nOnly the fields being updated need to be included on the request.  This operation does not\nsupport updating the `delivery_method` of the webhook subscription.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "webhook_subscription": {
                    "description": "<string>",
                    "events": [
                      "<string>"
                    ],
                    "filter": {
                      "id": "<string>",
                      "type": "<string>"
                    },
                    "active": "<boolean>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "webhook_subscription": {
                    "type": "webhook_subscription",
                    "delivery_method": {
                      "type": "http_delivery_method",
                      "url": "<url>",
                      "id": "<string>",
                      "secret": "<string>",
                      "temporarily_disabled": "<boolean>"
                    },
                    "events": [
                      "<string>"
                    ],
                    "filter": {
                      "type": "<string>",
                      "id": "<string>"
                    },
                    "id": "<string>",
                    "active": true,
                    "description": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete a webhook subscription",
        "description": "Deletes a webhook subscription.\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        }
      }
    },
    "/webhook_subscriptions/{id}/enable": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Enable a webhook subscription",
        "description": "Enable a webhook subscription that is temporarily disabled. (This API does not require a request body.)\n\nWebhook subscriptions can become temporarily disabled when the subscription's delivery method is repeatedly rejected by the server.\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "webhook_subscription": {
                    "type": "webhook_subscription",
                    "delivery_method": {
                      "type": "http_delivery_method",
                      "url": "<url>",
                      "id": "<string>",
                      "secret": "<string>",
                      "temporarily_disabled": "<boolean>"
                    },
                    "events": [
                      "<string>"
                    ],
                    "filter": {
                      "type": "<string>",
                      "id": "<string>"
                    },
                    "id": "<string>",
                    "active": true,
                    "description": "<string>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        }
      }
    },
    "/webhook_subscriptions/{id}/ping": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Test a webhook subscription",
        "description": "Test a webhook subscription.\n\nFires a test event against the webhook subscription.  If properly configured,\nthis will deliver the `pagey.ping` webhook event to the destination.\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        }
      }
    },
    "/status_dashboards": {
      "get": {
        "tags": [
          "Status Dashboards"
        ],
        "summary": "List Status Dashboards",
        "description": "Get all your account's custom Status Dashboard views\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `status-dashboards`. Do not use this endpoint in production, as it may change!",
            "example": "status-dashboards",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "limit": "<integer>",
                  "next_cursor": "<string>",
                  "status_dashboards": [
                    {
                      "id": "<string>",
                      "url_slug": "<string>",
                      "name": "<string>"
                    },
                    {
                      "id": "<string>",
                      "url_slug": "<string>",
                      "name": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/status_dashboards/{id}": {
      "get": {
        "tags": [
          "Status Dashboards"
        ],
        "summary": "Get a single Status Dashboard by `id`",
        "description": "Get a Status Dashboard by its PagerDuty `id`.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `status-dashboards`. Do not use this endpoint in production, as it may change!",
            "example": "status-dashboards",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "status_dashboard": {
                    "id": "<string>",
                    "url_slug": "<string>",
                    "name": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/status_dashboards/{id}/service_impacts": {
      "get": {
        "tags": [
          "Status Dashboards"
        ],
        "summary": "Get impacted Business Services for a Status Dashboard by `id`.",
        "description": "Get impacted Business Services for a Status Dashboard by `id`\n\nThis endpoint does not return an exhaustive list of Business Services but rather provides access to the most impacted on the specified Status Dashboard up to the limit of 200.\n\nThe returned Business Services are sorted first by Impact, secondarily by most recently impacted, and finally by name.\n\nTo get Impact information about a specific Business Service on the Status Dashboard that does not appear in the Impact-sorted response, use the `ids[]` parameter on the `/business_services/impacts` endpoint.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `status-dashboards`. Do not use this endpoint in production, as it may change!",
            "example": "status-dashboards",
            "required": true
          },
          {
            "name": "additional_fields[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Provides access to additional fields such as highest priority per business service and total impacted count",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "services": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "type": "<string>",
                      "status": "<string>",
                      "additional_fields": {
                        "highest_impacting_priority": {
                          "id": "<string>",
                          "order": "<integer>"
                        }
                      }
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "type": "<string>",
                      "status": "<string>",
                      "additional_fields": {
                        "highest_impacting_priority": {
                          "id": "<string>",
                          "order": "<integer>"
                        }
                      }
                    }
                  ],
                  "additional_fields": {
                    "total_impacted_count": "<integer>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/status_dashboards/url_slugs/{url_slug}": {
      "get": {
        "tags": [
          "Status Dashboards"
        ],
        "summary": "Get a single Status Dashboard by `url_slug`",
        "description": "Get a Status Dashboard by its PagerDuty `url_slug`.  A `url_slug` is a human-readable reference\nfor a custom Status Dashboard that may be created or changed in the UI. It will generally be a `dash-separated-string-like-this`.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `status-dashboards`. Do not use this endpoint in production, as it may change!",
            "example": "status-dashboards",
            "required": true
          },
          {
            "name": "url_slug",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The `url_slug` for a status dashboard",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "status_dashboard": {
                    "id": "<string>",
                    "url_slug": "<string>",
                    "name": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/status_dashboards/url_slugs/{url_slug}/service_impacts": {
      "get": {
        "tags": [
          "Status Dashboards"
        ],
        "summary": "Get impacted Business Services for a  Status Dashboard by `url_slug`",
        "description": "Get Business Service Impacts for the Business Services on a Status Dashboard by its `url_slug`. A `url_slug` is a human-readable reference\nfor a custom Status Dashboard that may be created or changed in the UI. It will generally be a `dash-separated-string-like-this`.\n\nThis endpoint does not return an exhaustive list of Business Services but rather provides access to the most impacted on the Status Dashboard up to the limit of 200.\n\nThe returned Business Services are sorted first by Impact, secondarily by most recently impacted, and finally by name.\n\nTo get impact information about a specific Business Service on the Status Dashboard that does not appear in the Impact-sored response, use the `ids[]` parameter on the `/business_services/impacts` endpoint.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `status-dashboards`. Do not use this endpoint in production, as it may change!",
            "example": "status-dashboards",
            "required": true
          },
          {
            "name": "additional_fields[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Provides access to additional fields such as highest priority per business service and total impacted count",
            "example": "<string>"
          },
          {
            "name": "url_slug",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The `url_slug` for a status dashboard",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "services": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "type": "<string>",
                      "status": "<string>",
                      "additional_fields": {
                        "highest_impacting_priority": {
                          "id": "<string>",
                          "order": "<integer>"
                        }
                      }
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "type": "<string>",
                      "status": "<string>",
                      "additional_fields": {
                        "highest_impacting_priority": {
                          "id": "<string>",
                          "order": "<integer>"
                        }
                      }
                    }
                  ],
                  "additional_fields": {
                    "total_impacted_count": "<integer>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{entity_type}/{id}/change_tags": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Assign tags",
        "description": "Assign existing or new tags.\n\nA Tag is applied to EScalation Policies, Teams or Users and can be used to filter them.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#tags)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "add": [
                    {
                      "type": "<string>",
                      "label": "<string>"
                    },
                    {
                      "type": "<string>",
                      "label": "<string>"
                    }
                  ],
                  "remove": [
                    {
                      "type": "<string>",
                      "dolorec4b": true
                    },
                    {
                      "type": "<string>",
                      "eadd": -43613498
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "entity_type",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Type of entity related with the tag",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": "<object>"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{entity_type}/{id}/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get tags for entities",
        "description": "Get related tags for Users, Teams or Escalation Policies.\n\nA Tag is applied to EScalation Policies, Teams or Users and can be used to filter them.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#tags)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "entity_type",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Type of entity related with the tag",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "tags": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "label": "<string>"
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "label": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "List tags",
        "description": "List all of your account's tags.\n\nA Tag is applied to EScalation Policies, Teams or Users and can be used to filter them.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#tags)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the result, showing only the tags whose labels match the query.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "tags": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "label": "<string>"
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "label": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Create a tag",
        "description": "Create a Tag.\n\nA Tag is applied to EScalation Policies, Teams or Users and can be used to filter them.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#tags)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "tag": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "label": "<string>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "tag": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "label": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tags/{id}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get a tag",
        "description": "Get details about an existing Tag.\n\nA Tag is applied to EScalation Policies, Teams or Users and can be used to filter them.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#tags)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "tag": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "label": "<string>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Delete a tag",
        "description": "Remove an existing Tag.\n\nA Tag is applied to EScalation Policies, Teams or Users and can be used to filter them.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#tags)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tags/{id}/{entity_type}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get connected entities",
        "description": "Get related Users, Teams or Escalation Policies for the Tag.\n\nA Tag is applied to EScalation Policies, Teams or Users and can be used to filter them.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#tags)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "entity_type",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Type of entity related with the tag",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "users": [
                    {
                      "type": "<string>"
                    },
                    {
                      "type": "<string>"
                    }
                  ],
                  "teams": [
                    {
                      "type": "<string>"
                    },
                    {
                      "type": "<string>"
                    }
                  ],
                  "escalation_policies": [
                    {
                      "type": "<string>"
                    },
                    {
                      "type": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams": {
      "post": {
        "tags": [
          "Teams"
        ],
        "summary": "Create a team",
        "description": "Create a new Team.\n\nA team is a collection of Users and Escalation Policies that represent a group of people within an organization.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#teams)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "team": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "parent": {
                      "type": "<string>"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "team": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "parent": {
                      "type": "<string>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "List teams",
        "description": "List teams of your PagerDuty account, optionally filtered by a search query.\n\nA team is a collection of Users and Escalation Policies that represent a group of people within an organization.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#teams)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the result, showing only the tags whose labels match the query.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "teams": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "description": "<string>",
                      "parent": {
                        "type": "<string>"
                      }
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "description": "<string>",
                      "parent": {
                        "type": "<string>"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{id}": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get a team",
        "description": "Get details about an existing team.\n\nA team is a collection of Users and Escalation Policies that represent a group of people within an organization.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#teams)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional Models to include in response.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "team": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "parent": {
                      "type": "<string>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teams"
        ],
        "summary": "Delete a team",
        "description": "Remove an existing team.\n\nSucceeds only if the team has no associated Escalation Policies, Services, Schedules and Subteams.\n\nAll associated unresovled incidents will be reassigned to another team (if specified) or will loose team association, thus becoming account-level (with visibility implications).\n\nNote that the incidents reassignment process is asynchronous and has no guarantee to complete before the API call return.\n\nA team is a collection of Users and Escalation Policies that represent a group of people within an organization.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#teams)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "reassignment_team",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Team to reassign unresolved incident to.\nIf an unresolved incident exists on both the reassignment team and\nthe team being deleted, a duplicate will not be made. If not supplied,\nunresolved incidents will be made account-level.\n",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Teams"
        ],
        "summary": "Update a team",
        "description": "Update an existing team.\n\nA team is a collection of Users and Escalation Policies that represent a group of people within an organization.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#teams)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "team": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "parent": {
                      "type": "<string>"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "team": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "description": "<string>",
                    "parent": {
                      "type": "<string>"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{id}/audit/records": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "List audit records for a team",
        "description": "The returned records are sorted by the `execution_time` from newest to oldest.\n\nSee [`Cursor-based pagination`](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for instructions on how to paginate through the result set.\n\nFor more information see the [Audit API Document](https://developer.pagerduty.com/docs/rest-api-v2/audit-records-api/).\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The minimum of the `limit` parameter used in the request or the maximum request size of the API.",
            "example": "<integer>"
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter used to request the \"next\" set of results from an API.  The value provided here is most commonly obtained from the `next_cursor` field of the previous request.  When no value is provided, the request starts at the beginning of the result set.\n",
            "example": "<string>"
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search. If not specified, defaults to `now() - 24 hours` (past 24 hours)",
            "example": "<dateTime>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the date range over which you want to search. If not specified, defaults to `now()`",
            "example": "<dateTime>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "records": [
                    {
                      "id": "<string>",
                      "execution_time": "<dateTime>",
                      "method": {
                        "type": "<string>",
                        "description": "<string>",
                        "truncated_token": "<string>"
                      },
                      "root_resource": {},
                      "action": "<string>",
                      "self": "<string>",
                      "execution_context": {
                        "request_id": "<string>",
                        "remote_address": "<string>"
                      },
                      "details": {
                        "resource": {},
                        "fields": [
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          }
                        ],
                        "references": [
                          {
                            "name": "<string>",
                            "description": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>"
                          }
                        ]
                      }
                    },
                    {
                      "id": "<string>",
                      "execution_time": "<dateTime>",
                      "method": {
                        "type": "<string>",
                        "description": "<string>",
                        "truncated_token": "<string>"
                      },
                      "root_resource": {},
                      "action": "<string>",
                      "self": "<string>",
                      "execution_context": {
                        "request_id": "<string>",
                        "remote_address": "<string>"
                      },
                      "details": {
                        "resource": {},
                        "fields": [
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          }
                        ],
                        "references": [
                          {
                            "name": "<string>",
                            "description": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>"
                          }
                        ]
                      }
                    }
                  ],
                  "response_metadata": {
                    "messages": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "limit": "<integer>",
                  "next_cursor": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{id}/escalation_policies/{escalation_policy_id}": {
      "delete": {
        "tags": [
          "Teams"
        ],
        "summary": "Remove an escalation policy from a team",
        "description": "Remove an escalation policy from a team.\n\nA team is a collection of Users and Escalation Policies that represent a group of people within an organization.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#teams)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "escalation_policy_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The escalation policy ID on the team.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Teams"
        ],
        "summary": "Add an escalation policy to a team",
        "description": "Add an escalation policy to a team.\n\nA team is a collection of Users and Escalation Policies that represent a group of people within an organization.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#teams)\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "escalation_policy_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The escalation policy ID on the team.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{id}/members": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "List members of a team",
        "description": "Get information about members on a team.\n\nA team is a collection of Users and Escalation Policies that represent a group of people within an organization.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#teams)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional Models to include in response.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "members": [
                    {
                      "user": {
                        "type": "<string>"
                      },
                      "role": "<string>"
                    },
                    {
                      "user": {
                        "type": "<string>"
                      },
                      "role": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{id}/notification_subscriptions": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "List Team Notification Subscriptions",
        "description": "Retrieve a list of Notification Subscriptions the given Team has.\n\n<!-- theme: warning -->\n> Teams must be added through `POST /teams/{id}/notification_subscriptions` to be returned from this endpoint.\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "subscriptions": [
                    {
                      "subscription": {
                        "subscriber_id": "<string>",
                        "subscriber_type": "<string>",
                        "subscribable_id": "<string>",
                        "subscribable_type": "<string>",
                        "account_id": "<string>"
                      },
                      "subscribable_name": "<string>"
                    },
                    {
                      "subscription": {
                        "subscriber_id": "<string>",
                        "subscriber_type": "<string>",
                        "subscribable_id": "<string>",
                        "subscribable_type": "<string>",
                        "account_id": "<string>"
                      },
                      "subscribable_name": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Teams"
        ],
        "summary": "Create Team Notification Subscriptions",
        "description": "Create new Notification Subscriptions for the given Team.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "subscribables": [
                    {
                      "subscribable_id": "<string>",
                      "subscribable_type": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "subscriptions": [
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>",
                      "subscribable_id": "<string>",
                      "subscribable_type": "<string>",
                      "account_id": "<string>",
                      "result": "<string>"
                    },
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>",
                      "subscribable_id": "<string>",
                      "subscribable_type": "<string>",
                      "account_id": "<string>",
                      "result": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{id}/notification_subscriptions/unsubscribe": {
      "post": {
        "tags": [
          "Teams"
        ],
        "summary": "remove Team Notification Subscriptions",
        "description": "Unsubscribe the given Team from Notifications on the matching Subscribable entities.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "subscribables": [
                    {
                      "subscribable_id": "<string>",
                      "subscribable_type": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deleted_count": "<number>",
                  "unauthorized_count": "<number>",
                  "non_existent_count": "<number>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{id}/users/{user_id}": {
      "delete": {
        "tags": [
          "Teams"
        ],
        "summary": "Remove a user from a team",
        "description": "Remove a user from a team.\n\nA team is a collection of Users and Escalation Policies that represent a group of people within an organization.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#teams)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The user ID on the team.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Teams"
        ],
        "summary": "Add a user to a team",
        "description": "Add a user to a team. Attempting to add a user with the `read_only_user` role will return a 400 error.\n\nA team is a collection of Users and Escalation Policies that represent a group of people within an organization.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#teams)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "role": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The user ID on the team.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List users",
        "description": "List users of your PagerDuty account, optionally filtered by a search query.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters the result, showing only the tags whose labels match the query.",
            "example": "<string>"
          },
          {
            "name": "team_ids[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "An array of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.",
            "example": "<string>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional Models to include in response.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "users": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "email": "<email>",
                      "time_zone": "<tzinfo>",
                      "color": "<string>",
                      "role": "<string>",
                      "avatar_url": "<url>",
                      "description": "<string>",
                      "invitation_sent": "<boolean>",
                      "job_title": "<string>",
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "contact_methods": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "notification_rules": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ]
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "email": "<email>",
                      "time_zone": "<tzinfo>",
                      "color": "<string>",
                      "role": "<string>",
                      "avatar_url": "<url>",
                      "description": "<string>",
                      "invitation_sent": "<boolean>",
                      "job_title": "<string>",
                      "teams": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "contact_methods": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ],
                      "notification_rules": [
                        {
                          "type": "<string>"
                        },
                        {
                          "type": "<string>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a user",
        "description": "Create a new user. Note that you must also supply a `password` property to create a user--it will not be returned by any API.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "user": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "email": "<email>",
                    "time_zone": "<tzinfo>",
                    "color": "<string>",
                    "role": "<string>",
                    "avatar_url": "<url>",
                    "description": "<string>",
                    "invitation_sent": "<boolean>",
                    "job_title": "<string>",
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "contact_methods": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "notification_rules": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "From",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The email address of a valid user associated with the account making the request.",
            "example": "<email>",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "user": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "email": "<email>",
                    "time_zone": "<tzinfo>",
                    "color": "<string>",
                    "role": "<string>",
                    "avatar_url": "<url>",
                    "description": "<string>",
                    "invitation_sent": "<boolean>",
                    "job_title": "<string>",
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "contact_methods": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "notification_rules": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user",
        "description": "Get details about an existing user.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional Models to include in response.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "user": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "email": "<email>",
                    "time_zone": "<tzinfo>",
                    "color": "<string>",
                    "role": "<string>",
                    "avatar_url": "<url>",
                    "description": "<string>",
                    "invitation_sent": "<boolean>",
                    "job_title": "<string>",
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "contact_methods": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "notification_rules": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user",
        "description": "Remove an existing user.\n\nReturns 400 if the user has assigned incidents unless your [pricing plan](https://www.pagerduty.com/pricing) has the `offboarding` feature and the account is [configured](https://support.pagerduty.com/docs/offboarding#section-additional-configurations) appropriately.\n\nNote that the incidents reassignment process is asynchronous and has no guarantee to complete before the api call return.\n\n[*Learn more about `offboarding` feature*](https://support.pagerduty.com/docs/offboarding).\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user",
        "description": "Update an existing user. Note that you may also supply a `password` property--it will not be returned by any API.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "user": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "email": "<email>",
                    "time_zone": "<tzinfo>",
                    "color": "<string>",
                    "role": "<string>",
                    "avatar_url": "<url>",
                    "description": "<string>",
                    "invitation_sent": "<boolean>",
                    "job_title": "<string>",
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "contact_methods": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "notification_rules": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "user": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "email": "<email>",
                    "time_zone": "<tzinfo>",
                    "color": "<string>",
                    "role": "<string>",
                    "avatar_url": "<url>",
                    "description": "<string>",
                    "invitation_sent": "<boolean>",
                    "job_title": "<string>",
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "contact_methods": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "notification_rules": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/audit/records": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List audit records for a user",
        "description": "The response will include audit records with changes that are made to the identified user not changes made by the identified user.\n\n\nThe returned records are sorted by the `execution_time` from newest to oldest.\n\nSee [`Cursor-based pagination`](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for instructions on how to paginate through the result set.\n\nFor more information see the [Audit API Document](https://developer.pagerduty.com/docs/rest-api-v2/audit-records-api/).\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The minimum of the `limit` parameter used in the request or the maximum request size of the API.",
            "example": "<integer>"
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter used to request the \"next\" set of results from an API.  The value provided here is most commonly obtained from the `next_cursor` field of the previous request.  When no value is provided, the request starts at the beginning of the result set.\n",
            "example": "<string>"
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The start of the date range over which you want to search. If not specified, defaults to `now() - 24 hours` (past 24 hours)",
            "example": "<dateTime>"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The end of the date range over which you want to search. If not specified, defaults to `now()`",
            "example": "<dateTime>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "records": [
                    {
                      "id": "<string>",
                      "execution_time": "<dateTime>",
                      "method": {
                        "type": "<string>",
                        "description": "<string>",
                        "truncated_token": "<string>"
                      },
                      "root_resource": {},
                      "action": "<string>",
                      "self": "<string>",
                      "execution_context": {
                        "request_id": "<string>",
                        "remote_address": "<string>"
                      },
                      "details": {
                        "resource": {},
                        "fields": [
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          }
                        ],
                        "references": [
                          {
                            "name": "<string>",
                            "description": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>"
                          }
                        ]
                      }
                    },
                    {
                      "id": "<string>",
                      "execution_time": "<dateTime>",
                      "method": {
                        "type": "<string>",
                        "description": "<string>",
                        "truncated_token": "<string>"
                      },
                      "root_resource": {},
                      "action": "<string>",
                      "self": "<string>",
                      "execution_context": {
                        "request_id": "<string>",
                        "remote_address": "<string>"
                      },
                      "details": {
                        "resource": {},
                        "fields": [
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>",
                            "value": "<string>",
                            "before_value": "<string>"
                          }
                        ],
                        "references": [
                          {
                            "name": "<string>",
                            "description": "<string>"
                          },
                          {
                            "name": "<string>",
                            "description": "<string>"
                          }
                        ]
                      }
                    }
                  ],
                  "response_metadata": {
                    "messages": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "limit": "<integer>",
                  "next_cursor": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/contact_methods": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List a user's contact methods",
        "description": "List contact methods of your PagerDuty user.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "contact_methods": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "label": "<string>",
                      "address": "<string>",
                      "country_code": "<integer>",
                      "enabled": "<boolean>",
                      "blacklisted": "<boolean>"
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "label": "<string>",
                      "address": "<string>",
                      "country_code": "<integer>",
                      "enabled": "<boolean>",
                      "blacklisted": "<boolean>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a user contact method",
        "description": "Create a new contact method for the User.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "contact_method": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "label": "<string>",
                    "address": "<string>",
                    "country_code": "<integer>",
                    "enabled": "<boolean>",
                    "blacklisted": "<boolean>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "contact_method": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "label": "<string>",
                    "address": "<string>",
                    "country_code": "<integer>",
                    "enabled": "<boolean>",
                    "blacklisted": "<boolean>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/contact_methods/{contact_method_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user's contact method",
        "description": "Get details about a User's contact method.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "contact_method_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The contact method ID on the user.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "contact_method": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "label": "<string>",
                    "address": "<string>",
                    "country_code": "<integer>",
                    "enabled": "<boolean>",
                    "blacklisted": "<boolean>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user's contact method",
        "description": "Remove a user's contact method.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "contact_method_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The contact method ID on the user.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user's contact method",
        "description": "Update a User's contact method.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "contact_method": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "label": "<string>",
                    "address": "<string>",
                    "country_code": "<integer>",
                    "enabled": "<boolean>",
                    "blacklisted": "<boolean>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "contact_method_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The contact method ID on the user.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "contact_method": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "label": "<string>",
                    "address": "<string>",
                    "country_code": "<integer>",
                    "enabled": "<boolean>",
                    "blacklisted": "<boolean>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/notification_rules": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List a user's notification rules",
        "description": "List notification rules of your PagerDuty user.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional details to include.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "notification_rules": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "start_delay_in_minutes": "<integer>",
                      "contact_method": {
                        "type": "<string>"
                      },
                      "urgency": "<string>"
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "start_delay_in_minutes": "<integer>",
                      "contact_method": {
                        "type": "<string>"
                      },
                      "urgency": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a user notification rule",
        "description": "Create a new notification rule.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "notification_rule": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "start_delay_in_minutes": "<integer>",
                    "contact_method": {
                      "type": "<string>"
                    },
                    "urgency": "<string>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "notification_rule": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "start_delay_in_minutes": "<integer>",
                    "contact_method": {
                      "type": "<string>"
                    },
                    "urgency": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/notification_rules/{notification_rule_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user's notification rule",
        "description": "Get details about a user's notification rule.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional details to include.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "notification_rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The notification rule ID on the user.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "notification_rule": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "start_delay_in_minutes": "<integer>",
                    "contact_method": {
                      "type": "<string>"
                    },
                    "urgency": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user's notification rule",
        "description": "Remove a user's notification rule.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "notification_rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The notification rule ID on the user.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user's notification rule",
        "description": "Update a user's notification rule.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "notification_rule": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "start_delay_in_minutes": "<integer>",
                    "contact_method": {
                      "type": "<string>"
                    },
                    "urgency": "<string>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "notification_rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The notification rule ID on the user.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "notification_rule": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "start_delay_in_minutes": "<integer>",
                    "contact_method": {
                      "type": "<string>"
                    },
                    "urgency": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/notification_subscriptions": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List Notification Subscriptions",
        "description": "Retrieve a list of Notification Subscriptions the given User has.\n\n<!-- theme: warning -->\n> Users must be added through `POST /users/{id}/notification_subscriptions` to be returned from this endpoint.\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "subscriptions": [
                    {
                      "subscription": {
                        "subscriber_id": "<string>",
                        "subscriber_type": "<string>",
                        "subscribable_id": "<string>",
                        "subscribable_type": "<string>",
                        "account_id": "<string>"
                      },
                      "subscribable_name": "<string>"
                    },
                    {
                      "subscription": {
                        "subscriber_id": "<string>",
                        "subscriber_type": "<string>",
                        "subscribable_id": "<string>",
                        "subscribable_type": "<string>",
                        "account_id": "<string>"
                      },
                      "subscribable_name": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create Notification Subcriptions",
        "description": "Create new Notification Subscriptions for the given User.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "subscribables": [
                    {
                      "subscribable_id": "<string>",
                      "subscribable_type": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "subscriptions": [
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>",
                      "subscribable_id": "<string>",
                      "subscribable_type": "<string>",
                      "account_id": "<string>",
                      "result": "<string>"
                    },
                    {
                      "subscriber_id": "<string>",
                      "subscriber_type": "<string>",
                      "subscribable_id": "<string>",
                      "subscribable_type": "<string>",
                      "account_id": "<string>",
                      "result": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/notification_subscriptions/unsubscribe": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Remove Notification Subscriptions",
        "description": "Unsubscribe the given User from Notifications on the matching Subscribable entities.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "subscribables": [
                    {
                      "subscribable_id": "<string>",
                      "subscribable_type": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deleted_count": "<number>",
                  "unauthorized_count": "<number>",
                  "non_existent_count": "<number>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/oncall_handoff_notification_rules": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List a User's Handoff Notification Rules",
        "description": "List Handoff Notification Rules of your PagerDuty User.\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "oncall_handoff_notification_rules": [
                    {
                      "id": "<string>",
                      "handoff_type": "both",
                      "contact_method": {
                        "type": "<string>"
                      },
                      "notify_advance_in_minutes": "<integer>"
                    },
                    {
                      "id": "<string>",
                      "handoff_type": "both",
                      "contact_method": {
                        "type": "<string>"
                      },
                      "notify_advance_in_minutes": "<integer>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a User Handoff Notification Rule",
        "description": "Create a new Handoff Notification Rule.\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "oncall_handoff_notification_rule": {
                    "id": "<string>",
                    "handoff_type": "both",
                    "contact_method": {
                      "type": "<string>"
                    },
                    "notify_advance_in_minutes": "<integer>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "oncall_handoff_notification_rule": {
                    "id": "<string>",
                    "handoff_type": "both",
                    "contact_method": {
                      "type": "<string>"
                    },
                    "notify_advance_in_minutes": "<integer>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/oncall_handoff_notification_rules/{oncall_handoff_notification_rule_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user's handoff notification rule",
        "description": "Get details about a User's Handoff Notification Rule.\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "oncall_handoff_notification_rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The oncall handoff notification rule ID on the user.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "oncall_handoff_notification_rule": {
                    "id": "<string>",
                    "handoff_type": "both",
                    "contact_method": {
                      "type": "<string>"
                    },
                    "notify_advance_in_minutes": "<integer>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a User's Handoff Notification rule",
        "description": "Remove a User's Handoff Notification Rule.\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "oncall_handoff_notification_rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The oncall handoff notification rule ID on the user.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a User's Handoff Notification Rule",
        "description": "Update a User's Handoff Notification Rule.\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "oncall_handoff_notification_rule": {
                    "id": "<string>",
                    "handoff_type": "both",
                    "contact_method": {
                      "type": "<string>"
                    },
                    "notify_advance_in_minutes": "<integer>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "oncall_handoff_notification_rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The oncall handoff notification rule ID on the user.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "oncall_handoff_notification_rule": {
                    "id": "<string>",
                    "handoff_type": "both",
                    "contact_method": {
                      "type": "<string>"
                    },
                    "notify_advance_in_minutes": "<integer>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/sessions": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List a user's active sessions",
        "description": "List active sessions of a PagerDuty user.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "user_sessions": [
                    {
                      "id": "<string>",
                      "user_id": "<string>",
                      "created_at": "<dateTime>",
                      "type": "<string>",
                      "summary": "<string>"
                    },
                    {
                      "id": "<string>",
                      "user_id": "<string>",
                      "created_at": "<dateTime>",
                      "type": "<string>",
                      "summary": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete all user sessions",
        "description": "Delete all user sessions.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/sessions/{type}/{session_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user's session",
        "description": "Get details about a user's session.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "type",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The session type for the user session ID.",
            "example": "<string>"
          },
          {
            "name": "session_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The session ID for the user.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "user_session": {
                    "id": "<string>",
                    "user_id": "<string>",
                    "created_at": "<dateTime>",
                    "type": "<string>",
                    "summary": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user's session",
        "description": "Delete a user's session.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "type",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The session type for the user session ID.",
            "example": "<string>"
          },
          {
            "name": "session_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The session ID for the user.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/status_update_notification_rules": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List a user's status update notification rules",
        "description": "List status update notification rules of your PagerDuty user.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change!\n",
            "example": "status-update-notification-rules"
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional details to include.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "status_update_notification_rules": [
                    {
                      "contact_method": {
                        "type": "<string>"
                      }
                    },
                    {
                      "contact_method": {
                        "type": "<string>"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a user status update notification rule",
        "description": "Create a new status update notification rule.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "status_update_notification_rule": {
                    "contact_method": {
                      "type": "<string>"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change!\n",
            "example": "status-update-notification-rules",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "status_update_notification_rule": {
                    "contact_method": {
                      "type": "<string>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/status_update_notification_rules/{status_update_notification_rule_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user's status update notification rule",
        "description": "Get details about a user's status update notification rule.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change!\n",
            "example": "status-update-notification-rules",
            "required": true
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional details to include.",
            "example": "<string>"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "status_update_notification_rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The status update notification rule ID on the user.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "notification_rule": {
                    "contact_method": {
                      "type": "<string>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user's status update notification rule",
        "description": "Remove a user's status update notification rule.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change!\n",
            "example": "status-update-notification-rules",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "status_update_notification_rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The status update notification rule ID on the user.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user's status update notification rule",
        "description": "Update a user's status update notification rule.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\n<!-- theme: warning -->\n> ### Early Access\n> This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "status_update_notification_rule": {
                    "contact_method": {
                      "type": "<string>"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "X-EARLY-ACCESS",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change!\n",
            "example": "status-update-notification-rules",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          },
          {
            "name": "status_update_notification_rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The status update notification rule ID on the user.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "notification_rule": {
                    "contact_method": {
                      "type": "<string>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get the current user",
        "description": "Get details about the current user.\n\nThis endpoint can only be used with a [user-level API key](https://support.pagerduty.com/docs/using-the-api#section-generating-a-personal-rest-api-key) or a key generated through an OAuth flow. This will not work if the request is made with an account-level access token.\n\nUsers are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#users)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "include[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of additional Models to include in response.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "user": {
                    "id": "<string>",
                    "summary": "<string>",
                    "type": "<string>",
                    "self": "<url>",
                    "html_url": "<url>",
                    "name": "<string>",
                    "email": "<email>",
                    "time_zone": "<tzinfo>",
                    "color": "<string>",
                    "role": "<string>",
                    "avatar_url": "<url>",
                    "description": "<string>",
                    "invitation_sent": "<boolean>",
                    "job_title": "<string>",
                    "teams": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "contact_methods": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ],
                    "notification_rules": [
                      {
                        "type": "<string>"
                      },
                      {
                        "type": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendors": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "List vendors",
        "description": "List all vendors.\n\nA PagerDuty Vendor represents a specific type of integration. AWS Cloudwatch, Splunk, Datadog are all examples of vendors\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#vendors)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The number of results per page.",
            "example": "<integer>"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Offset to start pagination search results.",
            "example": "<integer>"
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
            "example": "false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "offset": "<integer>",
                  "limit": "<integer>",
                  "more": "<boolean>",
                  "total": "<integer>",
                  "vendors": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "website_url": "<url>",
                      "logo_url": "<url>",
                      "thumbnail_url": "<url>",
                      "description": "<string>",
                      "integration_guide_url": "<url>"
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "website_url": "<url>",
                      "logo_url": "<url>",
                      "thumbnail_url": "<url>",
                      "description": "<string>",
                      "integration_guide_url": "<url>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendors/{id}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Get a vendor",
        "description": "Get details about one specific vendor.\n\nA PagerDuty Vendor represents a specific type of integration. AWS Cloudwatch, Splunk, Datadog are all examples of vendors\n\nFor more information see the [API Concepts Document](../../docs/CONCEPTS.md#vendors)\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "The API Key with format `Token token=<API_KEY>`"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The `Accept` header is used as a versioning header.",
            "example": "application/vnd.pagerduty+json;version=2",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "application/json",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The ID of the resource.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "vendor": [
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "website_url": "<url>",
                      "logo_url": "<url>",
                      "thumbnail_url": "<url>",
                      "description": "<string>",
                      "integration_guide_url": "<url>"
                    },
                    {
                      "id": "<string>",
                      "summary": "<string>",
                      "type": "<string>",
                      "self": "<url>",
                      "html_url": "<url>",
                      "name": "<string>",
                      "website_url": "<url>",
                      "logo_url": "<url>",
                      "thumbnail_url": "<url>",
                      "description": "<string>",
                      "integration_guide_url": "<url>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "error": {
                    "code": "<integer>",
                    "message": "<string>",
                    "errors": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}