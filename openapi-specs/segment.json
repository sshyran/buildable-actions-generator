{
  "openapi": "3.0.0",
  "info": {
    "title": "Segment APIs",
    "description": "Segment APIs enable you to collect customer data and send it to any destination you want.\n\nThe Config API is a set of REST APIs that enable you to programmatically manage Segment workspaces, sources, destinations and more.\n\nThis documents all the REST API methods, with example requests and responses. You can also load this into the [Postman API Development Environment](https://www.getpostman.com/) to interact with the API with your own access tokens.\n\nWith the Config API you can:\n\n- List all your workspace sources and destinations to see how data flows through Segment\n- Create new sources to collect data from your website, mobile app or server\n- Create new destinations to send data to your analytics service or data warehouse\n- Enable and disable destinations to route data without code changes\n- Configure a tracking plan to see how data conforms to your expected schema\n\nIf there are other uses cases you'd like the API to support, [get in touch](https://segment.com/contact).",
    "version": "v1beta"
  },
  "servers": [
    {
      "url": "http://{{host}}"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Access Tokens",
      "description": "To create an access token, workspace owners can navigate to \"Access Management\" within the settings tab and assign permissions and resources to new tokens. More details here: https://segment.com/docs/config-api/\n\n## EU API Access\nIf your workspace is running in the EU, please access https://api.segmentapis.com/docs/ for API documentation."
    },
    {
      "name": "Integrations Catalog",
      "description": "Integrations Catalog APIs list all the sources, destinations and destination settings supported by Segment.\n\n## Source Catalog Model\n\n| Attribute    | Type          | Description                |           |\n|--------------|---------------|----------------------------|-----------|\n| categories   | array[string] | Categories of the source   | read-only |\n| description  | string        | Description of the source  | read-only |\n| display_name | string        | Display name of the source | read-only |\n| name         | string        | Unique name of the source  | read-only |\n\n`name` is used when creating a source.\n\n## Destination Catalog Model\n\n| Attribute    | Type                        | Description                     |           |\n|--------------|-----------------------------|---------------------------------|-----------|\n| categories   | DestinationCategory         | Categories of the destination   | read-only |\n| components   | array[DestinationComponent] | Components of the destination   | read-only |\n| description  | string                      | Description of the destination  | read-only |\n| display_name | string                      | Display name of the destination | read-only |\n| logos        | DestinationLogos            | Logos for the destination       | read-only |\n| name         | string                      | Unique name of the destination  | read-only |\n| settings     | array[DestinationSetting]   | Settings for the destination    | read-only |\n"
    },
    {
      "name": "Workspaces",
      "description": "## Workspace Model\n\n| Attribute    | Type     | Description                    |           |\n|--------------|----------|--------------------------------|-----------|\n| create_time  | datetime | Time the workspace was created | read-only |\n| display_name | string   | Display name of the workspace  | required  |\n| id           | string   | ID of the workspace            | read-only |\n| name         | string   | Unique name of the workspace   | required  |\n\n"
    },
    {
      "name": "Sources",
      "description": "## Source Model\n\n| Attribute       | Type          | Description                    |           |\n| --------------- | ------------- | ------------------------------ | --------- |\n| create_time     | datetime      | Time the source was created    | read-only |\n| catalog_name    | string        | Catalog name of the source     | required  |\n| catalog_id      | string        | Catalog id of the source       | optional  |\n| name            | string        | Unique name of the source      | required  |\n| parent          | string        | Parent workspace of the source | required  |\n| write_keys      | array[string] | Write keys of the source       | read-only |\n| library_config  | LibraryConfig | Config for mobile libraries    | optional  |\n| function_config | array[object] | Config for source functions    | optional  |\n\nThe `name` must be unique within the workspace. The `catalog_name` is available in the Source Catalog APIs. `catalog_id` can be used in place of `catalog_name` and is available in the Functions APIs.\n\n## Library Config Model\n\n| Attribute               | Type   | Description                         |          |\n| ----------------------- | ------ | ----------------------------------- | -------- |\n| metrics_enabled         | bool   | Metrics enabled for the source      | optional |\n| retry_queue             | bool   | Retry queue enabled for the source  | optional |\n| cross_domain_id_enabled | bool   | Cross domain enabled for the source | optional |\n| api_host                | string | API host for the library            | optional |\n\n## Function Config Model\n\nOnly applies to source functions.\n\n\n| Attribute | Type   | Description                                                                           |           |\n| --------- | ------ | ------------------------------------------------------------------------------------- | --------- |\n| name      | string | The name of the function config.                                                      | required  |\n| value     | object | The value may be omitted to indicate a partial update.                                | optional  |\n| type      | string | The type of setting defined by the function ('string', 'boolean', 'text-map' 'array') | read-only |\n\n**Example** :\n\n````\n function_config: [{\n      \"name\": \"arraySetting\",\n      \"value\": [\"a\", \"b\", \"c\"],\n\n    },\n    {\n      \"name\": \"booleanSetting\",\n      \"value\": true,\n    },\n    {\n      \"name\": \"mapSetting\"\n      \"value\": {\n        \"key1\": \"val1\"\n      },\n    },\n    {\n      \"name\": \"sensitiveSetting\",\n      \"value\": \"****\"\n    },\n    {\n      \"name\": \"setting\",\n      \"value\": \"string value\"\n    }]```\n````\n"
    },
    {
      "name": "Destinations",
      "description": "## Destination Model\n\n| Attribute       | Type     | Description                          |           |\n| --------------- | -------- | ------------------------------------ | --------- |\n| create_time     | datetime | Time the destination was created     | read-only |\n| display_name    | string   | Display name of the destination      | required  |\n| name            | string   | Name of the destination              | required  |\n| catalog_id      | string   | Catalog ID of the destination        | optional  |\n| parent          | string   | Parent source of the destination     | required  |\n| connection_mode | string   | Connection mode of the destination   | optional  |\n| enabled         | bool     | Delivery enabled for the destination | optional  |\n| config          | object   | Config of the destination            | optional  |\n| update_time     | datetime | Time the destination was updated     | read-only |\n\nThe `config` options and `name` is available in the destination catalog APIs.\n`catalog_id` can be used in place of `catalog_name` and is available in the Functions APIs for Destination Functions.\n\nFor destinations that support `connection_mode`, valid values are `CLOUD` or `DEVICE`."
    },
    {
      "name": "Tracking Plans",
      "description": "Protocols APIs govern the data that flows through Segment. You can define a strict schema of event names and properties, track how the data conforms to this schema, and block non-conforming data from delivery to destinations.\n\n## Tracking Plan Model\n\n| Attribute    | Type     | Description                        |           |\n|--------------|----------|------------------------------------|-----------|\n| name         | string   | Unique name of the tracking plan   | read-only |\n| display_name | string   | Display name of the tracking plan  | required  |\n| rules        | Rules    | Rules for the tracking plan        | required  |\n| create_time  | datetime | Time the tracking plan was created | read-only |\n| update_time  | datetime | Time the tracking plan was updated | read-only |\n\n## Rules Model\n\n| Attribute       | Type   | Description                                      |          |\n|-----------------|--------|--------------------------------------------------|----------|\n| global          | object        | Rules applied to all messages             | optional |\n| events          | array[object] | Rules applied to Track calls              | optional |\n| idenitfy        | object        | Rules applied to Identify calls           | optional |\n| group           | object        | Rules applied to Group calls              | optional |\n| group_traits    | array[object] | Deprecated                                | optional |\n| identify_traits | array[object] | Deprecated                                | optional |\n\nEvery rule object is represented as JSON Schema.\n\n## Events Model\n\n| Attribute       | Type   | Description                                          |          |\n|-----------------|--------|------------------------------------------------------|----------|\n| name            | string       | Event name                                      | optional |\n| version         | int          | Event version, defaults to 1 when not specified | optional |\n| description     | string       | Event description                               | optional |\n| rules           | JSON         | Event JSON rules                                | optional |\n\n"
    },
    {
      "name": "Event Delivery Metrics",
      "description": "The Event Delivery Metrics APIs allow you to get delivery metrics for events sent to any destination [configured in cloud mode](https://segment.com/docs/destinations/#connection-modes).\n\n## Timeseries APIs\n\nTimeseries APIs allow you to get a breakdown of a specific metric name for a source-destination pair over a specified time range, broken out by a specific granularity. Based on the granularity, there are retrictions on the time range you can query:\n\n**Minute Granularity**  \n*Max time range*: 4 hours  \n*Oldest possible start time*: 48 hours in the past\n\n**Hour Granularity**  \n*Max Time range*: 1 week  \n*Oldest possible start time*: 10 days in the past\n\n**Day Granularity**  \n*Max time range*: 60 days  \n*Oldest possible start time*: 60 days in the past\n\n**Defaults**  \nThe defaults for granularity, start time, and end time if not set are:  \n*Granularity*: minute  \n*End Time*: current time  \n*Start Time*:  \n* for minute granularity: now - 1 hour\n* for hour granularity: now - 7 days\n* for day granularity: now - 30 days\n\n### Timeseries Model\nNote that all timestamps are in UTC.\n\n| Attribute       | Type           | Description                                          |           |\n|-----------------|----------------|------------------------------------------------------|-----------|\n| end_time        | datetime       | End time of the time range                           | optional  |\n| datapoints      | array[objects] | Breakdown of value and timestamp for a given metric. | read-only  |\n| granularity     | string         | Granularity of time range                            | optional. values allowed: minute, hour, or day  |\n| name            | string         | Name of the metric                                   | required  |\n| start_time      | datetime       | Start time of the time range                         | optional  |\n\n\n## Summary APIs\n\nSummary APIs allow you to get the total of all metrics for source-destination pairs over a specific time range. 60 days is the oldest possible start day allowed.\n\n### Summary Model\n\n| Attribute       | Type           | Description                              |           |\n|-----------------|----------------|------------------------------------------|-----------|\n| end_time        | datetime       | End time of the time range               | optional  |\n| metric_summary  | array[objects] | Metric summary over specified time range | read-only |\n| name            | string         | Name of the source destination pair      | required  |\n| start_time      | datetime       | Start time of the time range             | optional  |\n\n\n## Metric Names\nThe following all possible metric names you can get from the Event Delivery APIs:\n\n### Success Metrics\n**Unit**: integer\n* `successes`: total number of successfully delivered event to the destination.\n* `successes_on_first_attempt`: total number of successfully delivered events on the first attempt.\n* `successes_after_retry`: total number of successfully delivered events after more than one attempt. An event is retried because it was rejected from a destination with a specific error type. Events with these error types will be retried for up to 4 hours. [See more info on Segment's destination retry policy here](https://segment.com/docs/destinations/#retries).\n\n### Error Metrics\n**Unit**: integer\n\n* `discarded`: total number of events that were rejected by the destination and Segment will **not** retry.\n* `discareded_<error_type>`: total number of a specific discarded error type. With a few exceptions, these error types are generally set by the destinations' API. Examples are:\n\t* `discarded_MESSAGE_REJECTED`\n\t* `discarded_400`\n\t* `discarded_ENOTFOUND`\n\t\n* `retried`: total number of events that were rejected by a destination and Segment **will** retry. Every time an event is rejected by a destination with a retryable error, it gets counted as 1 `retried`. This means that a single event can be counted multiple times for **each** attempt Segment makes trying to deliver it. For example, if we tried to send an event 7 times and then it was successful on the 8th attempt, the `retried` count will be 7 and `successes` will be 1.\n* `retried_<error_type>`: total number of a specific retried error type. These error types are set by the destinations' API. Examples are:\n\t* `retried_500`\n\t* `retried_429`\n\n* `expired`: total number of retried events that have reached their max retry attempts and will no longer be retried by Segment.\n\n\n### Latency Metrics\n**Unit**: seconds\n* `time_to_first_attempt_average`: average time it took to attempt to send events to the destination.\n* `time_to_first_attempt_p95`: time it took to attempt to send 95% of your evnets to the destination.\n* `time_to_success_average`: average time it took for events to be successful to the destination. This includes the time it took for retried events to be successful.\n* `time_to_success_p95`: time it took for 95% of your events to be successful. This includes the time it took for retried events to be successful.\n\n## Segment Error Types\nBefore attempting to send an event to a destination, Segment will do initial checks and reject events we know won't be successfully delivered to the destination. The following error types are set by Segment:\n\n**MESSAGE_REJECTED**  \nThis error type means the event payload is missing a required destination field such as `user_id` or `email`.\n\n**INVALID_SETTINGS**  \nThis error type means that required destination settings are missing or invalid.\n\n**UNSUPPORTED_EVENT_TYPE**  \nThis error type means the destination does not support the [Segment event type](https://segment.com/docs/spec/).\n\n## Event Delivery Metrics in the App vs APIs\nThe name of the metrics you can view in the Segment App are different than the name of the metrics returned from the API. However, the values are the same. Here is a breakdown of the name of the metrics in the App and their names returned from the Event Delivery APIs:\n\n\n| App Metric Name                 | API Metric Name                                    |\n|---------------------------------|----------------------------------------------------|\n| Delivered on first try          | `successes_on_first_attempt`                       |\n| Delivered on retry              | `successes_after_retry`                            |\n| Failed events                   | `discarded` + `expired`                            |\n| Unsupported Events              | `discarded_UNSUPPORTED_EVENT_TYPE`                 |\n| P95 Latency                     | `time_to_success_p95`                              |\n| Delivery Issues Breakdown Count | `discarded_<error_type>` or `retried_<error_type>` |"
    },
    {
      "name": "Destination Filters",
      "description": "Note: The Destination Filters API is available only to Business customers. If\nyou would like to know more, please don't hesitate to reach out to us at\n[friends@segment.com](mailto:friends@segment.com).\n\n## Overview\n\nThe Destination Filters API provides fine-grained controls that allow you to\nconditionally prevent data from being delivered to specific cloud-based\n(server-side) destinations. You can filter entire events (for example,\nselectively drop them) or whitelist / blacklist individual fields in events\nbefore they are sent. You can conditionally apply filters to each event based\non the contents of that event’s payload. For example, you could apply a filter\nonly to Track events with a \"plan\" property equal to \"Professional\" or you\ncould apply a filter only to events with a user email address that does not\nmatch \"*@mycompany.com\".\n\n### Use Cases\n\nDestination Filters are a great for:\n\n- Reducing the volume of events being delivered to a destination to save on\n  costs\n\n- Filtering out Personally Identifying Informaion (PII) from events being sent\n  to a destination that shouldn't get PII\n\n- Preventing internal user activity from reaching an analytics tool\n\n- Sending only the events that you care about to an custom webhook\n\n\n### Availability\n\nDestination Filters are available on a beta basis to all Business customers,\nand are only supported for cloud-based (server-side) destinations. S3 and warehouse destinations are not yet supported.\n\n### Types of Filters\n\nThere are three filters that can be applied to events:\n\n| Type                 | Action                                                                                                                                                                                                                                                         |\n| -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `drop_event`         | Do not send the event to the destination.                                                                                                                                                                                                                      |\n| `sample_event`       | Send only a percentage of events through to the destination. You can optionally sample based on a field. For example, you can sample 10% of users by sampling on `userId` instead of a random 10% of all events, which is the default.                         |\n| `whitelist_fields`   | Whitelist fields in the event by specifying nested JSON objects (e.g. `context`, `properties.productDetails`, etc.) and a list of fields that should be retained in that nested object, with all others dropped before the event is sent to the destination.   |\n| `blacklist_fields`   | Blacklist fields in the event by specifying nested JSON objects (e.g. `context`, `properties.productDetails`, etc.) and a list of fields to drop from those nested objects before the event is sent to the destination.                                        |\n\nThe `whitelist_fields`  and `blacklist_fields` filters may only filter fields\ninside the following top-level fields of Segment events:\n\n- `properties`\n- `context`\n- `traits`\n\n### Filter Order\n\nFilters are applied in the following order for each event:\n\n1. `drop_event`\n2. `sample_event`\n3. `whitelist_fields`\n4. `blacklist_fields`\n\n### Conditional Filters\n\nFilters can optionally be applied to an event by writing an \"if\" statement\nusing Filter Query Language (\"FQL\"), Segment’s simple query language for\nstreaming JSON. FQL statements evaluate to true or false based on the contents\nof each event, allowing you to only apply filters to specific events.\n\nFor example, given the following event payload:\n\n```json\n{\n  \"event\": \"Button Clicked\",\n  \"type\": \"track\",\n  \"context\": {\n    \"library\": {\n      \"name\": \"analytics.js\",\n      \"version\": \"1.0\",\n    }\n  }\n}\n```\n\nThe following FQL statements will evaluate to \"true\", causing the filter to be\napplied:\n\n- `event = 'Button Clicked'`\n- `event = 'Button Clicked' and type = 'track'`\n- `match(context.library.version, '1.*')`\n- `type = 'identify' or type = 'track'`\n\nAnd the following FQL statements will evaluate to \"false\", causing the filter to be skipped:\n\n- `event = 'Screen Tapped'`\n- `context.path.path = '/login'`\n- `match (context.library.version, '2.*')`\n\nFor more detailed documentation including a list of all operators and functions,\nsee the [FQL Documentation][fql_docs].\n\n[fql_docs]: https://segment.com/docs/config-api/destination-filters/fql/\n\n### Universal Filters\n\nTo apply a filter to _all_ events going to a destination, you can supply an \"if\"\nstatement of \"all\". All actions in that filter will be applied to events before\nbeing delivered to that destination.\n\n## Limits\n\nDestination Filters currently have the following limits:\n\n* Each Destination may have no more than 10 filters.\n* FQL \"if\" statements may be a maxiumum of 3Kb in size.\n* Filters may have a maxiumum of 4 actions.\n* Whitelist / blacklist fields filters may target a maximum of 8 objects and\n  each object may have a maxiumum of 64 fields in the whitelist or blacklist.\n* The Preview API \"input\" payload may be a maximum of 128Kb.\n\nIf you would like any of these limits lifted, please reach out to us at\n[friends@segment.com](mailto:friends@segment.com).\n\n## API Models\n\n### Filter\n\n| Attribute       | Type         | Description                                                                                                                                        |             |\n| --------------- | ------------ | -------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- |\n| `name`          | `string`     | The URL path of this filter.                                                                                                                       | read-only   |\n| `enabled`       | `boolean`    | Whether or not this filter should be active.                                                                                                       |             |\n| `title`         | `string`     | A human-readable title for this filter.                                                                                                            |             |\n| `description`   | `string`     | A longer human-readable description of this filter.                                                                                                |             |\n| `if`            | `string`     | A FQL statement that causes this filter’s action to be applied if it evaluates to true. \"all\" will cause the filter to be applied to all events.   | required    |\n| `actions`       | `[]action`   | The filtering action to take on events that match the \"if\" statement. Must be one of: \"drop_event\", \"whitelist_fields\", or \"blacklist_fields\".     | required    |\n\n### Action\n\n#### Drop Event\n\nThe `drop_event` action will cause the event to be dropped and not sent to the\ndestination if the \"if\" statement evaluates to true.\n\n| Attribute | Type     | Description                                                              |          |\n| --------- | -------- | ------------------------------------------------------------------------ | -------- |\n| `type`    | `string` | The action name. For the drop event action, this must be `\"drop_event\"`. | required |\n\n#### Sample Event\n\nThe `sample_event` action will allow only a percentage of events through. It can\nsample randomly or, if given a `path` attribute, it can sample a percentage of\nevents based on the contents of a field. This is useful for sampling all events\nfor a percentage of _users_ rather than a percentage of all events for all\nusers.\n\n| Attribute | Type     | Description                                                                                                                                                                                  |          |\n| --------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------- |\n| `type`    | `string` | The action name. For the sample event action, this must be `\"sample_event\"`.                                                                                                                 | required |\n| `percent` | `float`  | A percentage in the range [0.0, 1.0] that determines the percent of events to allow through. 0.0 will allow no events and 1.0 will allow all events. The default is 0.0.                     | required |\n| `path`    | `string` | If non-empty, events will be sampled based on the value at this path. For example, if `path` is `userId`, a percentage of _users_ will have their events allowed through to the destination. |          |\n\n#### Whitelist Fields\n\nThe `whitelist_fields` action takes a list of nested objects (e.g. `context`,\n`properties.orderDetails`) and a list of fields for each object that should be\nallowed, with all other fields in those objects dropped.\n\n| Attribute | Type                         | Description                                                                                                                                                                                                                                                                                                                                                        |          |\n| --------- | ---------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ------------------- | -------- |\n| `type`    | `string`                     | The action name. For the whitelist fields action, this must be `\"whitelist_fields\"`.                                                                                                                                                                                                                                                                               | required |\n| `fields`  | `map of string → Field List` | A map of nested JSON objects that should have their properties filtered. The map key is the path to the nested JSON object (e.g. `context.ip`, `properties`, etc.) and the value is a field list object (see below) that specifies which fields within the object to allow.<br><br>Nested JSON objects not specified in this map will be untouched by this filter. | required |\n\n#### Blacklist Fields\n\nThe `blacklist_fields` action takes a list of nested objects (e.g. `context`,\n`properties.orderDetails`) and a list of fields for each object that should be\ndropped, with all other fields in those objects untouched.\n\n| Attribute | Type                         | Description                                                                                                                                                                                                                                                                                                                                                       |          |\n| --------- | ---------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------- |\n| `type`    | `string`                     | The action name. For the blacklist fields action, this must be `\"blacklist_fields\"`.                                                                                                                                                                                                                                                                              | required |\n| `fields`  | `map of string → Field List` | A map of nested JSON objects that should have their properties filtered. The map key is the path to the nested JSON object (e.g. `context.ip`, `properties`, etc.) and the value is a field list object (see below) that specifies which fields within the object to drop.<br><br>Nested JSON objects not specified in this map will be untouched by this filter. | required |\n\n### Field List\n\n| Attribute | Type       | Description                                                                                            |\n|-----------|------------|--------------------------------------------------------------------------------------------------------|\n| `fields`  | `[]string` | One or more JSON object field names. Nested fields (i.e. dot-separated field names) are not supported. |\n"
    },
    {
      "name": "Deletion and Suppression",
      "description": "In keeping with our commitment to support GDPR and future privacy regulations such as the CCPA, we offer the ability to delete and suppress data about end users if they are identified by a `userId`, should they revoke or alter their consent to data collection. For instance, if an end user in the EU invokes their Right to Object or Right to Erasure under the GDPR, you can use the following features in Segment to block ongoing data collection about the user, and additionally to delete all historical data across Segment’s systems, connected S3 buckets and warehouses, and supported downstream partners.\n\nPLEASE NOTE (Business Plan Customers): If you utilize this functionality to delete data, this means that you will not be able to Replay that data. For standard Replay requests, we ask that you wait for deletions to complete and not submit any new deletion requests for the period of time that we replay data for you.\n\nAll deletion and suppression actions within Segment are asynchronous, and fall under the umbrella of what we call “Regulations.” Regulations are requests to Segment to impart control over your data flow. They can be issued from your Segment Workspace Settings page under End User Privacy.\n\n[](https://segment.com/docs/guides/images/asset_N9oxVGCs.png)\n\nRegulations enable you to issue a single request to delete and suppress data about a user by `userId`. All regulations are by default scoped to your workspace and target all sources within the workspace. This way, you needn’t page over every source within Segment in order to delete data about a user across all your users.\n\n\n## Regulation types\n\n| Type                 | Description                                           |\n| -------------------- | ----------------------------------------------------- |\n| Suppress_With_Delete | Suppress new data and delete existing data            |\n| Delete               | Delete existing data without suppressing any new data |\n| Unsuppress           | Stop an ongoing suppression                           |\n| Suppress             | Suppress new data without deleting existing data      |\n| Delete_Internal      | Delete data from Segment internals only               |\n\n\n## Regulation States\n\n| State       | Description                                                                              |\n| ----------- | ---------------------------------------------------------------------------------------- |\n| initialized | Request is queued and is scheduled for execution                                         |\n| running     | Request is currently being processed by the backend                                      |\n| finished    | Request has finished successfully                                                        |\n| failed      | Request has failed with one or more errors. Use the GET endpoint to get specific errors. |\n\n\nYou will be modifying/querying the regulations resource to submit new GDPR requests for deletion and suppression.\n\n## Permissions\n\nBefore interacting with the regulation endpoints, make sure you have generated access tokens for authentication. Actions which do not modify the state like listing regulations, getting the status of a regulation require read access to the workspace, where as creating new regulations, deleting existing ones require workspace owner permissions.\n\n## Batching and Rate limits\n\n### Batching\nUser submitted requests will first be batched and then executed. The requests are guaranteed to be picked up and batched within a few days of submission while adhering to the workspace level limits on the concurrently running requests. The time to complete a request is dependent on the amount of data we have stored, and most requests finish within 7 days of submission. \n\n### Per request limits\nEach regulate request can have at most 5,000 attribute values (either `userId` or `objectId`). \nIrrespective of the number of attribute values, each request can have a payload size of at most 4MB. Submitting requests with size greater than 4MB would result in an error. \nThere is no limit on the number of regulate requests that users can submit, although all submissions may not immediately be queued for processing. If you experience backlogs of more than 7 days, please reach out to us at friends@segment.com. \n\n"
    },
    {
      "name": "IAM",
      "description": "Segment’s Identity and Access Management (IAM) model is based on role-based access control, and has three central notions: subjects (mostly users), roles (a logical collection of actions), and policies (a link between a subject, role, and resource). \n\nThe IAM API also allows you to manage invitations to your workspace. Invites can be created for a given email and a list of roles and resources. You can also list all pending invites and revoke / delete any pending invite.\n\nTo see who has what permissions in a workspace, list the policies in that workspace. To grant a new permission, create a policy.\n\n## Role Model\n\n| Attribute      | Type          | Description                       |           |\n|----------------|---------------|-----------------------------------|-----------|\n| display_name   | string        | Human-friendly name for a role    | read-only |\n| description    | string        | A description of the role         | read-only |\n| name           | string        | Unique name of the role           | read-only |\n| actions        | array[string] | Actions which the role grants     | read-only |\n\n## Policy Model\n\n| Attribute               | Type   | Description                         |           |\n|-------------------------|--------|-------------------------------------|-----------|\n| name                    | string   | Unique name of the policy. Prefixed with the name of the role the policy belongs to. | read-only |\n| resource             | string   | The resource the policy is granting permissions upon  | read-only |\n| subject | string   | The subject the policy is granting permissions to | read-only |\n\n\n## Invite Model\n| Attribute      | Type          | Description                                        |           |\n|----------------|---------------|----------------------------------------------------|-----------|\n| email          | string        | Email of the user you are inviting                 | required  |\n| create_time    | string        | Timestamp marking with invite was created.         | read-only |\n| expire_time    | string        | Timestamp marking when invite is no longer valid.  | read-only |\n| policies       | array[object] | List of objects with role -> string and resource -> string pairs .                    | required |\n"
    },
    {
      "name": "Functions",
      "description": "## Function Model\n\n| Attribute    | Type          | Description                                                                |           |\n| ------------ | ------------- | -------------------------------------------------------------------------- | --------- |\n| id           | string        | Function ID                                                                | read-only |\n| display_name | string        | Display name of the function                                               | required  |\n| type         | string        | Function type: `source` or `destination`                                       | required  |\n| code         | string        | Function code (JavaScript)                                                 | required  |\n| workspace_id | string        | Workspace ID of the function                                               | required  |\n| settings     | array[SettingSchema] | A list of setting schemas                                                  | optional  |\n| description  | string        | Function description                                                       | optional  |\n| logo_url     | string        | Logo URL                                                                   | optional  |\n| catalog_id   | string        | Catalog ID of the function, for use with the Sources and Destinations APIs | read-only |\n| created_at   | datetime      | Time the function was created                                           | read-only |\n\n## Setting Schema Model\n\n| Attribute   | Type    | Description                                                    |          | Example             |\n| ----------- | ------- | -------------------------------------------------------------- | -------- | ------------------- |\n| name        | string  | Name of the setting                                            | required | 'apiKey'            |\n| label       | string  | Display name (in the UI)                                       | required | 'api key'           |\n| type        | string  | The type of setting ('string', 'boolean', 'text-map', 'array') | required | 'string'            |\n| sensitive   | boolean | If the setting contains sensitive data ie. apiKey              | required | true                |\n| description | string  | Setting description                                            | optional | 'Enter the api key' |\n"
    }
  ],
  "paths": {
    "/{version}/catalog/sources": {
      "get": {
        "tags": [
          "Integrations Catalog"
        ],
        "summary": "List Catalog Sources",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional, e.g. `2`"
          },
          {
            "name": "page_token",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional, e.g. `eyJTa2lwIjoyfQ==`"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:13:53 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "596"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "1"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "List Catalog Sources Page 1",
                    "value": {
                      "sources": [
                        {
                          "name": "catalog/sources/.net",
                          "display_name": ".NET",
                          "description": "",
                          "categories": [
                            "Server"
                          ]
                        },
                        {
                          "name": "catalog/sources/javascript",
                          "display_name": "Javascript",
                          "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                          "categories": [
                            "Website"
                          ]
                        }
                      ],
                      "next_page_token": "eyJTa2lwIjoyfQ=="
                    }
                  },
                  "example-1": {
                    "summary": "List Catalog Sources Page 2",
                    "value": {
                      "sources": [
                        {
                          "name": "catalog/sources/clojure",
                          "display_name": "Clojure",
                          "description": "",
                          "categories": [
                            "Server"
                          ]
                        },
                        {
                          "name": "catalog/sources/go",
                          "display_name": "Go",
                          "description": "",
                          "categories": [
                            "Server"
                          ]
                        }
                      ],
                      "next_page_token": "eyJTa2lwIjo0fQ=="
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{version}/catalog/sources/javascript": {
      "get": {
        "tags": [
          "Integrations Catalog"
        ],
        "summary": "Get Catalog Source",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:17:15 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "389"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "1"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "catalog/sources/javascript",
                  "display_name": "Javascript",
                  "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                  "categories": [
                    "Website"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/{version}/catalog/destinations": {
      "get": {
        "tags": [
          "Integrations Catalog"
        ],
        "summary": "List Catalog Destinations",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional, e.g. `2`"
          },
          {
            "name": "page_token",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional, e.g. `NTQ1MjFmZDUyNWU3MjFlMzJhNzJlZTkw`"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:18:41 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "3557"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "460"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "List Catalog Destinations Page 1",
                    "value": {
                      "destinations": [
                        {
                          "name": "catalog/destinations/adroll",
                          "display_name": "AdRoll",
                          "description": "AdRoll is a retargeting network that allows you to show ads to visitors who've landed on your site while browsing the web. ",
                          "type": "STREAMING",
                          "website": "http://adroll.com",
                          "status": "PUBLIC",
                          "logos": {
                            "logo": "https://d3hotuclm6if1r.cloudfront.net/logos/adroll-default.svg",
                            "mark": "https://cdn.filepicker.io/api/file/IKo2fU59RROBsNtj4lHs"
                          },
                          "categories": {
                            "primary": "Advertising",
                            "secondary": "",
                            "additional": []
                          },
                          "components": [
                            {
                              "type": "WEB"
                            }
                          ],
                          "settings": [
                            {
                              "name": "_version",
                              "display_name": "_version",
                              "type": "NUMBER",
                              "deprecated": false,
                              "required": false,
                              "number_validators": {
                                "min": 0,
                                "max": 0
                              },
                              "settings": []
                            },
                            {
                              "name": "advId",
                              "display_name": "Advertiser ID",
                              "type": "STRING",
                              "deprecated": false,
                              "required": true,
                              "string_validators": {
                                "regexp": "^[A-Z0-9]{22}$"
                              },
                              "settings": []
                            },
                            {
                              "name": "events",
                              "display_name": "Events",
                              "type": "MAP",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "pixId",
                              "display_name": "Pixel ID",
                              "type": "STRING",
                              "deprecated": false,
                              "required": true,
                              "string_validators": {
                                "regexp": "^[A-Z0-9]{22}$"
                              },
                              "settings": []
                            }
                          ]
                        },
                        {
                          "name": "catalog/destinations/appsflyer",
                          "display_name": "AppsFlyer",
                          "description": "Mobile app measurement and tracking.",
                          "type": "STREAMING",
                          "website": "http://www.appsflyer.com/",
                          "status": "PUBLIC",
                          "logos": {
                            "logo": "https://d3hotuclm6if1r.cloudfront.net/logos/appsflyer-default.svg",
                            "mark": "https://cdn.filepicker.io/api/file/AnJUEBvxRouLLOvIeQuK"
                          },
                          "categories": {
                            "primary": "Attribution",
                            "secondary": "",
                            "additional": []
                          },
                          "components": [
                            {
                              "type": "IOS"
                            },
                            {
                              "type": "ANDROID"
                            },
                            {
                              "type": "CLOUD"
                            }
                          ],
                          "settings": [
                            {
                              "name": "androidAppID",
                              "display_name": "Android App ID",
                              "type": "STRING",
                              "deprecated": false,
                              "required": false,
                              "string_validators": {
                                "regexp": ""
                              },
                              "settings": []
                            },
                            {
                              "name": "appleAppID",
                              "display_name": "Apple App ID (iOS)",
                              "type": "STRING",
                              "deprecated": false,
                              "required": false,
                              "string_validators": {
                                "regexp": "^[0-9]*$"
                              },
                              "settings": []
                            },
                            {
                              "name": "appsFlyerDevKey",
                              "display_name": "AppsFlyer Dev Key",
                              "type": "STRING",
                              "deprecated": false,
                              "required": true,
                              "string_validators": {
                                "regexp": "^[a-zA-Z0-9]{10,30}$"
                              },
                              "settings": []
                            },
                            {
                              "name": "httpFallback",
                              "display_name": "Enable HTTP fallback (Android)",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "rokuAppID",
                              "display_name": "Roku App ID",
                              "type": "STRING",
                              "deprecated": false,
                              "required": false,
                              "string_validators": {
                                "regexp": ""
                              },
                              "settings": []
                            },
                            {
                              "name": "trackAttributionData",
                              "display_name": "Track Attribution Data",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            }
                          ]
                        }
                      ],
                      "next_page_token": "NTQ1MjFmZDUyNWU3MjFlMzJhNzJlZTkw"
                    }
                  },
                  "example-1": {
                    "summary": "List Catalog Destinations Page 2",
                    "value": {
                      "destinations": [
                        {
                          "name": "catalog/destinations/alexa",
                          "display_name": "Alexa",
                          "description": "Get an insider's edge with Alexa's Competitive Intelligence toolkit. Uncover opportunities for competitive advantage, benchmark any site against its competitors and track companies over time.",
                          "type": "STREAMING",
                          "website": "https://www.alexa.com",
                          "status": "PUBLIC",
                          "logos": {
                            "logo": "https://cdn.filepicker.io/api/file/taHbRV4TsGP64UN7upNv",
                            "mark": "https://cdn.filepicker.io/api/file/jplK0HFyT5CKTc6FHkfP"
                          },
                          "categories": {
                            "primary": "Analytics",
                            "secondary": "",
                            "additional": []
                          },
                          "components": [
                            {
                              "type": "WEB"
                            }
                          ],
                          "settings": [
                            {
                              "name": "domain",
                              "display_name": "Domain",
                              "type": "STRING",
                              "deprecated": false,
                              "required": true,
                              "string_validators": {
                                "regexp": ""
                              },
                              "settings": []
                            },
                            {
                              "name": "account",
                              "display_name": "Account ID",
                              "type": "STRING",
                              "deprecated": false,
                              "required": true,
                              "string_validators": {
                                "regexp": ""
                              },
                              "settings": []
                            }
                          ]
                        },
                        {
                          "name": "catalog/destinations/amplitude",
                          "display_name": "Amplitude",
                          "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                          "type": "STREAMING",
                          "website": "http://amplitude.com",
                          "status": "PUBLIC",
                          "logos": {
                            "logo": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                            "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                          },
                          "categories": {
                            "primary": "Analytics",
                            "secondary": "",
                            "additional": []
                          },
                          "components": [
                            {
                              "type": "WEB"
                            },
                            {
                              "type": "IOS"
                            },
                            {
                              "type": "ANDROID"
                            },
                            {
                              "type": "CLOUD"
                            }
                          ],
                          "settings": [
                            {
                              "name": "forceHttps",
                              "display_name": "Force Https",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "mapQueryParams",
                              "display_name": "Map Query Params to Custom Property",
                              "type": "MAP",
                              "deprecated": false,
                              "required": false,
                              "map_validators": {
                                "regexp": "",
                                "min": 0,
                                "max": 0,
                                "map_prefix": "",
                                "select_options": [
                                  "user_properties",
                                  "event_properties"
                                ]
                              },
                              "settings": []
                            },
                            {
                              "name": "trackAllPages",
                              "display_name": "Track All Pages to Amplitude",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "trackReferrer",
                              "display_name": "Track Referrer to Amplitude",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "trackRevenuePerProduct",
                              "display_name": "Track Revenue Per Product",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "deviceIdFromUrlParam",
                              "display_name": "Set Device ID From URL Parameter amp_device_id",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "traitsToIncrement",
                              "display_name": "Traits To Increment",
                              "type": "LIST",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "trackSessionEvents",
                              "display_name": "Track Session Events to Amplitude",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "secretKey",
                              "display_name": "Secret Key",
                              "type": "STRING",
                              "deprecated": false,
                              "required": false,
                              "string_validators": {
                                "regexp": ""
                              },
                              "settings": []
                            },
                            {
                              "name": "enableLocationListening",
                              "display_name": "Enable Location Listening",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "traitsToSetOnce",
                              "display_name": "Traits to Set Once",
                              "type": "LIST",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "useAdvertisingIdForDeviceId",
                              "display_name": "Use AdvertisingId for DeviceId",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "apiKey",
                              "display_name": "API Key",
                              "type": "STRING",
                              "deprecated": false,
                              "required": true,
                              "string_validators": {
                                "regexp": "^[a-z0-9]{32}$"
                              },
                              "settings": []
                            },
                            {
                              "name": "saveParamsReferrerOncePerSession",
                              "display_name": "Save Referrer, URL Params, GCLID Once Per Session",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "useLogRevenueV2",
                              "display_name": "Use Log Revenue V2 API",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "batchEvents",
                              "display_name": "Batch Events",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "preferAnonymousIdForDeviceId",
                              "display_name": "Prefer Anonymous ID for Device ID",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "trackGclid",
                              "display_name": "Track GCLID",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "trackUtmProperties",
                              "display_name": "Track UTM Properties to Amplitude.",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "groupValueTrait",
                              "display_name": "Group Value Trait",
                              "type": "STRING",
                              "deprecated": false,
                              "required": false,
                              "string_validators": {
                                "regexp": ""
                              },
                              "settings": []
                            },
                            {
                              "name": "trackAllPagesV2",
                              "display_name": "Track All Screens",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "groupTypeTrait",
                              "display_name": "Group Type Trait",
                              "type": "STRING",
                              "deprecated": false,
                              "required": false,
                              "string_validators": {
                                "regexp": ""
                              },
                              "settings": []
                            },
                            {
                              "name": "eventUploadPeriodMillis",
                              "display_name": "Event Upload Period Millis (for batching events)",
                              "type": "NUMBER",
                              "deprecated": false,
                              "required": false,
                              "number_validators": {
                                "min": 0,
                                "max": 0
                              },
                              "settings": []
                            },
                            {
                              "name": "eventUploadThreshold",
                              "display_name": "Event Upload Threshold (for batching events)",
                              "type": "NUMBER",
                              "deprecated": false,
                              "required": false,
                              "number_validators": {
                                "min": 0,
                                "max": 0
                              },
                              "settings": []
                            },
                            {
                              "name": "trackCategorizedPages",
                              "display_name": "Track Categorized Pages to Amplitude",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "useCustomAmplitudeProperties",
                              "display_name": "Send Custom Language and Country Properties",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            },
                            {
                              "name": "trackNamedPages",
                              "display_name": "Track Named Pages to Amplitude",
                              "type": "BOOLEAN",
                              "deprecated": false,
                              "required": false,
                              "settings": []
                            }
                          ]
                        }
                      ],
                      "next_page_token": "NTQ1MjFmZDUyNWU3MjFlMzJhNzJlZTky"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{version}/catalog/destinations/google-analytics": {
      "get": {
        "tags": [
          "Integrations Catalog"
        ],
        "summary": "Get Catalog Destination",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:20:37 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "7151"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "22"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "catalog/destinations/google-analytics",
                  "display_name": "Google Analytics",
                  "description": "Google Analytics is the most popular analytics tool for the web. It’s free and provides a wide range of features. It’s especially good at measuring traffic sources and ad campaigns.",
                  "type": "STREAMING",
                  "website": "http://google.com/analytics",
                  "status": "PUBLIC",
                  "logos": {
                    "logo": "https://cdn.filepicker.io/api/file/SRUsbCZSQqhh0KVFYcVV",
                    "mark": "https://cdn.filepicker.io/api/file/4lEuIf8LR4KhMqRr6pZU"
                  },
                  "categories": {
                    "primary": "Analytics",
                    "secondary": "",
                    "additional": []
                  },
                  "components": [
                    {
                      "type": "WEB"
                    },
                    {
                      "type": "IOS"
                    },
                    {
                      "type": "ANDROID"
                    },
                    {
                      "type": "CLOUD"
                    }
                  ],
                  "settings": [
                    {
                      "name": "serversideTrackingId",
                      "display_name": "Serverside Tracking ID",
                      "type": "STRING",
                      "deprecated": false,
                      "required": false,
                      "string_validators": {
                        "regexp": "^UA-\\d+-\\d+$"
                      },
                      "settings": []
                    },
                    {
                      "name": "dimensions",
                      "display_name": "Custom Dimensions",
                      "type": "MAP",
                      "deprecated": false,
                      "required": false,
                      "map_validators": {
                        "regexp": "",
                        "min": 0,
                        "max": 200,
                        "map_prefix": "dimension",
                        "select_options": []
                      },
                      "settings": []
                    },
                    {
                      "name": "enableServerIdentify",
                      "display_name": "Enable Server Side Identify",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "identifyEventName",
                      "display_name": "Server Side Identify Event Action",
                      "type": "STRING",
                      "deprecated": false,
                      "required": false,
                      "string_validators": {
                        "regexp": ""
                      },
                      "settings": []
                    },
                    {
                      "name": "sendUserId",
                      "display_name": "Send User-ID to GA",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "enhancedLinkAttribution",
                      "display_name": "Enable Enhanced Link Attribution",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "ignoredReferrers",
                      "display_name": "Ignored Referrers",
                      "type": "MULTI_LINE_STRING",
                      "deprecated": false,
                      "required": false,
                      "string_validators": {
                        "regexp": ""
                      },
                      "settings": []
                    },
                    {
                      "name": "trackCategorizedPages",
                      "display_name": "Track Categorized Pages",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "sampleRate",
                      "display_name": "Sample Rate",
                      "type": "NUMBER",
                      "deprecated": false,
                      "required": false,
                      "number_validators": {
                        "min": 1,
                        "max": 100
                      },
                      "settings": []
                    },
                    {
                      "name": "trackNamedPages",
                      "display_name": "Track Named Pages",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "anonymizeIp",
                      "display_name": "Anonymize IP Addresses",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "identifyCategory",
                      "display_name": "Server Side Identify Event Category",
                      "type": "STRING",
                      "deprecated": false,
                      "required": false,
                      "string_validators": {
                        "regexp": ""
                      },
                      "settings": []
                    },
                    {
                      "name": "optimize",
                      "display_name": "Optimize Container ID",
                      "type": "STRING",
                      "deprecated": false,
                      "required": false,
                      "string_validators": {
                        "regexp": ""
                      },
                      "settings": []
                    },
                    {
                      "name": "reportUncaughtExceptions",
                      "display_name": "Send Uncaught Exceptions to GA (Mobile)",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "protocolMappings",
                      "display_name": "Map Traits or Properties to Measurement Protocol Params",
                      "type": "MAP",
                      "deprecated": false,
                      "required": false,
                      "map_validators": {
                        "regexp": "",
                        "min": 0,
                        "max": 0,
                        "map_prefix": "",
                        "select_options": [
                          "plt",
                          "pdt",
                          "gclid"
                        ]
                      },
                      "settings": []
                    },
                    {
                      "name": "siteSpeedSampleRate",
                      "display_name": "Site Speed Sample Rate",
                      "type": "NUMBER",
                      "deprecated": false,
                      "required": false,
                      "number_validators": {
                        "min": 1,
                        "max": 100
                      },
                      "settings": []
                    },
                    {
                      "name": "classic",
                      "display_name": "Use Classic Analytics on Your Site",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "contentGroupings",
                      "display_name": "Content Groupings",
                      "type": "MAP",
                      "deprecated": false,
                      "required": false,
                      "map_validators": {
                        "regexp": "",
                        "min": 0,
                        "max": 5,
                        "map_prefix": "contentGroup",
                        "select_options": []
                      },
                      "settings": []
                    },
                    {
                      "name": "nameTracker",
                      "display_name": "Name Tracker",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "nonInteraction",
                      "display_name": "Add the non-interaction flag to all events",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "trackingId",
                      "display_name": "Website Tracking ID",
                      "type": "STRING",
                      "deprecated": false,
                      "required": false,
                      "string_validators": {
                        "regexp": "^UA-\\d+-\\d+$"
                      },
                      "settings": []
                    },
                    {
                      "name": "setAllMappedProps",
                      "display_name": "Set Custom Dimensions & Metrics to the Page",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "doubleClick",
                      "display_name": "Remarketing, Display Ads and Demographic Reports.",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "enhancedEcommerce",
                      "display_name": "Enable Enhanced Ecommerce",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "includeSearch",
                      "display_name": "Include the Querystring in Page Views",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "mobileTrackingId",
                      "display_name": "Mobile Tracking ID",
                      "type": "STRING",
                      "deprecated": false,
                      "required": false,
                      "string_validators": {
                        "regexp": "^UA-\\d+-\\d+$"
                      },
                      "settings": []
                    },
                    {
                      "name": "domain",
                      "display_name": "Cookie Domain Name",
                      "type": "STRING",
                      "deprecated": false,
                      "required": false,
                      "string_validators": {
                        "regexp": "^none$|^[a-zA-Z0-9_-]+\\.[.a-zA-Z0-9_-]+$"
                      },
                      "settings": []
                    },
                    {
                      "name": "metrics",
                      "display_name": "Custom Metrics",
                      "type": "MAP",
                      "deprecated": false,
                      "required": false,
                      "map_validators": {
                        "regexp": "",
                        "min": 0,
                        "max": 200,
                        "map_prefix": "metric",
                        "select_options": []
                      },
                      "settings": []
                    },
                    {
                      "name": "serversideClassic",
                      "display_name": "Use Classic Analytics for Your Serverside Tracking",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    },
                    {
                      "name": "useGoogleAmpClientId",
                      "display_name": "Use Google AMP Client ID",
                      "type": "BOOLEAN",
                      "deprecated": false,
                      "required": false,
                      "settings": []
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/{version}/{workspace_name}": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Get Workspace",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:28:41 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "137"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "8"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "{{workspace_name}}",
                  "display_name": "My Workspace",
                  "id": "jwt9cirmwq",
                  "create_time": "2018-01-23T23:21:55.275Z"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/{workspace_name}/sources": {
      "post": {
        "tags": [
          "Sources"
        ],
        "summary": "Create Source",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "source": {
                    "name": "{{source_name}}",
                    "catalog_name": "catalog/sources/javascript"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:44:15 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "367"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "131"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "{{source_name}}",
                  "parent": "{{workspace_name}}",
                  "catalog_name": "catalog/sources/javascript",
                  "write_keys": [
                    "xDfE5GeTMyukogiMks5Rgd1jDCIzDeK2"
                  ],
                  "library_config": {
                    "metrics_enabled": false,
                    "retry_queue": false,
                    "cross_domain_id_enabled": false,
                    "api_host": ""
                  },
                  "create_time": "2018-10-16T20:44:15.214Z"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Sources"
        ],
        "summary": "List Sources",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional, e.g. `2`"
          },
          {
            "name": "page_token",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional, e.g. `MjAxNi0wNC0yOVQxNTo0OTozMi40Wg==`"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:32:34 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "834"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "55"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "sources": [
                    {
                      "name": "{{workspace_name}}/sources/ios",
                      "parent": "{{workspace_name}}",
                      "catalog_name": "catalog/sources/ios",
                      "write_keys": [
                        "F4xIkfwZiNBeYI0A9y1Cikhgi9dy7gX7"
                      ],
                      "library_config": {
                        "metrics_enabled": false,
                        "retry_queue": false,
                        "cross_domain_id_enabled": false,
                        "api_host": ""
                      },
                      "id": "fPcUhz127F",
                      "create_time": "2018-10-11T22:57:53.079Z"
                    },
                    {
                      "name": "{{source_name}}",
                      "parent": "{{workspace_name}}",
                      "catalog_name": "catalog/sources/javascript",
                      "write_keys": [
                        "fbSIEioXNHc61VQgnmAHsHoDISjD6an7"
                      ],
                      "library_config": {
                        "metrics_enabled": false,
                        "retry_queue": false,
                        "cross_domain_id_enabled": false,
                        "api_host": ""
                      },
                      "id": "nkrFn3W1BO",
                      "create_time": "2018-10-11T23:29:48.774Z"
                    }
                  ],
                  "next_page_token": ""
                }
              }
            }
          }
        }
      }
    },
    "/{version}/{source_name}": {
      "get": {
        "tags": [
          "Sources"
        ],
        "summary": "Get Source",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "source_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:32:34 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "834"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "55"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "{{source_name}}",
                  "parent": "{{workspace_name}}",
                  "catalog_name": "catalog/sources/ios",
                  "write_keys": [
                    "F4xIkfwZiNBeYI0A9y1Cikhgi9dy7gX7"
                  ],
                  "library_config": {
                    "metrics_enabled": false,
                    "retry_queue": false,
                    "cross_domain_id_enabled": false,
                    "api_host": ""
                  },
                  "id": "fPcUhz127F",
                  "create_time": "2018-10-11T22:57:53.079Z"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sources"
        ],
        "summary": "Delete Source",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "source_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        }
      }
    },
    "/{version}/{source_name}/schema-config": {
      "get": {
        "tags": [
          "Sources"
        ],
        "summary": "Get Schema Configuration",
        "description": "Retrieves the schema configuration for a source. If protocols is not enabled for the source then the configurations specific to protocols will have default values.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "source_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 02 May 2019 21:19:14 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "74"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "{{source_name}}/schema-config",
                  "parent": "sources/js",
                  "allow_unplanned_track_events": true,
                  "allow_unplanned_identify_traits": false,
                  "allow_unplanned_group_traits": false,
                  "forwarding_blocked_events_to": "forwarding_blocked_events_to_source_slug",
                  "allow_unplanned_track_event_properties": false,
                  "allow_track_event_on_violations": false,
                  "allow_identify_traits_on_violations": false,
                  "allow_group_traits_on_violations": false,
                  "forwarding_violations_to": ""
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 02 May 2019 21:19:14 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "74"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n \"name\": \"{{source_name}}/schema-config\",\n \"parent\": \"sources/js\",\n \"allow_unplanned_track_events\": true,\n \"allow_unplanned_identify_traits\": false,\n \"allow_unplanned_group_traits\": true,\n \"forwarding_blocked_events_to\": \"forwarding_blocked_events_to_source_slug\",\n \"allow_unplanned_track_event_properties\": true,\n \"allow_track_event_on_violations\": false,\n \"allow_identify_traits_on_violations\": true,\n \"allow_group_traits_on_violations\": false,\n \"forwarding_violations_to\": \"forwarding_violations_to_source_slug\",\n \"common_track_event_on_violations\": \"ALLOW\",\n \"common_identify_event_on_violations\": \"OMIT_TRAITS\",\n \"common_group_event_on_violations\": \"BLOCK\",\n}"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Sources"
        ],
        "summary": "Update Schema Configuration",
        "description": "Updates the schema configuration for a source. If protocols is not enabled for the source then any updates to protocols specific configurations will not be applied.\n\nCommon JSON schema settings accept the parameters \"ALLOW\", \"OMIT_PROPERTIES\" for Track Events, \"OMIT_TRAITS\" for Identify & Group Events,  and \"BLOCK\".",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "schema_config": {
                    "allow_unplanned_track_events": false,
                    "allow_unplanned_identify_traits": true,
                    "allow_unplanned_group_traits": false,
                    "forwarding_blocked_events_to": "",
                    "allow_unplanned_track_event_properties": true,
                    "allow_track_event_on_violations": false,
                    "allow_identify_traits_on_violations": true,
                    "allow_group_traits_on_violations": false,
                    "forwarding_violations_to": "",
                    "allow_track_properties_on_violations": false,
                    "common_track_event_on_violations": "OMIT_PROPERTIES",
                    "common_identify_event_on_violations": "OMIT_TRAITS",
                    "common_group_event_on_violations": "BLOCK"
                  },
                  "update_mask": {
                    "paths": [
                      "schema_config.allow_unplanned_track_events",
                      "schema_config.allow_unplanned_identify_traits",
                      "schema_config.allow_unplanned_group_traits",
                      "schema_config.forwarding_blocked_events_to",
                      "schema_config.allow_unplanned_track_event_properties",
                      "schema_config.allow_track_event_on_violations",
                      "schema_config.allow_identify_traits_on_violations",
                      "schema_config.allow_group_traits_on_violations",
                      "schema_config.forwarding_violations_to",
                      "schema_config.allow_track_properties_on_violations",
                      "schema_config.common_track_event_on_violations",
                      "schema_config.common_identify_event_on_violations",
                      "schema_config.common_group_event_on_violations"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "source_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n \"name\": \"{{source_name}}/schema-config\",\n \"parent\": \"sources/js\",\n \"allow_unplanned_track_events\": false,\n \"allow_unplanned_identify_traits\": true,\n \"allow_unplanned_group_traits\": false,\n \"forwarding_blocked_events_to\": \"forwarding_blocked_events_to_source_slug\",\n \"allow_unplanned_track_event_properties\": false,\n \"allow_track_event_on_violations\": false,\n \"allow_identify_traits_on_violations\": false,\n \"allow_group_traits_on_violations\": false,\n \"forwarding_violations_to\": \"\",\n \"allow_track_properties_on_violations\": false,\n}"
              }
            }
          },
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "example-0": {
                    "summary": "Update Schema Configuration for a Protocols Enabled Source",
                    "value": "{\n \"name\": \"{{source_name}}/schema-config\",\n \"parent\": \"sources/js\",\n \"allow_unplanned_track_events\": false,\n \"allow_unplanned_identify_traits\": true,\n \"allow_unplanned_group_traits\": false,\n \"forwarding_blocked_events_to\": \"forwarding_blocked_events_to_source_slug\",\n \"allow_unplanned_track_event_properties\": true,\n \"allow_track_event_on_violations\": false,\n \"allow_identify_traits_on_violations\": true,\n \"allow_group_traits_on_violations\": false,\n \"forwarding_violations_to\": \"forwarding_violations_to_source_slug\",\n \"allow_track_properties_on_violations\": false,\n \"common_track_event_on_violations\": \"ALLOW\",\n \"common_identify_event_on_violations\": \"ALLOW\",\n \"common_group_event_on_violations\": \"ALLOW\"\n}"
                  },
                  "example-1": {
                    "summary": "Update Subset of Schema Configuration for a Protocols Enabled Source",
                    "value": "{\n \"name\": \"{{source_name}}/schema-config\",\n \"parent\": \"sources/js\",\n \"allow_unplanned_track_events\": true,\n \"allow_unplanned_identify_traits\": true,\n \"allow_unplanned_group_traits\": false,\n \"forwarding_blocked_events_to\": \"foo\",\n \"allow_unplanned_track_event_properties\": false,\n \"allow_track_event_on_violations\": false,\n \"allow_identify_traits_on_violations\": true,\n \"allow_group_traits_on_violations\": false,\n \"forwarding_violations_to\": \"forwarding_violations_to_source_slug\",\n \"allow_track_properties_on_violations\": false,\n \"common_track_event_on_violations\": \"ALLOW\",\n \"common_identify_event_on_violations\": \"ALLOW\",\n \"common_group_event_on_violations\": \"ALLOW\"\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{version}/{source_name}/connected-warehouses": {
      "patch": {
        "tags": [
          "Sources"
        ],
        "summary": "Update Connected Warehouses",
        "description": "Disable or enable a source from syncing to a warehouse using the warehouse id. Use a for loop to update multiple source<>warehouse pairs.\n\nNote: Only the following roles have permissions to execute the update request:\n\n    - Workspace Owner, or\n    - Source Admin and Warehouse Admin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "warehouse_id": "{{warehouse_id}}",
                  "enabled": false
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "source_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{}"
              }
            }
          }
        }
      }
    },
    "/{version}/{workspace_id}/functions/sfn_{source_id}/is-latest-version": {
      "get": {
        "tags": [
          "Sources"
        ],
        "summary": "IsLatestVersion (Source Function)",
        "description": "`IsLatestVersion` is used to check whether a source  instance is running the latest code from its associated source function class. It can be used to determine whether a `Deploy` is necessary to update the code. If `IsLatestVersion` is true, `Deploy` would be a no-op.\n",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "source_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:32:34 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "is_latest": true
                }
              }
            }
          }
        }
      }
    },
    "/{version}/{workspace_id}/functions/sfn_{source_id}/deploy": {
      "post": {
        "tags": [
          "Sources"
        ],
        "summary": "Deploy (Source Function)",
        "description": "`Deploy` is used to update the code deployed for a source function instance. It loads the latest code from the associated function class (available in Functions API). \n\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "source_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:32:34 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/{version}/{source_name}/destinations/": {
      "post": {
        "tags": [
          "Destinations"
        ],
        "summary": "Create Destination",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "destination": {
                    "name": "{{destination_name}}",
                    "config": [
                      {
                        "name": "{{destination_name}}/config/trackingId",
                        "type": "string",
                        "value": "UA-970334309-1"
                      }
                    ],
                    "enabled": false,
                    "connection_mode": "UNSPECIFIED"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "source_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Wed, 17 Oct 2018 21:24:06 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "6290"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "114"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "{{destination_name}}",
                  "parent": "{{source_name}}",
                  "display_name": "Google Analytics",
                  "enabled": false,
                  "config": [
                    {
                      "name": "{{destination_name}}/config/identifyEventName",
                      "display_name": "Server Side Identify Event Action",
                      "value": "",
                      "type": "string"
                    },
                    {
                      "display_name": "Ignored Referrers",
                      "type": "multi-line-string",
                      "name": "{{destination_name}}/config/ignoredReferrers"
                    },
                    {
                      "type": "boolean",
                      "name": "{{destination_name}}/config/trackNamedPages",
                      "display_name": "Track Named Pages",
                      "value": true
                    },
                    {
                      "name": "{{destination_name}}/config/trackingId",
                      "display_name": "Website Tracking ID",
                      "value": "UA-970334309-1",
                      "type": "string"
                    },
                    {
                      "name": "{{destination_name}}/config/classic",
                      "display_name": "Use Classic Analytics on Your Site",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/doubleClick",
                      "display_name": "Remarketing, Display Ads and Demographic Reports.",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "value": false,
                      "type": "boolean",
                      "name": "{{destination_name}}/config/enhancedEcommerce",
                      "display_name": "Enable Enhanced Ecommerce"
                    },
                    {
                      "value": "",
                      "type": "string",
                      "name": "{{destination_name}}/config/serversideTrackingId",
                      "display_name": "Serverside Tracking ID"
                    },
                    {
                      "display_name": "Enable Enhanced Link Attribution",
                      "value": false,
                      "type": "boolean",
                      "name": "{{destination_name}}/config/enhancedLinkAttribution"
                    },
                    {
                      "name": "{{destination_name}}/config/optimize",
                      "display_name": "Optimize Container ID",
                      "value": "",
                      "type": "string"
                    },
                    {
                      "name": "{{destination_name}}/config/protocolMappings",
                      "display_name": "Map Traits or Properties to Measurement Protocol Params",
                      "type": "map"
                    },
                    {
                      "display_name": "Sample Rate",
                      "value": 100,
                      "type": "number",
                      "name": "{{destination_name}}/config/sampleRate"
                    },
                    {
                      "name": "{{destination_name}}/config/sendUserId",
                      "display_name": "Send User-ID to GA",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/domain",
                      "display_name": "Cookie Domain Name",
                      "value": "",
                      "type": "string"
                    },
                    {
                      "display_name": "Send Uncaught Exceptions to GA (Mobile)",
                      "value": false,
                      "type": "boolean",
                      "name": "{{destination_name}}/config/reportUncaughtExceptions"
                    },
                    {
                      "name": "{{destination_name}}/config/siteSpeedSampleRate",
                      "display_name": "Site Speed Sample Rate",
                      "value": 1,
                      "type": "number"
                    },
                    {
                      "name": "{{destination_name}}/config/contentGroupings",
                      "display_name": "Content Groupings",
                      "type": "map"
                    },
                    {
                      "name": "{{destination_name}}/config/serversideClassic",
                      "display_name": "Use Classic Analytics for Your Serverside Tracking",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/trackCategorizedPages",
                      "display_name": "Track Categorized Pages",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "type": "map",
                      "name": "{{destination_name}}/config/dimensions",
                      "display_name": "Custom Dimensions",
                      "value": {
                        "User Type": "dimension1",
                        "Gender": "dimension2"
                      }
                    },
                    {
                      "name": "{{destination_name}}/config/identifyCategory",
                      "display_name": "Server Side Identify Event Category",
                      "value": "",
                      "type": "string"
                    },
                    {
                      "name": "{{destination_name}}/config/nonInteraction",
                      "display_name": "Add the non-interaction flag to all events",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/useGoogleAmpClientId",
                      "display_name": "Use Google AMP Client ID",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/anonymizeIp",
                      "display_name": "Anonymize IP Addresses",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/includeSearch",
                      "display_name": "Include the Querystring in Page Views",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/enableServerIdentify",
                      "display_name": "Enable Server Side Identify",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/metrics",
                      "display_name": "Custom Metrics",
                      "type": "map"
                    },
                    {
                      "display_name": "Mobile Tracking ID",
                      "value": "",
                      "type": "string",
                      "name": "{{destination_name}}/config/mobileTrackingId"
                    },
                    {
                      "name": "{{destination_name}}/config/nameTracker",
                      "display_name": "Name Tracker",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/setAllMappedProps",
                      "display_name": "Set Custom Dimensions & Metrics to the Page",
                      "value": true,
                      "type": "boolean"
                    }
                  ],
                  "create_time": "2018-10-17T21:24:06.853Z",
                  "update_time": "2018-10-17T21:24:06.853Z"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Destinations"
        ],
        "summary": "List Destinations",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "source_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Wed, 17 Oct 2018 21:37:35 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "6719"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "498"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "destinations": [
                    {
                      "name": "{{destination_name}}",
                      "parent": "{{source_name}}",
                      "display_name": "Google Analytics",
                      "enabled": true,
                      "connection_mode": "CLOUD",
                      "config": [
                        {
                          "name": "{{destination_name}}/config/domain",
                          "display_name": "Cookie Domain Name",
                          "value": "",
                          "type": "string"
                        },
                        {
                          "name": "{{destination_name}}/config/metrics",
                          "display_name": "Custom Metrics",
                          "type": "map"
                        },
                        {
                          "name": "{{destination_name}}/config/anonymizeIp",
                          "display_name": "Anonymize IP Addresses",
                          "value": false,
                          "type": "boolean"
                        },
                        {
                          "name": "{{destination_name}}/config/includeSearch",
                          "display_name": "Include the Querystring in Page Views",
                          "value": false,
                          "type": "boolean"
                        },
                        {
                          "name": "{{destination_name}}/config/identifyEventName",
                          "display_name": "Server Side Identify Event Action",
                          "value": "",
                          "type": "string"
                        },
                        {
                          "name": "{{destination_name}}/config/optimize",
                          "display_name": "Optimize Container ID",
                          "value": "",
                          "type": "string"
                        },
                        {
                          "value": true,
                          "type": "boolean",
                          "name": "{{destination_name}}/config/setAllMappedProps",
                          "display_name": "Set Custom Dimensions & Metrics to the Page"
                        },
                        {
                          "display_name": "Remarketing, Display Ads and Demographic Reports.",
                          "value": false,
                          "type": "boolean",
                          "name": "{{destination_name}}/config/doubleClick"
                        },
                        {
                          "name": "{{destination_name}}/config/contentGroupings",
                          "display_name": "Content Groupings",
                          "type": "map"
                        },
                        {
                          "name": "{{destination_name}}/config/enhancedLinkAttribution",
                          "display_name": "Enable Enhanced Link Attribution",
                          "value": false,
                          "type": "boolean"
                        },
                        {
                          "name": "{{destination_name}}/config/sendUserId",
                          "display_name": "Send User-ID to GA",
                          "value": false,
                          "type": "boolean"
                        },
                        {
                          "type": "boolean",
                          "name": "{{destination_name}}/config/nameTracker",
                          "display_name": "Name Tracker",
                          "value": false
                        },
                        {
                          "name": "{{destination_name}}/config/nonInteraction",
                          "display_name": "Add the non-interaction flag to all events",
                          "value": false,
                          "type": "boolean"
                        },
                        {
                          "type": "string",
                          "name": "{{destination_name}}/config/identifyCategory",
                          "display_name": "Server Side Identify Event Category",
                          "value": ""
                        },
                        {
                          "name": "{{destination_name}}/config/enhancedEcommerce",
                          "display_name": "Enable Enhanced Ecommerce",
                          "value": false,
                          "type": "boolean"
                        },
                        {
                          "value": true,
                          "type": "boolean",
                          "name": "{{destination_name}}/config/trackCategorizedPages",
                          "display_name": "Track Categorized Pages"
                        },
                        {
                          "name": "{{destination_name}}/config/dimensions",
                          "display_name": "Custom Dimensions",
                          "value": {
                            "User Type": "dimension1",
                            "Gender": "dimension2"
                          },
                          "type": "map"
                        },
                        {
                          "name": "{{destination_name}}/config/mobileTrackingId",
                          "display_name": "Mobile Tracking ID",
                          "value": "",
                          "type": "string"
                        },
                        {
                          "value": "",
                          "type": "string",
                          "name": "{{destination_name}}/config/serversideTrackingId",
                          "display_name": "Serverside Tracking ID"
                        },
                        {
                          "name": "{{destination_name}}/config/trackingId",
                          "display_name": "Website Tracking ID",
                          "value": "UA-970334309-1",
                          "type": "string"
                        },
                        {
                          "name": "{{destination_name}}/config/trackNamedPages",
                          "display_name": "Track Named Pages",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "name": "{{destination_name}}/config/siteSpeedSampleRate",
                          "display_name": "Site Speed Sample Rate",
                          "value": 1,
                          "type": "number"
                        },
                        {
                          "value": true,
                          "type": "boolean",
                          "name": "{{destination_name}}/config/enableServerIdentify",
                          "display_name": "Enable Server Side Identify"
                        },
                        {
                          "name": "{{destination_name}}/config/classic",
                          "display_name": "Use Classic Analytics on Your Site",
                          "value": false,
                          "type": "boolean"
                        },
                        {
                          "name": "{{destination_name}}/config/sampleRate",
                          "display_name": "Sample Rate",
                          "value": 100,
                          "type": "number"
                        },
                        {
                          "name": "{{destination_name}}/config/ignoredReferrers",
                          "display_name": "Ignored Referrers",
                          "type": "multi-line-string"
                        },
                        {
                          "name": "{{destination_name}}/config/protocolMappings",
                          "display_name": "Map Traits or Properties to Measurement Protocol Params",
                          "type": "map"
                        },
                        {
                          "display_name": "Use Classic Analytics for Your Serverside Tracking",
                          "value": false,
                          "type": "boolean",
                          "name": "{{destination_name}}/config/serversideClassic"
                        },
                        {
                          "display_name": "Send Uncaught Exceptions to GA (Mobile)",
                          "value": false,
                          "type": "boolean",
                          "name": "{{destination_name}}/config/reportUncaughtExceptions"
                        },
                        {
                          "value": false,
                          "type": "boolean",
                          "name": "{{destination_name}}/config/useGoogleAmpClientId",
                          "display_name": "Use Google AMP Client ID"
                        }
                      ],
                      "create_time": "2018-10-17T21:24:06.853Z",
                      "update_time": "2018-10-17T21:31:09.582Z"
                    }
                  ],
                  "next_page_token": ""
                }
              }
            }
          }
        }
      }
    },
    "/{version}/{destination_name}": {
      "get": {
        "tags": [
          "Destinations"
        ],
        "summary": "Get Destination",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "destination_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n    \"name\": \"{{destination_name}}\",\n    \"parent\": \"{{source_name}}\",\n    \"display_name\": \"Google Analytics\",\n    \"enabled\": false,\n    \"config\": [\n        {\n            \"name\": \"{{destination_name}}/config/identifyEventName\",\n            \"display_name\": \"Server Side Identify Event Action\",\n            \"value\": \"\",\n            \"type\": \"string\"\n        },\n        {\n            \"display_name\": \"Ignored Referrers\",\n            \"type\": \"multi-line-string\",\n            \"name\": \"{{destination_name}}/config/ignoredReferrers\"\n        },\n        {\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/trackNamedPages\",\n            \"display_name\": \"Track Named Pages\",\n            \"value\": true\n        },\n        {\n            \"name\": \"{{destination_name}}/config/trackingId\",\n            \"display_name\": \"Website Tracking ID\",\n            \"value\": \"UA-970334309-1\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/classic\",\n            \"display_name\": \"Use Classic Analytics on Your Site\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/doubleClick\",\n            \"display_name\": \"Remarketing, Display Ads and Demographic Reports.\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"value\": false,\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/enhancedEcommerce\",\n            \"display_name\": \"Enable Enhanced Ecommerce\"\n        },\n        {\n            \"value\": \"\",\n            \"type\": \"string\",\n            \"name\": \"{{destination_name}}/config/serversideTrackingId\",\n            \"display_name\": \"Serverside Tracking ID\"\n        },\n        {\n            \"display_name\": \"Enable Enhanced Link Attribution\",\n            \"value\": false,\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/enhancedLinkAttribution\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/optimize\",\n            \"display_name\": \"Optimize Container ID\",\n            \"value\": \"\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/protocolMappings\",\n            \"display_name\": \"Map Traits or Properties to Measurement Protocol Params\",\n            \"type\": \"map\"\n        },\n        {\n            \"display_name\": \"Sample Rate\",\n            \"value\": 100,\n            \"type\": \"number\",\n            \"name\": \"{{destination_name}}/config/sampleRate\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/sendUserId\",\n            \"display_name\": \"Send User-ID to GA\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/domain\",\n            \"display_name\": \"Cookie Domain Name\",\n            \"value\": \"\",\n            \"type\": \"string\"\n        },\n        {\n            \"display_name\": \"Send Uncaught Exceptions to GA (Mobile)\",\n            \"value\": false,\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/reportUncaughtExceptions\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/siteSpeedSampleRate\",\n            \"display_name\": \"Site Speed Sample Rate\",\n            \"value\": 1,\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/contentGroupings\",\n            \"display_name\": \"Content Groupings\",\n            \"type\": \"map\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/serversideClassic\",\n            \"display_name\": \"Use Classic Analytics for Your Serverside Tracking\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/trackCategorizedPages\",\n            \"display_name\": \"Track Categorized Pages\",\n            \"value\": true,\n            \"type\": \"boolean\"\n        },\n        {\n            \"type\": \"map\",\n            \"name\": \"{{destination_name}}/config/dimensions\",\n            \"display_name\": \"Custom Dimensions\",\n            \"value\": {\n                \"User Type\": \"dimension1\",\n                \"Gender\": \"dimension2\"\n            }\n        },\n        {\n            \"name\": \"{{destination_name}}/config/identifyCategory\",\n            \"display_name\": \"Server Side Identify Event Category\",\n            \"value\": \"\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/nonInteraction\",\n            \"display_name\": \"Add the non-interaction flag to all events\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/useGoogleAmpClientId\",\n            \"display_name\": \"Use Google AMP Client ID\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/anonymizeIp\",\n            \"display_name\": \"Anonymize IP Addresses\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/includeSearch\",\n            \"display_name\": \"Include the Querystring in Page Views\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/enableServerIdentify\",\n            \"display_name\": \"Enable Server Side Identify\",\n            \"value\": true,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/metrics\",\n            \"display_name\": \"Custom Metrics\",\n            \"type\": \"map\"\n        },\n        {\n            \"display_name\": \"Mobile Tracking ID\",\n            \"value\": \"\",\n            \"type\": \"string\",\n            \"name\": \"{{destination_name}}/config/mobileTrackingId\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/nameTracker\",\n            \"display_name\": \"Name Tracker\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/setAllMappedProps\",\n            \"display_name\": \"Set Custom Dimensions & Metrics to the Page\",\n            \"value\": true,\n            \"type\": \"boolean\"\n        }\n    ],\n    \"create_time\": \"2018-10-17T21:24:06.853Z\",\n    \"update_time\": \"2018-10-17T21:24:06.853Z\"\n}"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Destinations"
        ],
        "summary": "Update Destination",
        "description": "Note:\n\nIf you attempt to update read-only settings for your destination you'll encounter the following behavior:\n\n- If only read-only properties are being updated, the endpoint will return an HTTP 400 error.\n\n- If there's a mix of writable and read-only properties in the payload, the request will be accepted, the writable properties will be updated and the read-only properties ignored.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "destination": {
                    "enabled": true,
                    "config": [
                      {
                        "name": "workspaces/myworkspace/sources/js/destinations/google-analytics/config/enableServerIdentify",
                        "type": "boolean",
                        "value": true
                      }
                    ]
                  },
                  "update_mask": {
                    "paths": [
                      "destination.config",
                      "destination.enabled"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "destination_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Wed, 17 Oct 2018 21:31:09 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "6289"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "247"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "{{destination_name}}",
                  "parent": "{{source_name}}",
                  "display_name": "Google Analytics",
                  "enabled": true,
                  "connection_mode": "CLOUD",
                  "config": [
                    {
                      "name": "{{destination_name}}/config/siteSpeedSampleRate",
                      "display_name": "Site Speed Sample Rate",
                      "value": 1,
                      "type": "number"
                    },
                    {
                      "name": "{{destination_name}}/config/enhancedLinkAttribution",
                      "display_name": "Enable Enhanced Link Attribution",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/sendUserId",
                      "display_name": "Send User-ID to GA",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/metrics",
                      "display_name": "Custom Metrics",
                      "type": "map"
                    },
                    {
                      "type": "boolean",
                      "name": "{{destination_name}}/config/nameTracker",
                      "display_name": "Name Tracker",
                      "value": false
                    },
                    {
                      "display_name": "Serverside Tracking ID",
                      "value": "",
                      "type": "string",
                      "name": "{{destination_name}}/config/serversideTrackingId"
                    },
                    {
                      "name": "{{destination_name}}/config/trackingId",
                      "display_name": "Website Tracking ID",
                      "value": "UA-970334309-1",
                      "type": "string"
                    },
                    {
                      "name": "{{destination_name}}/config/dimensions",
                      "display_name": "Custom Dimensions",
                      "value": {
                        "User Type": "dimension1",
                        "Gender": "dimension2"
                      },
                      "type": "map"
                    },
                    {
                      "type": "boolean",
                      "name": "{{destination_name}}/config/classic",
                      "display_name": "Use Classic Analytics on Your Site",
                      "value": false
                    },
                    {
                      "name": "{{destination_name}}/config/domain",
                      "display_name": "Cookie Domain Name",
                      "value": "",
                      "type": "string"
                    },
                    {
                      "name": "{{destination_name}}/config/doubleClick",
                      "display_name": "Remarketing, Display Ads and Demographic Reports.",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/ignoredReferrers",
                      "display_name": "Ignored Referrers",
                      "type": "multi-line-string"
                    },
                    {
                      "name": "{{destination_name}}/config/reportUncaughtExceptions",
                      "display_name": "Send Uncaught Exceptions to GA (Mobile)",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "value": false,
                      "type": "boolean",
                      "name": "{{destination_name}}/config/serversideClassic",
                      "display_name": "Use Classic Analytics for Your Serverside Tracking"
                    },
                    {
                      "name": "{{destination_name}}/config/anonymizeIp",
                      "display_name": "Anonymize IP Addresses",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/identifyCategory",
                      "display_name": "Server Side Identify Event Category",
                      "value": "",
                      "type": "string"
                    },
                    {
                      "name": "{{destination_name}}/config/nonInteraction",
                      "display_name": "Add the non-interaction flag to all events",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/enhancedEcommerce",
                      "display_name": "Enable Enhanced Ecommerce",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/enableServerIdentify",
                      "display_name": "Enable Server Side Identify",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "name": "{{destination_name}}/config/identifyEventName",
                      "display_name": "Server Side Identify Event Action",
                      "value": "",
                      "type": "string"
                    },
                    {
                      "value": true,
                      "type": "boolean",
                      "name": "{{destination_name}}/config/setAllMappedProps",
                      "display_name": "Set Custom Dimensions & Metrics to the Page"
                    },
                    {
                      "display_name": "Track Named Pages",
                      "value": true,
                      "type": "boolean",
                      "name": "{{destination_name}}/config/trackNamedPages"
                    },
                    {
                      "type": "map",
                      "name": "{{destination_name}}/config/contentGroupings",
                      "display_name": "Content Groupings"
                    },
                    {
                      "value": "",
                      "type": "string",
                      "name": "{{destination_name}}/config/optimize",
                      "display_name": "Optimize Container ID"
                    },
                    {
                      "display_name": "Track Categorized Pages",
                      "value": true,
                      "type": "boolean",
                      "name": "{{destination_name}}/config/trackCategorizedPages"
                    },
                    {
                      "display_name": "Include the Querystring in Page Views",
                      "value": false,
                      "type": "boolean",
                      "name": "{{destination_name}}/config/includeSearch"
                    },
                    {
                      "name": "{{destination_name}}/config/protocolMappings",
                      "display_name": "Map Traits or Properties to Measurement Protocol Params",
                      "type": "map"
                    },
                    {
                      "name": "{{destination_name}}/config/sampleRate",
                      "display_name": "Sample Rate",
                      "value": 100,
                      "type": "number"
                    },
                    {
                      "type": "boolean",
                      "name": "{{destination_name}}/config/useGoogleAmpClientId",
                      "display_name": "Use Google AMP Client ID",
                      "value": false
                    },
                    {
                      "type": "string",
                      "name": "{{destination_name}}/config/mobileTrackingId",
                      "display_name": "Mobile Tracking ID",
                      "value": ""
                    }
                  ],
                  "create_time": "2018-10-17T21:24:06.853Z",
                  "update_time": "2018-10-17T21:31:09.582Z"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Destinations"
        ],
        "summary": "Delete Destination",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "destination_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:32:34 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "834"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "55"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/{version}/{destination_config_name}": {
      "get": {
        "tags": [
          "Destinations"
        ],
        "summary": "Get Destination By ConfigID",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "destination_config_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n    \"name\": \"{{destination_name}}\",\n    \"parent\": \"{{source_name}}\",\n    \"display_name\": \"Google Analytics\",\n    \"enabled\": false,\n    \"config\": [\n        {\n            \"name\": \"{{destination_name}}/config/identifyEventName\",\n            \"display_name\": \"Server Side Identify Event Action\",\n            \"value\": \"\",\n            \"type\": \"string\"\n        },\n        {\n            \"display_name\": \"Ignored Referrers\",\n            \"type\": \"multi-line-string\",\n            \"name\": \"{{destination_name}}/config/ignoredReferrers\"\n        },\n        {\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/trackNamedPages\",\n            \"display_name\": \"Track Named Pages\",\n            \"value\": true\n        },\n        {\n            \"name\": \"{{destination_name}}/config/trackingId\",\n            \"display_name\": \"Website Tracking ID\",\n            \"value\": \"UA-970334309-1\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/classic\",\n            \"display_name\": \"Use Classic Analytics on Your Site\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/doubleClick\",\n            \"display_name\": \"Remarketing, Display Ads and Demographic Reports.\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"value\": false,\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/enhancedEcommerce\",\n            \"display_name\": \"Enable Enhanced Ecommerce\"\n        },\n        {\n            \"value\": \"\",\n            \"type\": \"string\",\n            \"name\": \"{{destination_name}}/config/serversideTrackingId\",\n            \"display_name\": \"Serverside Tracking ID\"\n        },\n        {\n            \"display_name\": \"Enable Enhanced Link Attribution\",\n            \"value\": false,\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/enhancedLinkAttribution\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/optimize\",\n            \"display_name\": \"Optimize Container ID\",\n            \"value\": \"\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/protocolMappings\",\n            \"display_name\": \"Map Traits or Properties to Measurement Protocol Params\",\n            \"type\": \"map\"\n        },\n        {\n            \"display_name\": \"Sample Rate\",\n            \"value\": 100,\n            \"type\": \"number\",\n            \"name\": \"{{destination_name}}/config/sampleRate\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/sendUserId\",\n            \"display_name\": \"Send User-ID to GA\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/domain\",\n            \"display_name\": \"Cookie Domain Name\",\n            \"value\": \"\",\n            \"type\": \"string\"\n        },\n        {\n            \"display_name\": \"Send Uncaught Exceptions to GA (Mobile)\",\n            \"value\": false,\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/reportUncaughtExceptions\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/siteSpeedSampleRate\",\n            \"display_name\": \"Site Speed Sample Rate\",\n            \"value\": 1,\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/contentGroupings\",\n            \"display_name\": \"Content Groupings\",\n            \"type\": \"map\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/serversideClassic\",\n            \"display_name\": \"Use Classic Analytics for Your Serverside Tracking\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/trackCategorizedPages\",\n            \"display_name\": \"Track Categorized Pages\",\n            \"value\": true,\n            \"type\": \"boolean\"\n        },\n        {\n            \"type\": \"map\",\n            \"name\": \"{{destination_name}}/config/dimensions\",\n            \"display_name\": \"Custom Dimensions\",\n            \"value\": {\n                \"User Type\": \"dimension1\",\n                \"Gender\": \"dimension2\"\n            }\n        },\n        {\n            \"name\": \"{{destination_name}}/config/identifyCategory\",\n            \"display_name\": \"Server Side Identify Event Category\",\n            \"value\": \"\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/nonInteraction\",\n            \"display_name\": \"Add the non-interaction flag to all events\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/useGoogleAmpClientId\",\n            \"display_name\": \"Use Google AMP Client ID\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/anonymizeIp\",\n            \"display_name\": \"Anonymize IP Addresses\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/includeSearch\",\n            \"display_name\": \"Include the Querystring in Page Views\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/enableServerIdentify\",\n            \"display_name\": \"Enable Server Side Identify\",\n            \"value\": true,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/metrics\",\n            \"display_name\": \"Custom Metrics\",\n            \"type\": \"map\"\n        },\n        {\n            \"display_name\": \"Mobile Tracking ID\",\n            \"value\": \"\",\n            \"type\": \"string\",\n            \"name\": \"{{destination_name}}/config/mobileTrackingId\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/nameTracker\",\n            \"display_name\": \"Name Tracker\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/setAllMappedProps\",\n            \"display_name\": \"Set Custom Dimensions & Metrics to the Page\",\n            \"value\": true,\n            \"type\": \"boolean\"\n        }\n    ],\n    \"create_time\": \"2018-10-17T21:24:06.853Z\",\n    \"update_time\": \"2018-10-17T21:24:06.853Z\"\n}"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Destinations"
        ],
        "summary": "Update Destination By ConfigID",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "destination_config_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n    \"name\": \"{{destination_name}}\",\n    \"parent\": \"{{source_name}}\",\n    \"display_name\": \"Google Analytics\",\n    \"enabled\": true,\n    \"connection_mode\": \"CLOUD\",\n    \"config\": [\n        {\n            \"name\": \"{{destination_name}}/config/siteSpeedSampleRate\",\n            \"display_name\": \"Site Speed Sample Rate\",\n            \"value\": 1,\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/enhancedLinkAttribution\",\n            \"display_name\": \"Enable Enhanced Link Attribution\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/sendUserId\",\n            \"display_name\": \"Send User-ID to GA\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/metrics\",\n            \"display_name\": \"Custom Metrics\",\n            \"type\": \"map\"\n        },\n        {\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/nameTracker\",\n            \"display_name\": \"Name Tracker\",\n            \"value\": false\n        },\n        {\n            \"display_name\": \"Serverside Tracking ID\",\n            \"value\": \"\",\n            \"type\": \"string\",\n            \"name\": \"{{destination_name}}/config/serversideTrackingId\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/trackingId\",\n            \"display_name\": \"Website Tracking ID\",\n            \"value\": \"UA-970334309-1\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/dimensions\",\n            \"display_name\": \"Custom Dimensions\",\n            \"value\": {\n                \"User Type\": \"dimension1\",\n                \"Gender\": \"dimension2\"\n            },\n            \"type\": \"map\"\n        },\n        {\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/classic\",\n            \"display_name\": \"Use Classic Analytics on Your Site\",\n            \"value\": false\n        },\n        {\n            \"name\": \"{{destination_name}}/config/domain\",\n            \"display_name\": \"Cookie Domain Name\",\n            \"value\": \"\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/doubleClick\",\n            \"display_name\": \"Remarketing, Display Ads and Demographic Reports.\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/ignoredReferrers\",\n            \"display_name\": \"Ignored Referrers\",\n            \"type\": \"multi-line-string\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/reportUncaughtExceptions\",\n            \"display_name\": \"Send Uncaught Exceptions to GA (Mobile)\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"value\": false,\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/serversideClassic\",\n            \"display_name\": \"Use Classic Analytics for Your Serverside Tracking\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/anonymizeIp\",\n            \"display_name\": \"Anonymize IP Addresses\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/identifyCategory\",\n            \"display_name\": \"Server Side Identify Event Category\",\n            \"value\": \"\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/nonInteraction\",\n            \"display_name\": \"Add the non-interaction flag to all events\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/enhancedEcommerce\",\n            \"display_name\": \"Enable Enhanced Ecommerce\",\n            \"value\": false,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/enableServerIdentify\",\n            \"display_name\": \"Enable Server Side Identify\",\n            \"value\": true,\n            \"type\": \"boolean\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/identifyEventName\",\n            \"display_name\": \"Server Side Identify Event Action\",\n            \"value\": \"\",\n            \"type\": \"string\"\n        },\n        {\n            \"value\": true,\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/setAllMappedProps\",\n            \"display_name\": \"Set Custom Dimensions & Metrics to the Page\"\n        },\n        {\n            \"display_name\": \"Track Named Pages\",\n            \"value\": true,\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/trackNamedPages\"\n        },\n        {\n            \"type\": \"map\",\n            \"name\": \"{{destination_name}}/config/contentGroupings\",\n            \"display_name\": \"Content Groupings\"\n        },\n        {\n            \"value\": \"\",\n            \"type\": \"string\",\n            \"name\": \"{{destination_name}}/config/optimize\",\n            \"display_name\": \"Optimize Container ID\"\n        },\n        {\n            \"display_name\": \"Track Categorized Pages\",\n            \"value\": true,\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/trackCategorizedPages\"\n        },\n        {\n            \"display_name\": \"Include the Querystring in Page Views\",\n            \"value\": false,\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/includeSearch\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/protocolMappings\",\n            \"display_name\": \"Map Traits or Properties to Measurement Protocol Params\",\n            \"type\": \"map\"\n        },\n        {\n            \"name\": \"{{destination_name}}/config/sampleRate\",\n            \"display_name\": \"Sample Rate\",\n            \"value\": 100,\n            \"type\": \"number\"\n        },\n        {\n            \"type\": \"boolean\",\n            \"name\": \"{{destination_name}}/config/useGoogleAmpClientId\",\n            \"display_name\": \"Use Google AMP Client ID\",\n            \"value\": false\n        },\n        {\n            \"type\": \"string\",\n            \"name\": \"{{destination_name}}/config/mobileTrackingId\",\n            \"display_name\": \"Mobile Tracking ID\",\n            \"value\": \"\"\n        }\n    ],\n    \"create_time\": \"2018-10-17T21:24:06.853Z\",\n    \"update_time\": \"2018-10-17T21:31:09.582Z\"\n}"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Destinations"
        ],
        "summary": "Delete Destination By ConfigID",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "destination_config_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:32:34 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "834"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "55"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/v1beta/{workspace_name}/tracking-plans/": {
      "post": {
        "tags": [
          "Tracking Plans"
        ],
        "summary": "Create Tracking Plan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "tracking_plan": {
                    "display_name": "Kicks App",
                    "rules": {
                      "global": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "context": {
                            "type": "object",
                            "properties": {
                              "librarry": {
                                "type": [
                                  "object"
                                ]
                              }
                            },
                            "required": [
                              "library"
                            ]
                          },
                          "properties": {},
                          "traits": {}
                        }
                      },
                      "events": [
                        {
                          "name": "Order Completed",
                          "description": "Who bought what",
                          "rules": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "context": {},
                              "properties": {
                                "type": "object",
                                "properties": {
                                  "product": {
                                    "type": [
                                      "string"
                                    ]
                                  },
                                  "price": {
                                    "type": [
                                      "number"
                                    ]
                                  },
                                  "amount": {
                                    "type": [
                                      "number"
                                    ]
                                  }
                                },
                                "required": [
                                  "product",
                                  "price",
                                  "amount"
                                ]
                              },
                              "traits": {}
                            }
                          }
                        }
                      ],
                      "identify": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "context": {},
                          "properties": {},
                          "traits": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": [
                                  "string"
                                ]
                              },
                              "age": {
                                "type": [
                                  "number"
                                ]
                              },
                              "occupation": {
                                "type": [
                                  "string"
                                ]
                              }
                            },
                            "required": [
                              "name"
                            ]
                          }
                        }
                      },
                      "group": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "context": {},
                          "properties": {},
                          "traits": {
                            "type": "object",
                            "properties": {
                              "company": {
                                "type": [
                                  "object"
                                ]
                              }
                            },
                            "required": [
                              "company"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Wed, 17 Oct 2018 22:48:11 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "845"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "110"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "tracking_plan": {
                    "display_name": "Kicks App",
                    "rules": {
                      "global": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "context": {
                            "type": "object",
                            "properties": {
                              "librarry": {
                                "type": [
                                  "object"
                                ]
                              }
                            },
                            "required": [
                              "library"
                            ]
                          },
                          "properties": {},
                          "traits": {}
                        }
                      },
                      "events": [
                        {
                          "name": "Order Completed",
                          "version": 1,
                          "description": "Who bought what",
                          "rules": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "context": {},
                              "properties": {
                                "type": "object",
                                "properties": {
                                  "product": {
                                    "type": [
                                      "string"
                                    ]
                                  },
                                  "price": {
                                    "type": [
                                      "number"
                                    ]
                                  },
                                  "amount": {
                                    "type": [
                                      "number"
                                    ]
                                  }
                                },
                                "required": [
                                  "product",
                                  "price",
                                  "amount"
                                ]
                              },
                              "traits": {}
                            }
                          }
                        }
                      ],
                      "identify": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "context": {},
                          "properties": {},
                          "traits": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": [
                                  "string"
                                ]
                              },
                              "age": {
                                "type": [
                                  "number"
                                ]
                              },
                              "occupation": {
                                "type": [
                                  "string"
                                ]
                              }
                            },
                            "required": [
                              "name"
                            ]
                          }
                        }
                      },
                      "group": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "context": {},
                          "properties": {},
                          "traits": {
                            "type": "object",
                            "properties": {
                              "company": {
                                "type": [
                                  "object"
                                ]
                              }
                            },
                            "required": [
                              "company"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tracking Plans"
        ],
        "summary": "List Tracking Plans",
        "description": "Note: does not currently support pagination.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 30 Oct 2018 21:41:09 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "119"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "8"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "tracking_plans": [
                    {
                      "name": "{{tracking_plan_name}}",
                      "display_name": "Kicks App",
                      "rules": {
                        "identify_traits": [],
                        "group_traits": [],
                        "events": []
                      },
                      "create_time": "2019-02-05T00:28:31Z",
                      "update_time": "2019-02-05T00:28:31Z"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1beta/{tracking_plan_name}": {
      "get": {
        "tags": [
          "Tracking Plans"
        ],
        "summary": "Get Tracking Plan",
        "description": "It is expected that a tracking plan that includes a `null` enum value as a property field will denote that value as a string (\"null\"). See documented `Get Tracking Plan With Null Enum` call, and documented `Update Tracking Plan With Null Enum` calls for examples.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "tracking_plan_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 30 Oct 2018 21:41:09 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "119"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "8"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "{{tracking_plan_name}}",
                  "display_name": "Kicks App",
                  "rules": {
                    "identify_traits": [],
                    "group_traits": [],
                    "events": [
                      {
                        "name": "Order Completed",
                        "description": "Who bought what",
                        "version": 1,
                        "rules": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "object",
                          "properties": {
                            "context": {},
                            "traits": {},
                            "properties": {
                              "required": [
                                "product",
                                "price",
                                "amount"
                              ],
                              "type": "object",
                              "properties": {
                                "product": {
                                  "type": [
                                    "string"
                                  ]
                                },
                                "amount": {
                                  "type": [
                                    "number"
                                  ]
                                },
                                "price": {
                                  "type": [
                                    "number"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    ],
                    "global": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                        "context": {
                          "required": [
                            "library"
                          ],
                          "type": "object",
                          "properties": {
                            "librarry": {
                              "type": [
                                "object"
                              ]
                            }
                          }
                        },
                        "traits": {},
                        "properties": {}
                      }
                    },
                    "identify": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                        "traits": {
                          "type": "object",
                          "properties": {
                            "occupation": {
                              "type": [
                                "string"
                              ]
                            },
                            "age": {
                              "type": [
                                "number"
                              ]
                            },
                            "name": {
                              "type": [
                                "string"
                              ]
                            }
                          },
                          "required": [
                            "name"
                          ]
                        },
                        "properties": {},
                        "context": {}
                      }
                    },
                    "group": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                        "properties": {},
                        "context": {},
                        "traits": {
                          "properties": {
                            "company": {
                              "type": [
                                "object"
                              ]
                            }
                          },
                          "required": [
                            "company"
                          ],
                          "type": "object"
                        }
                      }
                    }
                  },
                  "create_time": "2019-02-05T01:21:25Z",
                  "update_time": "2019-02-05T01:21:25Z"
                }
              }
            }
          },
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"name\": \"workspaces/business/tracking-plans/rs_1bxb4RSGi54Poxe5naPiiqswDXE\",\n  \"display_name\": \"Kicks App\",\n  \"rules\": {\n    \"identify_traits\": [],\n    \"group_traits\": [],\n    \"events\": [\n      {\n        \"name\": \"New Event\",\n        \"rules\": {\n          \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n          \"properties\": {\n            \"context\": {\n              \"type\": \"object\"\n            },\n            \"properties\": {\n              \"properties\": {\n                \"item_description\": {\n                  \"description\": \"\",\n                  \"type\": [\n                    \"string\",\n                    \"null\"\n                  ]\n                },\n                \"item_name\": {\n                  \"description\": \"\",\n                  \"enum\": [\n                    \"null\"\n                  ],\n                  \"type\": [\n                    \"string\",\n                    \"null\"\n                  ]\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"traits\": {\n              \"type\": \"object\"\n            }\n          },\n          \"type\": \"object\"\n        },\n        \"version\": 1\n      }\n    ],\n    \"global\": {\n      \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n      \"properties\": {\n        \"context\": {\n          \"type\": \"object\"\n        },\n        \"properties\": {\n          \"type\": \"object\"\n        },\n        \"traits\": {\n          \"type\": \"object\"\n        }\n      },\n      \"type\": \"object\"\n    },\n    \"identify\": null,\n    \"group\": null\n  },\n  \"create_time\": \"2020-05-15T21:01:39Z\",\n  \"update_time\": \"2020-06-30T19:29:26Z\"\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tracking Plans"
        ],
        "summary": "Update Tracking Plan",
        "description": "To update a tracking plan field, include it in `update_mask.paths`. For example, if `tracking_plan.rules` is included in the paths array, existing rules will be replaced by rules specified in the request body. **If a field is listed in the paths array, but is not included in the request body, it will be overwritten with an empty object.** \n\nIt is expected that including a `null` enum value as a property field will return a tracking plan that denotes that value as a string (\"null\"). See documented example call.\n\nDepending on the size of the tracking plan, the returned payload might not include the updated events. Use the GET endpoint or the UI instead.\n\nEmojis are not currently supported in tracking plan JSON schemas.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "update_mask": {
                    "paths": [
                      "tracking_plan.display_name",
                      "tracking_plan.rules"
                    ]
                  },
                  "tracking_plan": {
                    "display_name": "Kicks App - Updated",
                    "rules": {
                      "global": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "context": {
                            "type": "object",
                            "properties": {
                              "userAgent": {}
                            },
                            "required": [
                              "userAgent"
                            ]
                          }
                        },
                        "required": [
                          "context"
                        ]
                      },
                      "events": [
                        {
                          "name": "Product Viewed",
                          "description": "Who checked out what",
                          "rules": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "properties": {
                                "type": "object",
                                "properties": {
                                  "product": {
                                    "type": [
                                      "string"
                                    ]
                                  }
                                },
                                "required": [
                                  "product"
                                ]
                              }
                            },
                            "required": [
                              "properties"
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "tracking_plan_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Wed, 17 Oct 2018 23:04:33 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "1419"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "108"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "{{tracking_plan_name}}",
                  "display_name": "Kicks App - Updated",
                  "rules": {
                    "identify_traits": [],
                    "group_traits": [],
                    "events": [
                      {
                        "name": "Product Viewed",
                        "version": 1,
                        "description": "Who checked out what",
                        "rules": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "object",
                          "properties": {
                            "traits": {},
                            "properties": {
                              "type": "object",
                              "properties": {
                                "product": {
                                  "type": [
                                    "string"
                                  ]
                                }
                              },
                              "required": [
                                "product"
                              ]
                            },
                            "context": {}
                          },
                          "required": [
                            "properties"
                          ]
                        }
                      }
                    ],
                    "global": {
                      "required": [
                        "context"
                      ],
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                        "context": {
                          "type": "object",
                          "properties": {
                            "userAgent": {}
                          },
                          "required": [
                            "userAgent"
                          ]
                        },
                        "traits": {},
                        "properties": {}
                      }
                    }
                  },
                  "create_time": "2019-02-05T00:28:31Z",
                  "update_time": "2019-02-05T00:32:15Z"
                }
              }
            }
          },
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"name\": \"workspaces/business/tracking-plans/rs_1bxb4RSGi54Poxe5naPiiqswDXE\",\n  \"display_name\": \"Kicks App\",\n  \"rules\": {\n    \"identify_traits\": [],\n    \"group_traits\": [],\n    \"events\": [\n      {\n        \"name\": \"New Event\",\n        \"rules\": {\n          \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n          \"properties\": {\n            \"context\": {\n              \"type\": \"object\"\n            },\n            \"properties\": {\n              \"properties\": {\n                \"item_description\": {\n                  \"description\": \"\",\n                  \"type\": [\n                    \"string\",\n                    \"null\"\n                  ]\n                },\n                \"item_name\": {\n                  \"description\": \"\",\n                  \"enum\": [\n                    \"null\"\n                  ],\n                  \"type\": [\n                    \"string\",\n                    \"null\"\n                  ]\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"traits\": {\n              \"type\": \"object\"\n            }\n          },\n          \"type\": \"object\"\n        },\n        \"version\": 1\n      }\n    ],\n    \"global\": null,\n    \"identify\": null,\n    \"group\": null\n  },\n  \"create_time\": \"2020-05-15T21:01:39Z\",\n  \"update_time\": \"2020-06-30T19:33:59Z\"\n}"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tracking Plans"
        ],
        "summary": "Delete Tracking Plan",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "tracking_plan_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Wed, 17 Oct 2018 23:07:00 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "3"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "7"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/v1beta/{tracking_plan_name}/source-connections:batchCreateConnections": {
      "post": {
        "tags": [
          "Tracking Plans"
        ],
        "summary": "Batch Create Tracking Plan Source Connections",
        "description": "Connect existing sources to an existing tracking plan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "source_names": [
                    "{{source_name}}"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "tracking_plan_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 30 Oct 2018 21:27:15 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "3"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "41"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "connections": [
                    {
                      "source_name": "{{source_name}}",
                      "tracking_plan_id": "rs_1Gjkh9ZKmpyHjdSZYaLTXRRgCPp"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1beta/{tracking_plan_name}/source-connections": {
      "post": {
        "tags": [
          "Tracking Plans"
        ],
        "summary": "Create Tracking Plan Source Connection",
        "description": "Connect existing sources to an existing tracking plan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "source_name": "{{source_name}}"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "tracking_plan_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 30 Oct 2018 21:27:15 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "3"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "41"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "source_name": "{{source_name}}",
                  "tracking_plan_id": "rs_1Gjkh9ZKmpyHjdSZYaLTXRRgCPp"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tracking Plans"
        ],
        "summary": "List Tracking Plan Source Connections",
        "description": "List all sources connected to this tracking plan.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "tracking_plan_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 30 Oct 2018 21:41:09 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "119"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "8"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "connections": [
                    {
                      "source_name": "{{source_name}}",
                      "tracking_plan_id": "rs_1Gjkh9ZKmpyHjdSZYaLTXRRgCPp"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1beta/{tracking_plan_name}/source-connections/{source_slug}": {
      "delete": {
        "tags": [
          "Tracking Plans"
        ],
        "summary": "Delete Tracking Plan Source Connection",
        "description": "Remove a source from this tracking plan.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "tracking_plan_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "source_slug",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 30 Oct 2018 21:41:55 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "3"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "23"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/{version}/{destination_name}/metrics/successes": {
      "get": {
        "tags": [
          "Event Delivery Metrics"
        ],
        "summary": "Get Metric Timeseries",
        "description": "Get timeseries data for a specific metric for a source-destination pair. \n\nIf you have multi-instance destinations configured for your source you must send the destination configuration id of the instance you are fetching metric timeseries data for. An example request, List - Multi Destination Enabled, can be found in the Example requests dropdown. To find the destinationConfigurationId navigate to the destination overview page of the destination which you are querying metrics for in the Segment app. You can retieve the destinationConfigurationId from the URL where it is configured as \"instances/$destinationConfigurationId/configuration\".",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "destination_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/successes\",\n  \"granularity\": \"DAY\",\n  \"datapoints\": [\n    {\n      \"value\": 172615,\n      \"timestamp\": \"2019-01-20T00:00:00Z\"\n    },\n    {\n      \"value\": 170609,\n      \"timestamp\": \"2019-01-21T00:00:00Z\"\n    },\n    {\n      \"value\": 170668,\n      \"timestamp\": \"2019-01-22T00:00:00Z\"\n    },\n    {\n      \"value\": 170422,\n      \"timestamp\": \"2019-01-23T00:00:00Z\"\n    },\n    {\n      \"value\": 170519,\n      \"timestamp\": \"2019-01-24T00:00:00Z\"\n    },\n    {\n      \"value\": 166422,\n      \"timestamp\": \"2019-01-25T00:00:00Z\"\n    }\n  ],\n  \"start_time\": \"2019-01-20T00:00:00Z\",\n  \"end_time\": \"2019-01-25T00:00:00Z\"\n}"
              }
            }
          },
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/successes\",\n  \"granularity\": \"DAY\"\n  \"datapoints\": [\n    {\n      \"value\": 172615,\n      \"timestamp\": \"2019-01-20T00:00:00Z\"\n    },\n    {\n      \"value\": 170609,\n      \"timestamp\": \"2019-01-21T00:00:00Z\"\n    },\n    {\n      \"value\": 170668,\n      \"timestamp\": \"2019-01-22T00:00:00Z\"\n    },\n    {\n      \"value\": 170422,\n      \"timestamp\": \"2019-01-23T00:00:00Z\"\n    },\n    {\n      \"value\": 170519,\n      \"timestamp\": \"2019-01-24T00:00:00Z\"\n    },\n    {\n      \"value\": 166422,\n      \"timestamp\": \"2019-01-25T00:00:00Z\"\n    }\n  ],\n  \"start_time\": \"2019-01-20T00:00:00Z\",\n  \"end_time\": \"2019-01-25T00:00:00Z\"\n}"
              }
            }
          }
        }
      }
    },
    "/{version}/{destination_name}/metrics": {
      "get": {
        "tags": [
          "Event Delivery Metrics"
        ],
        "summary": "List Metric Timeseries",
        "description": "Timeseries data for all metrics for a source-destination pair.\n\nIf you have multi-instance destinations configured for your source you must send the destination configuration id of the instance you are fetching metric timeseries data for. An example in List - Multi Destination Enabled in the Example requests. To find the destinationConfigurationId navigate to the destination overview page of the destination which you are querying metrics for in the Segment app. You can retieve the destinationConfigurationId from the URL where it is configured as \"instances/$destinationConfigurationId/configuration\".",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "destination_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"event_delivery_metrics\": [\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/expired\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 1319,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/retried\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 38,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 9,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 20,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 4,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 21,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 19,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/retried_502\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 9,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 8,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 17,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 4,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 10,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 19,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/retried_504\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 21,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 1,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 2,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 11,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/retried_ECONNABORTED\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 8,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 1,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/successes\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 172615,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 170609,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 170668,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 170422,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 170519,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 166929,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/successes_after_retry\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 3596,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 3442,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 4006,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 3697,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 3496,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 3637,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/successes_on_first_attempt\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 169019,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 167167,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 166662,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 166725,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 167023,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 163292,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/time_to_first_attempt_average\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 5.502818496,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 3.706166541,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 3.228996959,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 3.517764604,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 4.645016078,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 3.495370896,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/time_to_first_attempt_p95\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 3.055067164,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 3.063505857,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 3.149659938,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 3.482212419,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 3.8428379,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 3.453382997,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    }\n  ],\n  \"next_page_token\": \"dGltZV90b19zdWNjZXNzX2F2ZXJhZ2U=\"\n}"
              }
            }
          },
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"event_delivery_metrics\": [\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/expired\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 1319,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/retried\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 38,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 9,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 20,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 4,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 21,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 19,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/retried_502\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 9,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 8,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 17,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 4,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 10,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 19,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/retried_504\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 21,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 1,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 2,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 11,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/retried_ECONNABORTED\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 8,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 1,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 0,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/successes\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 172615,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 170609,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 170668,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 170422,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 170519,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 166929,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/successes_after_retry\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 3596,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 3442,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 4006,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 3697,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 3496,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 3637,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/successes_on_first_attempt\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 169019,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 167167,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 166662,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 166725,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 167023,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 163292,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/time_to_first_attempt_average\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 5.502818496,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 3.706166541,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 3.228996959,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 3.517764604,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 4.645016078,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 3.495370896,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/time_to_first_attempt_p95\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 3.055067164,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 3.063505857,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 3.149659938,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 3.482212419,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        },\n        {\n          \"value\": 3.8428379,\n          \"timestamp\": \"2019-01-24T00:00:00Z\"\n        },\n        {\n          \"value\": 3.453382997,\n          \"timestamp\": \"2019-01-25T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    }\n  ],\n  \"next_page_token\": \"dGltZV90b19zdWNjZXNzX2F2ZXJhZ2U=\"\n}"
              }
            }
          }
        }
      }
    },
    "/{version}/{destination_name}/metrics:batchGet": {
      "get": {
        "tags": [
          "Event Delivery Metrics"
        ],
        "summary": "Batch Get Metric Timeseries",
        "description": "Timeseries data for a provided list of metric names for a source-destination pair.\n\nIf you have multi-instance destinations configured for your source you must send the destination configuration id of the instance you are fetching metric timeseries data for. An example request, Batch Get Summary - Multi Destination Enabled, can be found in the Example requests dropdown. To find the destinationConfigurationId navigate to the destination overview page of the destination which you are querying metrics for in the Segment app. You can retieve the destinationConfigurationId from the URL where it is configured as \"instances/$destinationConfigurationId/configuration\".",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "destination_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"event_delivery_metrics\": [\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/successes\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 172615,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 170609,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 170668,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 170422,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-23T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/retried_502\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 9,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 8,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 17,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 4,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-23T00:00:00Z\"\n    }\n  ]\n}"
              }
            }
          },
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"event_delivery_metrics\": [\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/successes\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 172615,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 170609,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 170668,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 170422,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-23T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/retried_502\",\n      \"granularity\": \"DAY\",\n      \"datapoints\": [\n        {\n          \"value\": 9,\n          \"timestamp\": \"2019-01-20T00:00:00Z\"\n        },\n        {\n          \"value\": 8,\n          \"timestamp\": \"2019-01-21T00:00:00Z\"\n        },\n        {\n          \"value\": 17,\n          \"timestamp\": \"2019-01-22T00:00:00Z\"\n        },\n        {\n          \"value\": 4,\n          \"timestamp\": \"2019-01-23T00:00:00Z\"\n        }\n      ],\n      \"start_time\": \"2019-01-20T00:00:00Z\",\n      \"end_time\": \"2019-01-23T00:00:00Z\"\n    }\n  ]\n}"
              }
            }
          }
        }
      }
    },
    "/{version}/{destination_name}/metrics:getSummary": {
      "get": {
        "tags": [
          "Event Delivery Metrics"
        ],
        "summary": "Get Metric Summary",
        "description": "Summary of metrics for a source-destination pair.\n\nIf you have multi-instance destinations configured for your source you must send the destination configuration id of the instance you are fetching metric timeseries data for. An example in Get Summary - Multi Destination Enabled in the Example requests. To find the destinationConfigurationId navigate to the destination overview page of the destination which you are querying metrics for in the Segment app. You can retieve the destinationConfigurationId from the URL where it is configured as \"instances/$destinationConfigurationId/configuration\".",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "destination_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics\",\n  \"metric_summary\": [\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/successes\",\n      \"total\": 5331287,\n      \"metric_breakdown\": [\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/successes_on_first_attempt\",\n          \"value\": 5211864\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/successes_after_retry\",\n          \"value\": 119419\n        }\n      ]\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/expired\",\n      \"total\": 28455,\n      \"metric_breakdown\": []\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/discarded\",\n      \"total\": 3,\n      \"metric_breakdown\": [\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/discarded_404\",\n          \"value\": 3\n        }\n      ]\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/retried\",\n      \"total\": 792,\n      \"metric_breakdown\": [\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/retried_502\",\n          \"value\": 326\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/retried_504\",\n          \"value\": 405\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/retried_ECONNABORTED\",\n          \"value\": 55\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/retried_ECONNRESET\",\n          \"value\": 6\n        }\n      ]\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/time_to_success\",\n      \"total\": 0,\n      \"metric_breakdown\": [\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/time_to_success_average\",\n          \"value\": 9.097975393\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/time_to_success_p95\",\n          \"value\": 3.367597643\n        }\n      ]\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/time_to_first_attempt\",\n      \"total\": 0,\n      \"metric_breakdown\": [\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/time_to_first_attempt_average\",\n          \"value\": 4.163448849\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/metrics/time_to_first_attempt_p95\",\n          \"value\": 3.3699638370000002\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"2018-12-26T00:00:00Z\",\n  \"end_time\": \"2019-01-25T00:00:00Z\"\n}"
              }
            }
          },
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics\",\n  \"metric_summary\": [\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/successes\",\n      \"total\": 5331287,\n      \"metric_breakdown\": [\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/successes_on_first_attempt\",\n          \"value\": 5211864\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/successes_after_retry\",\n          \"value\": 119419\n        }\n      ]\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/expired\",\n      \"total\": 28455,\n      \"metric_breakdown\": []\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/discarded\",\n      \"total\": 3,\n      \"metric_breakdown\": [\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/discarded_404\",\n          \"value\": 3\n        }\n      ]\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/retried\",\n      \"total\": 792,\n      \"metric_breakdown\": [\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/retried_502\",\n          \"value\": 326\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/retried_504\",\n          \"value\": 405\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/retried_ECONNABORTED\",\n          \"value\": 55\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/retried_ECONNRESET\",\n          \"value\": 6\n        }\n      ]\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/time_to_success\",\n      \"total\": 0,\n      \"metric_breakdown\": [\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/time_to_success_average\",\n          \"value\": 9.097975393\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/time_to_success_p95\",\n          \"value\": 3.367597643\n        }\n      ]\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/time_to_first_attempt\",\n      \"total\": 0,\n      \"metric_breakdown\": [\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/time_to_first_attempt_average\",\n          \"value\": 4.163448849\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/time_to_first_attempt_p95\",\n          \"value\": 3.3699638370000002\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"2018-12-26T00:00:00Z\",\n  \"end_time\": \"2019-01-25T00:00:00Z\"\n}"
              }
            }
          }
        }
      }
    },
    "/{version}/{workspace_name}/event-delivery-metrics:batchGetSummary": {
      "get": {
        "tags": [
          "Event Delivery Metrics"
        ],
        "summary": "Batch Get Metric Summary",
        "description": "Summaries for a provided list of source-destination pairs.\n\nIf you have multi-instance destinations configured for your source you must send the destination configuration id of the instance you are fetching metric timeseries data for. An example in Batch Get Metric Summary - Multi Destination Enabled in the Example requests. To find the destinationConfigurationId navigate to the destination overview page of the destination which you are querying metrics for in the Segment app. You can retieve the destinationConfigurationId from the URL where it is configured as \"instances/$destinationConfigurationId/configuration\".",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"event_delivery_metric_summaries\": [\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk\",\n      \"metric_summary\": [\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/metrics/successes\",\n          \"total\": 5331287,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/metrics/successes_on_first_attempt\",\n              \"value\": 5211864\n            },\n            {\n              \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/metrics/successes_after_retry\",\n              \"value\": 119419\n            }\n          ]\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/metrics/expired\",\n          \"total\": 0,\n          \"metric_breakdown\": []\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/metrics/discarded\",\n          \"total\": 5289153,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/metrics/discarded_UNSUPPORTED_EVENT_TYPE\",\n              \"value\": 5289153\n            }\n          ]\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/metrics/retried\",\n          \"total\": 0,\n          \"metric_breakdown\": []\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/metrics/time_to_success\",\n          \"total\": 0,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/metrics/time_to_success_average\",\n              \"value\": 0\n            },\n            {\n              \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/metrics/time_to_success_p95\",\n              \"value\": 0\n            }\n          ]\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/metrics/time_to_first_attempt\",\n          \"total\": 0,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/metrics/time_to_first_attempt_average\",\n              \"value\": 3.80065656\n            },\n            {\n              \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/metrics/time_to_first_attempt_p95\",\n              \"value\": 3.379069625\n            }\n          ]\n        }\n      ],\n      \"start_time\": \"2018-12-26T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks\",\n      \"metric_summary\": [\n        {\n          \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/successes\",\n          \"total\": 2989,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/successes_on_first_attempt\",\n              \"value\": 2920\n            },\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/successes_after_retry\",\n              \"value\": 69\n            }\n          ]\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/expired\",\n          \"total\": 2955,\n          \"metric_breakdown\": []\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/discarded\",\n          \"total\": 0,\n          \"metric_breakdown\": []\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/retried\",\n          \"total\": 35296,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/retried_ENOTFOUND\",\n              \"value\": 35295\n            },\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/retried_ECONNABORTED\",\n              \"value\": 1\n            }\n          ]\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/time_to_success\",\n          \"total\": 0,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/time_to_success_average\",\n              \"value\": 9.293602542\n            },\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/time_to_success_p95\",\n              \"value\": 2.885951956\n            }\n          ]\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/time_to_first_attempt\",\n          \"total\": 0,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/time_to_first_attempt_average\",\n              \"value\": 4.399057602\n            },\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/time_to_first_attempt_p95\",\n              \"value\": 2.913386417\n            }\n          ]\n        }\n      ],\n      \"start_time\": \"2018-12-26T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    }\n  ]\n}"
              }
            }
          },
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"event_delivery_metric_summaries\": [\n    {\n      \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/config/1a2b3c5d6e7f8g9h0i1a2b3c5\",\n      \"metric_summary\": [\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/successes\",\n          \"total\": 5331287,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/successes_on_first_attempt\",\n              \"value\": 5211864\n            },\n            {\n              \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/successes_after_retry\",\n              \"value\": 119419\n            }\n          ]\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/expired\",\n          \"total\": 0,\n          \"metric_breakdown\": []\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/discarded\",\n          \"total\": 5289153,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/discarded_UNSUPPORTED_EVENT_TYPE\",\n              \"value\": 5289153\n            }\n          ]\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/retried\",\n          \"total\": 0,\n          \"metric_breakdown\": []\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/time_to_success\",\n          \"total\": 0,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/time_to_success_average\",\n              \"value\": 0\n            },\n            {\n              \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/time_to_success_p95\",\n              \"value\": 0\n            }\n          ]\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/time_to_first_attempt\",\n          \"total\": 0,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/time_to_first_attempt_average\",\n              \"value\": 3.80065656\n            },\n            {\n              \"name\": \"workspaces/myworkspace/sources/js/destinations/zendesk/config/1a2b3c5d6e7f8g9h0i1a2b3c5/metrics/time_to_first_attempt_p95\",\n              \"value\": 3.379069625\n            }\n          ]\n        }\n      ],\n      \"start_time\": \"2018-12-26T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    },\n    {\n      \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/config/5c3b2a1i0h9g8f7e6d5c3b2a1\",\n      \"metric_summary\": [\n        {\n          \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/config/5c3b2a1i0h9g8f7e6d5c3b2a1/metrics/successes\",\n          \"total\": 2989,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/config/5c3b2a1i0h9g8f7e6d5c3b2a1/metrics/successes_on_first_attempt\",\n              \"value\": 2920\n            },\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/config/5c3b2a1i0h9g8f7e6d5c3b2a1/metrics/successes_after_retry\",\n              \"value\": 69\n            }\n          ]\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/go/destinations/config/5c3b2a1i0h9g8f7e6d5c3b2a1/webhooks/metrics/expired\",\n          \"total\": 2955,\n          \"metric_breakdown\": []\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/config/5c3b2a1i0h9g8f7e6d5c3b2a1/metrics/discarded\",\n          \"total\": 0,\n          \"metric_breakdown\": []\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/config/5c3b2a1i0h9g8f7e6d5c3b2a1/metrics/retried\",\n          \"total\": 35296,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/config/5c3b2a1i0h9g8f7e6d5c3b2a1/metrics/retried_ENOTFOUND\",\n              \"value\": 35295\n            },\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/config/5c3b2a1i0h9g8f7e6d5c3b2a1/metrics/retried_ECONNABORTED\",\n              \"value\": 1\n            }\n          ]\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/config/5c3b2a1i0h9g8f7e6d5c3b2a1/metrics/time_to_success\",\n          \"total\": 0,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/config/5c3b2a1i0h9g8f7e6d5c3b2a1/metrics/time_to_success_average\",\n              \"value\": 9.293602542\n            },\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/config/5c3b2a1i0h9g8f7e6d5c3b2a1/metrics/time_to_success_p95\",\n              \"value\": 2.885951956\n            }\n          ]\n        },\n        {\n          \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metric/config/5c3b2a1i0h9g8f7e6d5c3b2a1s/time_to_first_attempt\",\n          \"total\": 0,\n          \"metric_breakdown\": [\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/config/5c3b2a1i0h9g8f7e6d5c3b2a1/time_to_first_attempt_average\",\n              \"value\": 4.399057602\n            },\n            {\n              \"name\": \"workspaces/myworkspace/sources/go/destinations/webhooks/metrics/config/5c3b2a1i0h9g8f7e6d5c3b2a1/time_to_first_attempt_p95\",\n              \"value\": 2.913386417\n            }\n          ]\n        }\n      ],\n      \"start_time\": \"2018-12-26T00:00:00Z\",\n      \"end_time\": \"2019-01-25T00:00:00Z\"\n    }\n  ]\n}"
              }
            }
          }
        }
      }
    },
    "/{version}/{destination_name}/filters/": {
      "post": {
        "tags": [
          "Destination Filters"
        ],
        "summary": "Create Filter",
        "description": "Create a destination filter for a specific source and destination pair. \n\nIf you have multi-instance destinations configured to the specific source you must supply a destination configuration id in the request parameters. An example request, Create Filter - Multi Destination Enabled, can be found in the Example requests dropdown. To find the destinationConfigurationId navigate to the destination overview page of the destination which you are querying metrics for in the Segment app. You can retieve the destinationConfigurationId from the URL where it is configured as \"instances/$destinationConfigurationId/configuration\".",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "filter": {
                    "title": "Only allow track events",
                    "if": "type != 'track'",
                    "actions": [
                      {
                        "type": "drop_event"
                      }
                    ],
                    "enabled": true
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "destination_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 11 Apr 2019 16:25:40 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "302"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "AWSALB=LBrB8JF9xsJMtjbvMnk1ZqstIrB3NBczPwJmXXURfHyPLuVozXAlaI+YzDksQmDqKqLRYdySyL7Wdeixc1jGOvYzcp4oAxSphvMT40+yXDoOyTXRZI8/0jeQ/bJJ; Expires=Thu, 18 Apr 2019 16:25:40 GMT; Path=/"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "144"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "workspaces/developer-plan/sources/diggory-filters/destinations/google-analytics/filters/df_1JjE7f3gz8OXU6lVbUGuDhHcyKl",
                  "if": "type != 'track'",
                  "actions": [
                    {
                      "type": "drop_event",
                      "fields": {}
                    }
                  ],
                  "title": "Only allow track events",
                  "description": "",
                  "enabled": true
                }
              }
            }
          },
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n    \"name\": \"workspaces/developer-plan/sources/diggory-filters/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/filters/df_1JjE7f3gz8OXU6lVbUGuDhHcyKl\",\n    \"if\": \"type != 'track'\",\n    \"actions\": [\n        {\n            \"type\": \"drop_event\",\n            \"fields\": {}\n        }\n    ],\n    \"title\": \"Only allow track events\",\n    \"description\": \"\",\n    \"enabled\": true\n}"
              }
            }
          }
        }
      }
    },
    "/{version}/{filter_name}": {
      "get": {
        "tags": [
          "Destination Filters"
        ],
        "summary": "Get Filter",
        "description": "Get a destination filter by the destination filter id.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 11 Apr 2019 16:26:16 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "302"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "AWSALB=msXRnDUuGyJv6WUljK0SlodNIBZuqTA/o/fVkWP/UZLkLRABWSsq0xDA2ovOq8+A12lCmE4Pmh2kMTx9ydyewovJYm5zZXZcNIet+/RxvC7dxsGN0rlZ5lDpax1x; Expires=Thu, 18 Apr 2019 16:26:16 GMT; Path=/"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "67"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "workspaces/developer-plan/sources/diggory-filters/destinations/google-analytics/filters/df_1JjE7f3gz8OXU6lVbUGuDhHcyKl",
                  "if": "type != 'track'",
                  "actions": [
                    {
                      "type": "drop_event",
                      "fields": {}
                    }
                  ],
                  "title": "Only allow track events",
                  "description": "",
                  "enabled": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Destination Filters"
        ],
        "summary": "Update Filter",
        "description": "Update a destination filter.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "filter": {
                    "if": "type = 'identify' and !contains(traits.email, '@mycompany.com')",
                    "actions": [
                      {
                        "type": "blacklist_fields",
                        "fields": {
                          "traits": {
                            "fields": [
                              "email",
                              "name"
                            ]
                          }
                        }
                      }
                    ],
                    "title": "Drop PII from identify events"
                  },
                  "update_mask": {
                    "paths": [
                      "if",
                      "actions",
                      "title"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Destination Filters"
        ],
        "summary": "Delete Filter",
        "description": "Delete a destination filter.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/{version}/{destination_name}/filters": {
      "get": {
        "tags": [
          "Destination Filters"
        ],
        "summary": "List Filters",
        "description": "List destination filters for a specific source and destination pair. \n\nIf you have multi-instance destinations configured to the specific source you must supply a destination configuration id in the request parameters. An example request, List Filters - Multi Destination Enabled, can be found in the Example requests dropdown. To find the destinationConfigurationId navigate to the destination overview page of the destination which you are querying metrics for in the Segment app. You can retieve the destinationConfigurationId from the URL where it is configured as \"instances/$destinationConfigurationId/configuration\".",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "destination_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 11 Apr 2019 16:26:40 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "960"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "AWSALB=hM4+/VFR3iCWFFYDOGOzyEsBJJaoiMBdf3/zXTvAJs+rVXQEtl/Tu0iUpBnxSUhiGmIYQg9PzRDZcyALmmDysbeixAvYd8xyEsyODeSQlxuJ0MHGMTPT6udYZQhP; Expires=Thu, 18 Apr 2019 16:26:40 GMT; Path=/"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "87"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "filters": [
                    {
                      "name": "workspaces/developer-plan/sources/diggory-filters/destinations/google-analytics/filters/df_1JjE7f3gz8OXU6lVbUGuDhHcyKl",
                      "if": "type != 'track'",
                      "actions": [
                        {
                          "type": "drop_event",
                          "fields": {}
                        }
                      ],
                      "title": "Only allow track events",
                      "description": "",
                      "enabled": true
                    }
                  ]
                }
              }
            }
          },
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n    \"filters\": [\n        {\n            \"name\": \"workspaces/developer-plan/sources/diggory-filters/destinations/google-analytics/config/1a2b3c5d6e7f8g9h0i1a2b3c5/filters/df_1JjE7f3gz8OXU6lVbUGuDhHcyKl\",\n            \"if\": \"type != 'track'\",\n            \"actions\": [\n                {\n                    \"type\": \"drop_event\",\n                    \"fields\": {}\n                }\n            ],\n            \"title\": \"Only allow track events\",\n            \"description\": \"\",\n            \"enabled\": true\n        }\n    ]\n}"
              }
            }
          }
        }
      }
    },
    "/{version}/filters/preview": {
      "post": {
        "tags": [
          "Destination Filters"
        ],
        "summary": "Preview Filter",
        "description": "This endpoint allows you to preview a Destination Filter against an arbitrary JSON payload without touching your production data. This is useful for testing.\n\n**Request Body**\n\n| Field    | Type     | Description                                                                        |          |\n|----------|----------|------------------------------------------------------------------------------------|----------|\n| `filter` | `filter` | The filter that you wish to test. The only required fields are \"if\" and \"actions\". | required |\n| `input`  | `string` | A serialized JSON payload that you want to apply the filter to.                    | required |\n\n**Response Body**\n\n| Field    | Type     | Description                                          |\n|----------|----------|------------------------------------------------------|\n| `input`  | `string` | The original input JSON payload, pre-filter.         |\n| `output` | `string` | The filtered JSON payload.                           |\n| `diff`   | `string` | A textual diff of the input and output JSON payload. |\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "filter": {
                    "if": "all",
                    "actions": [
                      {
                        "type": "blacklist_fields",
                        "fields": {
                          "properties": {
                            "fields": [
                              "name",
                              "age"
                            ]
                          }
                        }
                      }
                    ],
                    "enabled": true
                  },
                  "input": "{ \"userId\": \"6592\", \"properties\": { \"name\": \"Bob Smith\", \"age\": \"40\", \"order\": \"129\" } }"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 11 Apr 2019 16:27:13 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "349"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "AWSALB=yfvCr/6jwU8ngW8wjoTzQVNVbvWCRjdzOrd/bt1eeuQ6sbwlNKNUu9PY90MVEXFn9bvvwaiUW26Kgu10EqvQiuD7dDfqcca6TzWRTmCaRzr+vcGvwCVkMcqq8lfh; Expires=Thu, 18 Apr 2019 16:27:13 GMT; Path=/"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "2"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "input": "{ \"userId\": \"6592\", \"properties\": { \"name\": \"Bob Smith\", \"age\": \"40\", \"order\": \"129\" } }",
                  "output": "{\"properties\":{ \"order\": \"129\" },\"userId\":\"6592\"}",
                  "diff": " {\n \t\"properties\": {\n-\t\t\"age\": \"40\",\n-\t\t\"name\": \"Bob Smith\",\n \t\t\"order\": \"129\"\n \t},\n \t\"userId\": \"6592\"\n }"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/{workspace_name}/regulations": {
      "post": {
        "tags": [
          "Deletion and Suppression"
        ],
        "summary": "Create Regulation",
        "description": "The create regulation endpoint will be used to create new regulations on the particular workspace. You can set the regulation type and the attributes to regulate.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "regulation_type": "Suppress_With_Delete",
                  "attributes": {
                    "name": "userId",
                    "values": [
                      "foo-user",
                      "bar-user"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 29 Apr 2019 23:14:47 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "50"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "7"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "regulate_id": "REDACTED"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Deletion and Suppression"
        ],
        "summary": "List Regulations based on status",
        "description": "The list regulations endpoint also takes in a query parameter for status and regulation type using which you can narrow down the regulations which satisfy the query parameters",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "status filter can be set to `failed`, `finished`, `running` and `initialized`",
            "example": "failed"
          },
          {
            "name": "regulation_types",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "Suppress_With_Delete"
          },
          {
            "name": "regulation_types",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "Suppress"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 29 Apr 2019 23:37:36 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "5121"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "235"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "entries": [
                    {
                      "regulate_id": "REDACTED",
                      "attributes": {
                        "name": "userId",
                        "values": [
                          "REDACTED"
                        ]
                      },
                      "status": "failed",
                      "created_at": "2019-04-26T20:02:55Z",
                      "finished_at": "2019-04-28T09:48:52Z"
                    },
                    {
                      "regulate_id": "REDACTED",
                      "attributes": {
                        "name": "userId",
                        "values": [
                          "REDACTED"
                        ]
                      },
                      "status": "failed",
                      "created_at": "2019-04-26T18:18:46Z",
                      "finished_at": "2019-04-28T07:58:51Z"
                    },
                    {
                      "regulate_id": "REDACTED",
                      "attributes": {
                        "name": "userId",
                        "values": [
                          "REDACTED"
                        ]
                      },
                      "status": "failed",
                      "created_at": "2019-04-26T18:18:46Z",
                      "finished_at": "2019-04-28T07:58:51Z"
                    },
                    {
                      "regulate_id": "REDACTED",
                      "attributes": {
                        "name": "userId",
                        "values": [
                          "REDACTED"
                        ]
                      },
                      "status": "failed",
                      "created_at": "2019-04-26T18:18:46Z",
                      "finished_at": "2019-04-28T07:58:51Z"
                    }
                  ],
                  "next_page_token": "2019-04-25T23:54:08.149538Z"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/{workspace_name}/regulations/1KQVncbOPeRGjRcpuOHdnhDwPn7": {
      "get": {
        "tags": [
          "Deletion and Suppression"
        ],
        "summary": "Get Regulation",
        "description": "Get regulation fetches the information about a previously submitted regulation. You supply the regultion id you got back when you created the regulation request. You get back the status of the regulation, when it was created, when it was finished and the attributes being regulated.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 29 Apr 2019 23:22:14 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "1457"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "20"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "workspace_id": "REDACTED",
                  "overall_status": "finished",
                  "stream_status": [
                    {
                      "id": "REDACTED",
                      "destination_status": [
                        {
                          "name": "Segment",
                          "id": "segment",
                          "status": "finished",
                          "err_string": "",
                          "finished_at": "0001-01-01T00:00:00Z"
                        }
                      ]
                    },
                    {
                      "id": "REDACTED",
                      "destination_status": [
                        {
                          "name": "Segment",
                          "id": "segment",
                          "status": "finished",
                          "err_string": "",
                          "finished_at": "0001-01-01T00:00:00Z"
                        }
                      ]
                    }
                  ],
                  "created_at": "2019-04-27T00:12:56Z",
                  "finished_at": "2019-04-28T22:50:07Z"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/{workspace_name}/regulations/1KYs688u4F8nDaARd1nrFyN5LbJ": {
      "delete": {
        "tags": [
          "Deletion and Suppression"
        ],
        "summary": "Delete Regulation",
        "description": "Regulations that are still in the initialized state can be deleted using this endpoint",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 29 Apr 2019 23:26:49 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "3"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "9"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/{version}/{source_name}/regulations": {
      "post": {
        "tags": [
          "Deletion and Suppression"
        ],
        "summary": "Delete Object from a Cloud Source",
        "description": "This end point deletes an object from a specific cloud source.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "regulation_type": "Suppress_With_Delete",
                  "attributes": {
                    "name": "objectId",
                    "values": [
                      "foo-user",
                      "bar-user"
                    ]
                  },
                  "collection": "app-collection"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "source_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 30 Apr 2019 18:57:25 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "50"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "44"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "regulate_id": "REDACTED"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/{workspace_name}/suppressed-users": {
      "get": {
        "tags": [
          "Deletion and Suppression"
        ],
        "summary": "List suppressed users for a workspace",
        "description": "This endpoint lists the actively suppressed users for a workspace",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 02 May 2019 14:48:19 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "1408"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "108"
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "attributes": [
                    {
                      "name": "userId",
                      "values": [
                        "Redacted"
                      ]
                    },
                    {
                      "name": "userId",
                      "values": [
                        "Redacted"
                      ]
                    }
                  ],
                  "next_page_token": "redacted"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/{workspace_name}/roles": {
      "get": {
        "tags": [
          "IAM"
        ],
        "summary": "List Roles",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/{version}/{workspace_name}/roles/-/policies": {
      "get": {
        "tags": [
          "IAM"
        ],
        "summary": "List Policies",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/{version}/{role_name}/policies": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Create Policy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "subject": "users/USER_ID",
                  "resource": "workspaces/myworkspace"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "role_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/{version}/{policy_name}": {
      "delete": {
        "tags": [
          "IAM"
        ],
        "summary": "Delete Policy",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "policy_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/{version}/{workspace_name}/invites": {
      "get": {
        "tags": [
          "IAM"
        ],
        "summary": "List Invites",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"invites\": [\n\t{\n\t  \"name\": \"{{invite_name}}\",\n\t  \"email\": \"example@segment.local\",\n\t  \"create_time\": \"2019-05-24T16:37:24Z\",\n\t  \"expire_time\": \"2019-06-23T16:37:24Z\",\n\t  \"policies\": [\n\t    {\n\t      \"role\": \"roles/abc\",\n\t      \"resource\": \"{{workspace_name}}\"\n\t    }\n\t  ]\n\t}\n  ]\n}"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Create Invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "example@segment.local",
                  "policies": [
                    {
                      "role": "role/abc",
                      "resource": "resource/myworkspace"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "undefined": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "{{invite_name}}",
                  "email": "example@segment.local",
                  "create_time": "2019-05-24T16:37:24Z",
                  "expire_time": "2019-06-23T16:37:24Z",
                  "policies": [
                    {
                      "role": "roles/abc",
                      "resource": "{{workspace_name}}"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/{version}/{invite_name}": {
      "delete": {
        "tags": [
          "IAM"
        ],
        "summary": "Delete Invite",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "invite_name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        }
      }
    },
    "/{version}/{workspace_id}/functions": {
      "post": {
        "tags": [
          "Functions"
        ],
        "summary": "Create Function",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "function": {
                    "code": "// Learn more about source functions API at\r\n// https://segment.com/docs/connections/sources/source-functions\r\n\r\n/**\r\n * Handle incoming HTTP request\r\n *\r\n * @param  {FunctionRequest} request\r\n * @param  {FunctionSettings} settings\r\n */\r\nasync function onRequest(request, settings) {\r\n  const body = request.json()\r\n\r\n  const endpoint = ''; // replace with your endpoint\r\n\tconst response = await fetch(endpoint, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Basic ${btoa(settings.apiKey + ':')}`,\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify(body)\r\n  });\r\n\r\n\tif (!response.ok) {\r\n    console.log(\"ERROR fetching information: \", response)\r\n    return;\r\n  }\r\n\r\n  // See https://segment.com/docs/connections/spec/track/\r\n  Segment.track({\r\n    event: 'Test Event',\r\n    userId: 'user_id',\r\n    properties: {\r\n      testProperty: 'testValue',\r\n      testProperty2: response.propertyName,\r\n    }\r\n  })\r\n\r\n  // See https://segment.com/docs/connections/spec/identify/\r\n  Segment.identify({\r\n    userId: 'user_id',\r\n    traits: {\r\n      userName: 'Unicorn'\r\n    }\r\n  })\r\n\r\n  // See https://segment.com/docs/connections/spec/group/\r\n  Segment.group({\r\n    groupId: 'group_id',\r\n    userId: 'user_id',\r\n    traits: {\r\n      groupName: 'Unicorn'\r\n    }\r\n  })\r\n\r\n  // See https://segment.com/docs/connections/spec/page/\r\n  Segment.page({\r\n    name: 'Home page',\r\n    userId: 'user_id',\r\n    properties: {\r\n      url: 'https://mywebsite.com/about'\r\n    }\r\n  })\r\n\r\n  // See https://segment.com/docs/connections/spec/screen/\r\n  Segment.screen({\r\n    name: 'Test Screen',\r\n    userId: 'user_id',\r\n    properties: {\r\n      url: 'https://mywebsite.com/about'\r\n    }\r\n  })\r\n\r\n  // See https://segment.com/docs/connections/sources/catalog/libraries/server/object-api/\r\n  Segment.set({\r\n    collection: 'users',\r\n    id: 'user_id',\r\n    properties: {\r\n      userName: 'Unicorn'\r\n    }\r\n  })\r\n}",
                    "settings": [
                      {
                        "name": "myapiKey",
                        "label": "my api key",
                        "type": "string",
                        "required": "false",
                        "sensitive": "false"
                      },
                      {
                        "name": "mySecret",
                        "label": "my secret key",
                        "type": "string",
                        "required": "false",
                        "sensitive": "true"
                      }
                    ],
                    "display_name": "test source function"
                  },
                  "type": "SOURCE"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:44:15 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "code": "// Learn more about source functions API at\n// https://segment.com/docs/connections/sources/source-functions\n\n/**\n * Handle incoming HTTP request\n *\n * @param  {FunctionRequest} request\n * @param  {FunctionSettings} settings\n */\nasync function onRequest(request, settings) {\n\tconst body = request.json();\n\tconsole.log(body);\n\n\t// See https://segment.com/docs/connections/spec/track/\n\tSegment.track({\n\t\tevent: 'Test Event',\n\t\tuserId: 'user_id',\n\t\tproperties: {\n\t\t\ttestProperty: 'testValue'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/identify/\n\tSegment.identify({\n\t\tuserId: 'user_id',\n\t\ttraits: {\n\t\t\tuserName: 'Unicorn'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/group/\n\tSegment.group({\n\t\tgroupId: 'group_id',\n\t\tuserId: 'user_id',\n\t\ttraits: {\n\t\t\tgroupName: 'Unicorn'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/page/\n\tSegment.page({\n\t\tname: 'Home page',\n\t\tuserId: 'user_id',\n\t\tproperties: {\n\t\t\turl: 'https://mywebsite.com/about'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/screen/\n\tSegment.screen({\n\t\tname: 'Test Screen',\n\t\tuserId: 'user_id',\n\t\tproperties: {\n\t\t\turl: 'https://mywebsite.com/about'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/sources/catalog/libraries/server/object-api/\n\tSegment.set({\n\t\tcollection: 'users',\n\t\tid: 'user_id',\n\t\tproperties: {\n\t\t\tuserName: 'Unicorn'\n\t\t}\n\t});\n}\n",
                  "deployed_at": "2020-06-02T21:04:00Z",
                  "settings": [
                    {
                      "name": "apiKey",
                      "label": "api key",
                      "type": "string"
                    },
                    {
                      "name": "mySecret",
                      "label": "my secret key",
                      "type": "string",
                      "sensitive": true
                    }
                  ],
                  "id": "sfnc_1234",
                  "workspace_id": "workspace_id",
                  "display_name": "my test source function",
                  "created_at": "2020-07-30T19:15:26.660Z",
                  "created_by": "user_id",
                  "logo_url": "https://logo-url",
                  "type": "SOURCE",
                  "catalog_id": "1234"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Functions"
        ],
        "summary": "List Function",
        "description": "## List Function Input\n\n\n| Field          | Type                           | Description                                                          | Required? | Example          |\n| -------------- | ------------------------------ | -------------------------------------------------------------------- | --------- | ---------------- |\n| `workspace_id` | string                         | Identifier of the workspace the function resides in.                 | required  | de76b5055e       |\n| `type`         | enum (`SOURCE`, `DESTINATION`) | Type of function to list.                                            | required  | SOURCE           |\n| `page_size`    | integer (1-100, default=10)    | Number of functions to list per page.                                | optional  | 10               |\n| `page_token`   | string                         | Token from a previous response, indicating which page to advance to. | optional  | a3pVcVE2SkxaUg== |\n\n",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "functions": [
                    {
                      "settings": [
                        {
                          "name": "my setting",
                          "label": "my setting",
                          "type": "string",
                          "required": true
                        },
                        {
                          "name": "arraysetting",
                          "label": "array setting",
                          "type": "array"
                        }
                      ],
                      "id": "sfnc_1234",
                      "workspace_id": "workspace_id",
                      "display_name": "my function",
                      "created_at": "2020-07-20T22:35:38.056Z",
                      "created_by": "user_id",
                      "logo_url": "https://logo-url",
                      "type": "SOURCE",
                      "catalog_id": "1234"
                    },
                    {
                      "settings": [
                        {
                          "name": "myapiKey",
                          "label": "my api key",
                          "type": "string"
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "type": "string",
                          "sensitive": true
                        }
                      ],
                      "id": "sfnc_4567",
                      "workspace_id": "workspace_id",
                      "display_name": "my second function",
                      "created_at": "2020-07-30T19:15:26.660Z",
                      "created_by": "user_id",
                      "logo_url": "https://logo-url",
                      "type": "SOURCE",
                      "catalog_id": "4567"
                    }
                  ],
                  "next_page_token": "MTI="
                }
              }
            }
          }
        }
      }
    },
    "/{version}/{workspace_id}/{function_id}": {
      "get": {
        "tags": [
          "Functions"
        ],
        "summary": "Get Function",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "function_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:32:34 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "code": "// Learn more about source functions API at\n// https://segment.com/docs/connections/sources/source-functions\n\n/**\n * Handle incoming HTTP request\n *\n * @param  {FunctionRequest} request\n * @param  {FunctionSettings} settings\n */\nasync function onRequest(request, settings) {\n\tconst body = request.json();\n\tconsole.log(body);\n\n\t// See https://segment.com/docs/connections/spec/track/\n\tSegment.track({\n\t\tevent: 'Test Event',\n\t\tuserId: 'user_id',\n\t\tproperties: {\n\t\t\ttestProperty: 'testValue'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/identify/\n\tSegment.identify({\n\t\tuserId: 'user_id',\n\t\ttraits: {\n\t\t\tuserName: 'Unicorn'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/group/\n\tSegment.group({\n\t\tgroupId: 'group_id',\n\t\tuserId: 'user_id',\n\t\ttraits: {\n\t\t\tgroupName: 'Unicorn'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/page/\n\tSegment.page({\n\t\tname: 'Home page',\n\t\tuserId: 'user_id',\n\t\tproperties: {\n\t\t\turl: 'https://mywebsite.com/about'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/screen/\n\tSegment.screen({\n\t\tname: 'Test Screen',\n\t\tuserId: 'user_id',\n\t\tproperties: {\n\t\t\turl: 'https://mywebsite.com/about'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/sources/catalog/libraries/server/object-api/\n\tSegment.set({\n\t\tcollection: 'users',\n\t\tid: 'user_id',\n\t\tproperties: {\n\t\t\tuserName: 'Unicorn'\n\t\t}\n\t});\n}\n",
                  "deployed_at": "2020-06-02T21:04:00Z",
                  "settings": [
                    {
                      "name": "myapiKey",
                      "label": "my api key",
                      "type": "string"
                    },
                    {
                      "name": "mySecret",
                      "label": "my secret key",
                      "type": "string",
                      "sensitive": true
                    }
                  ],
                  "id": "sfnc_1234",
                  "workspace_id": "workspace_id",
                  "display_name": "my test source function",
                  "created_at": "2020-07-30T19:15:26.660Z",
                  "created_by": "user_id",
                  "logo_url": "https://logo-url",
                  "type": "SOURCE",
                  "catalog_id": "1234"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Functions"
        ],
        "summary": "Update Function",
        "description": "\n\n| Field         | Subfield | Description              | Required? |\n| ------------- | -------- | ------------------------ | --------- |\n| `update_mask` | `paths`  | array of paths to update | required  |\n| `function`    |          | functions object         | required  |\n\nupdate_mask `paths` may contain: `function.code`, `function.settings`, `functions.display_name`, `functions.logo_url`, `functions.description`\n\n\nDestination Function code updates will **immediately be deployed** to all destination instances.\n\nSource Function code updates **do not** immediately get deployed to all source instances. You will need to call `deploy` on each source function instance for code changes to take effect. See the Sources API `IsLatestVersion` and `Deploy` endpoints. \n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "function": {
                    "code": "// Learn more about source functions API at\n// https://segment.com/docs/connections/sources/source-functions\n\n/**\n * Handle incoming HTTP request\n *\n * @param  {FunctionRequest} request\n * @param  {FunctionSettings} settings\n */\nasync function onRequest(request, settings) {\n\tconst body = request.json();\n\tconsole.log(body);\n\n\t// See https://segment.com/docs/connections/spec/track/\n\tSegment.track({\n\t\tevent: 'Test Event',\n\t\tuserId: 'user_id',\n\t\tproperties: {\n\t\t\ttestProperty: 'testValue'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/identify/\n\tSegment.identify({\n\t\tuserId: 'user_id',\n\t\ttraits: {\n\t\t\tuserName: 'Unicorn'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/group/\n\tSegment.group({\n\t\tgroupId: 'group_id',\n\t\tuserId: 'user_id',\n\t\ttraits: {\n\t\t\tgroupName: 'Unicorn'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/page/\n\tSegment.page({\n\t\tname: 'Home page',\n\t\tuserId: 'user_id',\n\t\tproperties: {\n\t\t\turl: 'https://mywebsite.com/about'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/screen/\n\tSegment.screen({\n\t\tname: 'Test Screen',\n\t\tuserId: 'user_id',\n\t\tproperties: {\n\t\t\turl: 'https://mywebsite.com/about'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/sources/catalog/libraries/server/object-api/\n\tSegment.set({\n\t\tcollection: 'users',\n\t\tid: 'user_id',\n\t\tproperties: {\n\t\t\tuserName: 'Unicorn'\n\t\t}\n\t});\n}\n"
                  },
                  "update_mask": {
                    "paths": [
                      "function.code"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "function_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:44:15 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "367"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-envoy-upstream-service-time": {
                "schema": {
                  "type": "integer",
                  "example": "131"
                }
              },
              "grpc-status": {
                "schema": {
                  "type": "integer",
                  "example": "0"
                }
              },
              "grpc-message": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              },
              "server": {
                "schema": {
                  "type": "string",
                  "example": "envoy"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "code": "// Learn more about source functions API at\n// https://segment.com/docs/connections/sources/source-functions\n\n/**\n * Handle incoming HTTP request\n *\n * @param  {FunctionRequest} request\n * @param  {FunctionSettings} settings\n */\nasync function onRequest(request, settings) {\n\tconst body = request.json();\n\tconsole.log(body);\n\n\t// See https://segment.com/docs/connections/spec/track/\n\tSegment.track({\n\t\tevent: 'Test Event',\n\t\tuserId: 'user_id',\n\t\tproperties: {\n\t\t\ttestProperty: 'testValue'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/identify/\n\tSegment.identify({\n\t\tuserId: 'user_id',\n\t\ttraits: {\n\t\t\tuserName: 'Unicorn'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/group/\n\tSegment.group({\n\t\tgroupId: 'group_id',\n\t\tuserId: 'user_id',\n\t\ttraits: {\n\t\t\tgroupName: 'Unicorn'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/page/\n\tSegment.page({\n\t\tname: 'Home page',\n\t\tuserId: 'user_id',\n\t\tproperties: {\n\t\t\turl: 'https://mywebsite.com/about'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/spec/screen/\n\tSegment.screen({\n\t\tname: 'Test Screen',\n\t\tuserId: 'user_id',\n\t\tproperties: {\n\t\t\turl: 'https://mywebsite.com/about'\n\t\t}\n\t});\n\n\t// See https://segment.com/docs/connections/sources/catalog/libraries/server/object-api/\n\tSegment.set({\n\t\tcollection: 'users',\n\t\tid: 'user_id',\n\t\tproperties: {\n\t\t\tuserName: 'Unicorn'\n\t\t}\n\t});\n}\n",
                  "deployed_at": "2020-06-02T21:04:00Z",
                  "settings": [
                    {
                      "name": "myapiKey",
                      "label": "my api key",
                      "type": "string"
                    },
                    {
                      "name": "mySecret",
                      "label": "my secret key",
                      "type": "string",
                      "sensitive": true
                    }
                  ],
                  "id": "sfnc_1234",
                  "workspace_id": "workspace_id",
                  "display_name": "my test source function",
                  "created_at": "2020-07-30T19:15:26.660Z",
                  "created_by": "user_id",
                  "logo_url": "https://logo-url",
                  "type": "SOURCE",
                  "catalog_id": "1234"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Functions"
        ],
        "summary": "Delete Function",
        "description": "Deleting a function cannot be undone. A function cannot be deleted if it is currently in use. Delete source function or destination function instances (using the Sources and Destinations APIs) before deleting the function.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "function_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "undefined": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{}"
              }
            }
          }
        }
      }
    },
    "/{version}/{workspace_id}/functions/preview": {
      "post": {
        "tags": [
          "Functions"
        ],
        "summary": "Preview Function",
        "description": "`Preview` is used to test function code before updating and deploying.\n\n\n## Preview Input\n| Field        | Type           | Description                                 |          |\n| ------------ | -------------- | ------------------------------------------- | -------- |\n| workspace_id | string         | Metrics enabled for the source              | optional |\n| function     | Function Model | The complete functions object.              | required |\n| type         | string         | Type of function: `SOURCE` or `DESTINATION` | required |\n| payload      | string         | JSON payload to invoke the function         | required |\n\n**Example payload (Source Function)**\n\n```\n{\n  \"payload\": {\n    \"body\": {\"foo\":\"bar\"},\n    \"headers\": {\n      \"Accept\": [\"*/*\"],\n      \"Content-Length\": [\"13\"],\n      \"Content-Type\": [\"application/json\"],\n      \"User-Agent\": [\"curl/7.64.1\"],\n      \"X-Request-Id\": [\"64bcb940-8071-473c-8836-10d4f42b7a24\"]\n    },\n    \"queryParameters\": {}\n  }\n}\n```\n\n**Example payload (Destination Function)**\n\n```\n{\n  \"type\": \"track\",\n  \"event\": \"Test event\",\n  \"userId\": \"foo@example.com\",\n  \"timestamp\": \"2019-11-15T14:26:36-08:00\",\n  \"properties\": {}\n\n```\n\n**Example response**\n```\n{\n  \"invoke\": {\n    \"success\": true,\n    \"output\": \"{\n      \"events\": [{\n        \"type\": \"track\",\n        \"event\": \"Custom Source 1 Executed\",\n        \"userId\": \"1234\"\n      }],\n      \"objects\": []\n    }\",\n    \"trace\": {\n      \"source\": \"preview-1234\",\n      \"version\": \"1234\",\n      \"specversion\": \"1.0\",\n      \"type\": \"com.segment.event.ack\",\n      \"time\": \"2020-07-31T22:16:25.553Z\",\n      \"trace\": {\n        \"name\": \"invoke\",\n        \"time\": \"2020-07-31T22:16:25.553Z\",\n        \"duration\": \"0.201s\",\n        \"logs\": [{\n          \"time\": \"2020-07-31T22:16:25.653Z\",\n          \"key\": \"NOTICE\",\n          \"value\": \"{ foo: 'bar' }\"\n        }]\n      }\n    }\n  },\n  \"logs\": [{\n    \"message\": \"{ foo: 'bar' }\",\n    \"created_at\": \"2020-07-31T22:16:25.656Z\"\n  }],\n  \"session_id\": \"1234\"\n}\n```\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "function": {
                    "code": "// Learn more about source functions API at\r\n// https://segment.com/docs/connections/sources/source-functions\r\n\r\n/**\r\n * Handle incoming HTTP request\r\n *\r\n * @param  {FunctionRequest} request\r\n * @param  {FunctionSettings} settings\r\n */\r\nasync function onRequest(request, settings) {\r\n  const body = request.json()\r\n\r\n  const endpoint = ''; // replace with your endpoint\r\n\tconst response = await fetch(endpoint, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Basic ${btoa(settings.apiKey + ':')}`,\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify(body)\r\n  });\r\n\r\n\tif (!response.ok) {\r\n    console.log(\"ERROR fetching information: \", response)\r\n    return;\r\n  }\r\n\r\n  // See https://segment.com/docs/connections/spec/track/\r\n  Segment.track({\r\n    event: 'Test Event',\r\n    userId: 'user_id',\r\n    properties: {\r\n      testProperty: 'testValue',\r\n      testProperty2: response.propertyName,\r\n    }\r\n  })\r\n\r\n  // See https://segment.com/docs/connections/spec/identify/\r\n  Segment.identify({\r\n    userId: 'user_id',\r\n    traits: {\r\n      userName: 'Unicorn'\r\n    }\r\n  })\r\n\r\n  // See https://segment.com/docs/connections/spec/group/\r\n  Segment.group({\r\n    groupId: 'group_id',\r\n    userId: 'user_id',\r\n    traits: {\r\n      groupName: 'Unicorn'\r\n    }\r\n  })\r\n\r\n  // See https://segment.com/docs/connections/spec/page/\r\n  Segment.page({\r\n    name: 'Home page',\r\n    userId: 'user_id',\r\n    properties: {\r\n      url: 'https://mywebsite.com/about'\r\n    }\r\n  })\r\n\r\n  // See https://segment.com/docs/connections/spec/screen/\r\n  Segment.screen({\r\n    name: 'Test Screen',\r\n    userId: 'user_id',\r\n    properties: {\r\n      url: 'https://mywebsite.com/about'\r\n    }\r\n  })\r\n\r\n  // See https://segment.com/docs/connections/sources/catalog/libraries/server/object-api/\r\n  Segment.set({\r\n    collection: 'users',\r\n    id: 'user_id',\r\n    properties: {\r\n      userName: 'Unicorn'\r\n    }\r\n  })\r\n}",
                    "settings": [
                      {
                        "name": "myapiKey",
                        "label": "my api key",
                        "type": "string",
                        "required": "false",
                        "sensitive": "false"
                      },
                      {
                        "name": "mySecret",
                        "label": "my secret key",
                        "type": "string",
                        "required": "false",
                        "sensitive": "true"
                      }
                    ],
                    "display_name": "test source function"
                  },
                  "type": "SOURCE"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "workspace_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Tue, 16 Oct 2018 20:44:15 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "invoke": {
                    "success": true,
                    "output": "{\"events\":[{\"event\":\"Test Event\",\"userId\":\"user_id\",\"properties\":{\"testProperty\":\"testValue\"},\"type\":\"track\"},{\"userId\":\"user_id\",\"traits\":{\"userName\":\"Unicorn\"},\"type\":\"identify\"},{\"groupId\":\"group_id\",\"userId\":\"user_id\",\"traits\":{\"groupName\":\"Unicorn\"},\"type\":\"group\"},{\"name\":\"Home page\",\"userId\":\"user_id\",\"properties\":{\"url\":\"https://mywebsite.com/about\"},\"type\":\"page\"},{\"name\":\"Test Screen\",\"userId\":\"user_id\",\"properties\":{\"url\":\"https://mywebsite.com/about\"},\"type\":\"screen\"}],\"objects\":[{\"collection\":\"users\",\"id\":\"user_id\",\"properties\":{\"userName\":\"Unicorn\"}}]}",
                    "trace": {
                      "source": "preview-12324",
                      "version": "1234",
                      "specversion": "1.0",
                      "type": "com.segment.event.ack",
                      "time": "2020-07-31T22:16:25.553Z",
                      "trace": {
                        "name": "invoke",
                        "time": "2020-07-31T22:16:25.553Z",
                        "duration": "0.201s",
                        "logs": [
                          {
                            "time": "2020-07-31T22:16:25.653Z",
                            "key": "NOTICE",
                            "value": "{ foo: 'bar' }"
                          }
                        ]
                      }
                    }
                  },
                  "logs": [
                    {
                      "message": "{ foo: 'bar' }",
                      "created_at": "2020-07-31T22:16:25.656Z"
                    }
                  ],
                  "session_id": "123456"
                }
              }
            }
          }
        }
      }
    }
  }
}
